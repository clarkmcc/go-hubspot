{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Associations",
    "description" : "Associations define the relationships between objects in HubSpot. These endpoints allow you to create, read, and remove associations.",
    "version" : "v3"
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com/"
  } ],
  "tags" : [ {
    "name" : "Batch"
  }, {
    "name" : "Types"
  } ],
  "paths" : {
    "/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/archive" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Archive a batch of associations",
        "description" : "Remove the associations between all pairs of objects identified in the request body.",
        "operationId" : "post-/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/archive_archive",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicAssociation"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/create" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create a batch of associations",
        "description" : "Associate all pairs of objects identified in the request body.",
        "operationId" : "post-/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/create_create",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicAssociation"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicAssociation"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicAssociation"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/read" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Read a batch of associations",
        "description" : "Get the IDs of all `{toObjectType}` objects associated with those specified in the request body.",
        "operationId" : "post-/crm/v3/associations/{fromObjectType}/{toObjectType}/batch/read_read",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputPublicObjectId"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicAssociationMulti"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponsePublicAssociationMulti"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/associations/{fromObjectType}/{toObjectType}/types" : {
      "get" : {
        "tags" : [ "Types" ],
        "summary" : "List association types",
        "description" : "List all the valid association types available between two object types",
        "operationId" : "get-/crm/v3/associations/{fromObjectType}/{toObjectType}/types_getAll",
        "parameters" : [ {
          "name" : "fromObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponsePublicAssociationDefiniton"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "PublicObjectId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "The unique ID that identifies an object."
          }
        },
        "example" : {
          "id" : "37295"
        }
      },
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/ErrorCategory"
          },
          "subCategory" : {
            "type" : "object",
            "properties" : { }
          },
          "message" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "An error occurred"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category"
          },
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "invalidPropertyName" : [ "propertyValue" ],
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "PublicAssociationMulti" : {
        "required" : [ "from", "to" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "to" : {
            "type" : "array",
            "description" : "The IDs of objects that are associated with the object identified by the ID in 'from'.",
            "items" : {
              "$ref" : "#/components/schemas/AssociatedId"
            }
          }
        },
        "example" : {
          "from" : {
            "id" : "53628"
          },
          "to" : [ {
            "id" : "12726",
            "type" : "contact_to_company"
          }, {
            "id" : "61352",
            "type" : "contact_to_company"
          } ]
        }
      },
      "PublicAssociation" : {
        "required" : [ "from", "to", "type" ],
        "type" : "object",
        "properties" : {
          "from" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "to" : {
            "$ref" : "#/components/schemas/PublicObjectId"
          },
          "type" : {
            "type" : "string"
          }
        },
        "example" : {
          "from" : {
            "id" : "53628"
          },
          "to" : {
            "id" : "12726"
          },
          "type" : "contact_to_company"
        }
      },
      "CollectionResponsePublicAssociationDefiniton" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationDefiniton"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          }
        }
      },
      "BatchInputPublicObjectId" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicObjectId"
            }
          }
        }
      },
      "ErrorCategory" : {
        "required" : [ "httpStatus", "name" ],
        "type" : "object",
        "properties" : {
          "httpStatus" : {
            "type" : "string",
            "enum" : [ "CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "REQUEST_ENTITY_TOO_LARGE", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "IM_A_TEAPOT", "MISDIRECTED_REQUEST", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADERS_FIELDS_TOO_LARGE", "INTERNAL_STALE_SERVICE_DISCOVERY", "UNAVAILABLE_FOR_LEGAL_REASONS", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED" ]
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "BatchResponsePublicAssociation" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociation"
            }
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "PublicAssociationDefiniton" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "BatchResponsePublicAssociationMulti" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociationMulti"
            }
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "AssociatedId" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "example" : {
          "id" : "172859",
          "type" : "contact_to_company"
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "after" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        }
      },
      "BatchInputPublicAssociation" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PublicAssociation"
            }
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.custom.read" : "View custom object records",
              "contacts" : "Read from and write to my Contacts",
              "crm.objects.custom.write" : "Change custom object records",
              "e-commerce" : "e-commerce",
              "media_bridge.read" : "Read media and media events",
              "tickets" : "Read and write tickets"
            }
          }
        }
      },
      "hapikey" : {
        "type" : "apiKey",
        "name" : "hapikey",
        "in" : "query"
      },
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.quotes.write" : "Quotes",
              "crm.objects.contacts.read" : " ",
              "crm.objects.contacts.write" : " ",
              "crm.objects.companies.write" : " ",
              "crm.objects.companies.read" : " ",
              "crm.objects.line_items.write" : "Line Items",
              "crm.objects.quotes.read" : "Quotes",
              "crm.objects.deals.write" : " ",
              "crm.objects.line_items.read" : "Line Items",
              "crm.objects.deals.read" : " "
            }
          }
        }
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Python", "Ruby" ]
}