{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "CRM Objects",
    "description" : "CRM objects such as companies, contacts, deals, line items, products, tickets, and quotes are standard objects in HubSpotâ€™s CRM. These core building blocks support custom properties, store critical information, and play a central role in the HubSpot application.\n\n## Supported Object Types\n\nThis API provides access to collections of CRM objects, which return a map of property names to values. Each object type has its own set of default properties, which can be found by exploring the [CRM Object Properties API](https://developers.hubspot.com/docs/methods/crm-properties/crm-properties-overview).\n\n|Object Type |Properties returned by default |\n|--|--|\n| `companies` | `name`, `domain` |\n| `contacts` | `firstname`, `lastname`, `email` |\n| `deals` | `dealname`, `amount`, `closedate`, `pipeline`, `dealstage` |\n| `products` | `name`, `description`, `price` |\n| `tickets` | `content`, `hs_pipeline`, `hs_pipeline_stage`, `hs_ticket_category`, `hs_ticket_priority`, `subject` |\n\nFind a list of all properties for an object type using the [CRM Object Properties](https://developers.hubspot.com/docs/methods/crm-properties/get-properties) API. e.g. `GET https://api.hubapi.com/properties/v2/companies/properties`. Change the properties returned in the response using the `properties` array in the request body.",
    "version" : "v3"
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com/"
  } ],
  "tags" : [ {
    "name" : "Associations"
  }, {
    "name" : "Basic"
  }, {
    "name" : "Batch"
  }, {
    "name" : "GDPR"
  }, {
    "name" : "Search"
  }, {
    "name" : "Public_Object"
  } ],
  "paths" : {
    "/crm/v3/objects/{objectType}" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "List",
        "description" : "Read a page of objects. Control what is returned via the `properties` query param.",
        "operationId" : "GetPage",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to display per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "propertiesWithHistory",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored. Usage of this parameter will reduce the maximum number of objects that can be read by a single request.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "associations",
          "in" : "query",
          "description" : "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      },
      "post" : {
        "tags" : [ "Basic" ],
        "summary" : "Create",
        "description" : "Create a CRM object with the given properties and return a copy of the object, including the ID. Documentation and examples for creating standard objects is provided.",
        "operationId" : "Create",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SimplePublicObjectInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/batch/archive" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Archive a batch of objects by ID",
        "operationId" : "BatchArchive",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/batch/create" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Create a batch of objects",
        "operationId" : "BatchCreate",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/batch/read" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Read a batch of objects by internal ID, or unique property values",
        "operationId" : "BatchRead",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchReadInputSimplePublicObjectId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/batch/update" : {
      "post" : {
        "tags" : [ "Batch" ],
        "summary" : "Update a batch of objects",
        "operationId" : "BatchUpdate",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BatchInputSimplePublicObjectBatchInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObject"
                }
              }
            }
          },
          "207" : {
            "description" : "multiple statuses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BatchResponseSimplePublicObjectWithErrors"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/gdpr-delete" : {
      "post" : {
        "tags" : [ "GDPR" ],
        "summary" : "GDPR DELETE",
        "description" : "Permanently delete a contact and all associated content to follow GDPR. Use optional property 'idProperty' set to 'email' to identify contact by email address. If email address is not found, the email address will be added to a blocklist and prevent it from being used in the future.",
        "operationId" : "Delete",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicGdprDeleteInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/merge" : {
      "post" : {
        "tags" : [ "Public_Object" ],
        "summary" : "Merge two objects with same type",
        "operationId" : "Merge",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicMergeInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/search" : {
      "post" : {
        "tags" : [ "Search" ],
        "operationId" : "Search",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PublicObjectSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      }
    },
    "/crm/v3/objects/{objectType}/{objectId}" : {
      "get" : {
        "tags" : [ "Basic" ],
        "summary" : "Read",
        "description" : "Read an Object identified by `{objectId}`. `{objectId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param.  Control what is returned via the `properties` query param.",
        "operationId" : "GetByID",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned in the response. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "propertiesWithHistory",
          "in" : "query",
          "description" : "A comma separated list of the properties to be returned along with their history of previous values. If any of the specified properties are not present on the requested object(s), they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "associations",
          "in" : "query",
          "description" : "A comma separated list of object types to retrieve associated IDs for. If any of the specified associations do not exist, they will be ignored.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "archived",
          "in" : "query",
          "description" : "Whether to return only results that have been archived.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "idProperty",
          "in" : "query",
          "description" : "The name of a property whose values are unique for this object type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObjectWithAssociations"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Basic" ],
        "summary" : "Archive",
        "description" : "Move an Object identified by `{objectId}` to the recycling bin.",
        "operationId" : "Archive",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      },
      "patch" : {
        "tags" : [ "Basic" ],
        "summary" : "Update",
        "description" : "Perform a partial update of an Object identified by `{objectId}`. `{objectId}` refers to the internal object ID by default, or optionally any unique property value as specified by the `idProperty` query param. Provided property values will be overwritten. Read-only and non-existent properties will be ignored. Properties values can be cleared by passing an empty string.",
        "operationId" : "Update",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "idProperty",
          "in" : "query",
          "description" : "The name of a property whose values are unique for this object type",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SimplePublicObjectInput"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObject"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/{objectId}/associations/{toObjectType}" : {
      "get" : {
        "tags" : [ "Associations" ],
        "summary" : "List associations of an object by type",
        "operationId" : "AssociationsGetAll",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "after",
          "in" : "query",
          "description" : "The paging cursor token of the last successfully read resource will be returned as the `paging.next.after` JSON property of a paged response containing more results.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of results to display per page.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 500
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionResponseAssociatedIdForwardPaging"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    },
    "/crm/v3/objects/{objectType}/{objectId}/associations/{toObjectType}/{toObjectId}/{associationType}" : {
      "put" : {
        "tags" : [ "Associations" ],
        "summary" : "Associate an object with another object",
        "operationId" : "AssociationsCreate",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "associationType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimplePublicObjectWithAssociations"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Associations" ],
        "summary" : "Remove an association between two objects",
        "operationId" : "AssociationsArchive",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toObjectId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "associationType",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "oauth2" : [ "crm.objects.quotes.write" ]
        }, {
          "oauth2_legacy" : [ "media_bridge.read" ]
        }, {
          "oauth2_legacy" : [ "tickets" ]
        }, {
          "oauth2" : [ "crm.objects.contacts.read" ]
        }, {
          "hapikey" : [ ]
        }, {
          "oauth2" : [ "crm.objects.contacts.write" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.read" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.read" ]
        }, {
          "oauth2" : [ "crm.objects.line_items.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.read" ]
        }, {
          "oauth2" : [ "crm.objects.deals.write" ]
        }, {
          "oauth2_legacy" : [ "e-commerce" ]
        }, {
          "oauth2" : [ "crm.objects.quotes.read" ]
        }, {
          "oauth2_legacy" : [ "contacts" ]
        }, {
          "oauth2_legacy" : [ "crm.objects.custom.write" ]
        }, {
          "oauth2" : [ "crm.objects.companies.write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "StandardError" : {
        "required" : [ "category", "context", "errors", "links", "message", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/ErrorCategory"
          },
          "subCategory" : {
            "type" : "object",
            "properties" : { }
          },
          "message" : {
            "type" : "string"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "CollectionResponseAssociatedId" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociatedId"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/Paging"
          }
        }
      },
      "BatchResponseSimplePublicObject" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "FilterGroup" : {
        "required" : [ "filters" ],
        "type" : "object",
        "properties" : {
          "filters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Filter"
            }
          }
        }
      },
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          }
        }
      },
      "ForwardPaging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          }
        }
      },
      "SimplePublicObjectId" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          }
        }
      },
      "BatchReadInputSimplePublicObjectId" : {
        "required" : [ "inputs", "properties", "propertiesWithHistory" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "propertiesWithHistory" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "idProperty" : {
            "type" : "string"
          },
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectId"
            }
          }
        }
      },
      "BatchInputSimplePublicObjectId" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectId"
            }
          }
        }
      },
      "ValueWithTimestamp" : {
        "required" : [ "sourceType", "timestamp", "value" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "sourceType" : {
            "type" : "string"
          },
          "sourceId" : {
            "type" : "string"
          },
          "sourceLabel" : {
            "type" : "string"
          },
          "updatedByUserId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CollectionResponseWithTotalSimplePublicObjectForwardPaging" : {
        "required" : [ "results", "total" ],
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          }
        }
      },
      "SimplePublicObject" : {
        "required" : [ "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean"
          },
          "archivedAt" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "example" : {
          "id" : "512",
          "properties" : {
            "property_string" : "value",
            "property_number" : "17",
            "property_date" : "1572480000000",
            "property_radio" : "option_1",
            "property_dropdown" : "choice_b",
            "property_checkbox" : "false",
            "property_multiple_checkboxes" : "chocolate;strawberry"
          },
          "createdAt" : "2019-10-30T03:30:17.883Z",
          "updatedAt" : "2019-12-07T16:50:06.678Z",
          "archived" : false
        }
      },
      "BatchInputSimplePublicObjectInput" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectInput"
            }
          }
        }
      },
      "Paging" : {
        "type" : "object",
        "properties" : {
          "next" : {
            "$ref" : "#/components/schemas/NextPage"
          },
          "prev" : {
            "$ref" : "#/components/schemas/PreviousPage"
          }
        }
      },
      "PublicObjectSearchRequest" : {
        "required" : [ "after", "filterGroups", "limit", "properties", "sorts" ],
        "type" : "object",
        "properties" : {
          "filterGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FilterGroup"
            }
          },
          "sorts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "query" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "after" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "An error occurred"
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category"
          },
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "invalidPropertyName" : [ "propertyValue" ],
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps"
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "BatchResponseSimplePublicObjectWithErrors" : {
        "required" : [ "completedAt", "results", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObject"
            }
          },
          "numErrors" : {
            "type" : "integer",
            "format" : "int32"
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StandardError"
            }
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "PublicGdprDeleteInput" : {
        "required" : [ "objectId" ],
        "type" : "object",
        "properties" : {
          "objectId" : {
            "type" : "string"
          },
          "idProperty" : {
            "type" : "string"
          }
        }
      },
      "SimplePublicObjectInput" : {
        "required" : [ "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "example" : {
          "properties" : {
            "property_string" : "value",
            "property_number" : "17",
            "property_date" : "1572480000000",
            "property_radio" : "option_1",
            "property_dropdown" : "choice_b",
            "property_checkbox" : "false",
            "property_multiple_checkboxes" : "chocolate;strawberry"
          }
        }
      },
      "CollectionResponseSimplePublicObjectWithAssociationsForwardPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectWithAssociations"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          }
        }
      },
      "PublicMergeInput" : {
        "required" : [ "objectIdToMerge", "primaryObjectId" ],
        "type" : "object",
        "properties" : {
          "primaryObjectId" : {
            "type" : "string"
          },
          "objectIdToMerge" : {
            "type" : "string"
          }
        }
      },
      "ErrorCategory" : {
        "required" : [ "httpStatus", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "httpStatus" : {
            "type" : "string",
            "enum" : [ "CONTINUE", "SWITCHING_PROTOCOLS", "PROCESSING", "OK", "CREATED", "ACCEPTED", "NON_AUTHORITATIVE_INFORMATION", "NO_CONTENT", "RESET_CONTENT", "PARTIAL_CONTENT", "MULTI_STATUS", "ALREADY_REPORTED", "IM_USED", "MULTIPLE_CHOICES", "MOVED_PERMANENTLY", "FOUND", "SEE_OTHER", "NOT_MODIFIED", "USE_PROXY", "TEMPORARY_REDIRECT", "PERMANENT_REDIRECT", "BAD_REQUEST", "UNAUTHORIZED", "PAYMENT_REQUIRED", "FORBIDDEN", "NOT_FOUND", "METHOD_NOT_ALLOWED", "NOT_ACCEPTABLE", "PROXY_AUTHENTICATION_REQUIRED", "REQUEST_TIMEOUT", "CONFLICT", "GONE", "LENGTH_REQUIRED", "PRECONDITION_FAILED", "REQUEST_ENTITY_TOO_LARGE", "REQUEST_URI_TOO_LONG", "UNSUPPORTED_MEDIA_TYPE", "REQUESTED_RANGE_NOT_SATISFIABLE", "EXPECTATION_FAILED", "IM_A_TEAPOT", "MISDIRECTED_REQUEST", "UNPROCESSABLE_ENTITY", "LOCKED", "FAILED_DEPENDENCY", "UPGRADE_REQUIRED", "PRECONDITION_REQUIRED", "TOO_MANY_REQUESTS", "REQUEST_HEADERS_FIELDS_TOO_LARGE", "INTERNAL_STALE_SERVICE_DISCOVERY", "UNAVAILABLE_FOR_LEGAL_REASONS", "MIGRATION_IN_PROGRESS", "INTERNAL_SERVER_ERROR", "NOT_IMPLEMENTED", "BAD_GATEWAY", "SERVICE_UNAVAILABLE", "GATEWAY_TIMEOUT", "HTTP_VERSION_NOT_SUPPORTED", "VARIANT_ALSO_NEGOTIATES", "INSUFFICIENT_STORAGE", "LOOP_DETECTED", "NOT_EXTENDED", "NETWORK_AUTHENTICATION_REQUIRED" ]
          }
        }
      },
      "SimplePublicObjectWithAssociations" : {
        "required" : [ "createdAt", "id", "properties", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "propertiesWithHistory" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/components/schemas/ValueWithTimestamp"
              }
            }
          },
          "createdAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updatedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "archived" : {
            "type" : "boolean"
          },
          "archivedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "associations" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/CollectionResponseAssociatedId"
            }
          }
        }
      },
      "Filter" : {
        "required" : [ "operator", "propertyName" ],
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "propertyName" : {
            "type" : "string"
          },
          "operator" : {
            "type" : "string",
            "description" : "null",
            "enum" : [ "EQ", "NEQ", "LT", "LTE", "GT", "GTE", "BETWEEN", "IN", "NOT_IN", "HAS_PROPERTY", "NOT_HAS_PROPERTY", "CONTAINS_TOKEN", "NOT_CONTAINS_TOKEN" ]
          }
        }
      },
      "BatchInputSimplePublicObjectBatchInput" : {
        "required" : [ "inputs" ],
        "type" : "object",
        "properties" : {
          "inputs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SimplePublicObjectBatchInput"
            }
          }
        }
      },
      "PreviousPage" : {
        "required" : [ "before" ],
        "type" : "object",
        "properties" : {
          "before" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        }
      },
      "CollectionResponseAssociatedIdForwardPaging" : {
        "required" : [ "results" ],
        "type" : "object",
        "properties" : {
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AssociatedId"
            }
          },
          "paging" : {
            "$ref" : "#/components/schemas/ForwardPaging"
          }
        }
      },
      "SimplePublicObjectBatchInput" : {
        "required" : [ "id", "properties" ],
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          }
        }
      },
      "AssociatedId" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "NextPage" : {
        "required" : [ "after" ],
        "type" : "object",
        "properties" : {
          "after" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          }
        },
        "example" : {
          "after" : "NTI1Cg%3D%3D",
          "link" : "?after=NTI1Cg%3D%3D"
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.custom.read" : "View custom object records",
              "contacts" : "Read from and write to my Contacts",
              "crm.objects.custom.write" : "Change custom object records",
              "e-commerce" : "e-commerce",
              "media_bridge.read" : "Read media and media events",
              "tickets" : "Read and write tickets"
            }
          }
        }
      },
      "hapikey" : {
        "type" : "apiKey",
        "name" : "hapikey",
        "in" : "query"
      },
      "oauth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "crm.objects.quotes.write" : "Quotes",
              "crm.objects.contacts.read" : " ",
              "crm.objects.contacts.write" : " ",
              "crm.objects.companies.write" : " ",
              "crm.objects.companies.read" : " ",
              "crm.objects.line_items.write" : "Line Items",
              "crm.objects.quotes.read" : "Quotes",
              "crm.objects.deals.write" : " ",
              "crm.objects.line_items.read" : "Line Items",
              "crm.objects.deals.read" : " "
            }
          }
        }
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Python", "Ruby" ]
}