{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "CMS Source Code",
    "description" : "Endpoints for interacting with files in the CMS Developer File System. These files include HTML templates, CSS, JS, modules, and other assets which are used to create CMS content.",
    "version" : "v3",
    "x-hubspot-product-tier-requirements" : {
      "marketing" : "FREE",
      "cms" : "FREE"
    },
    "x-hubspot-documentation-banner" : "NONE",
    "x-hubspot-api-use-case" : "Retrieve a drafted website page template to view its contents before publishing.",
    "x-hubspot-related-documentation" : [ {
      "name" : "Source Code Guide",
      "url" : "https://hubspot.dev/guides/api/cms/source-code"
    } ],
    "x-hubspot-introduction" : "Use the source code API to interact with files stored in the developer file system. These files are surfaced in the design manager, and include template, module, CSS, JavaScript, and other CMS asset files."
  },
  "servers" : [ {
    "url" : "https://api.hubapi.com"
  } ],
  "tags" : [ {
    "name" : "Content"
  }, {
    "name" : "Metadata"
  }, {
    "name" : "Validation"
  }, {
    "name" : "Extract"
  }, {
    "name" : "Source_Code_Extract"
  } ],
  "paths" : {
    "/cms/v3/source-code/{environment}/content/{path}" : {
      "get" : {
        "tags" : [ "Content" ],
        "summary" : "Download a file",
        "description" : "Downloads the byte contents of the file at the specified path in the specified environment.",
        "operationId" : "get-/cms/v3/source-code/{environment}/content/{path}_download",
        "parameters" : [ {
          "name" : "environment",
          "in" : "path",
          "description" : "The environment of the file (\"draft\" or \"published\").",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "path",
          "description" : "The file system location of the file.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      },
      "put" : {
        "tags" : [ "Content" ],
        "summary" : "Create or update a file",
        "description" : "Upserts a file at the specified path in the specified environment. Accepts multipart/form-data content type.",
        "operationId" : "put-/cms/v3/source-code/{environment}/content/{path}_createOrUpdate",
        "parameters" : [ {
          "name" : "environment",
          "in" : "path",
          "description" : "The environment of the file (\"draft\" or \"published\").",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "path",
          "description" : "The file system location of the file.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload.",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFileMetadata"
                },
                "example" : {
                  "id" : "/example.json",
                  "name" : "example.json",
                  "folder" : false,
                  "children" : [ ],
                  "updatedAt" : 1608049506,
                  "createdAt" : 1608049506,
                  "archivedAt" : 0
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      },
      "post" : {
        "tags" : [ "Content" ],
        "summary" : "Create a file",
        "description" : "Creates a file at the specified path in the specified environment. Accepts multipart/form-data content type. Throws an error if a file already exists at the specified path.",
        "operationId" : "ContentCreate",
        "parameters" : [ {
          "name" : "environment",
          "in" : "path",
          "description" : "The environment of the file (\"draft\" or \"published\").",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "path",
          "description" : "The file system location of the file.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to upload.",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFileMetadata"
                },
                "example" : {
                  "id" : "/example.json",
                  "name" : "example.json",
                  "folder" : false,
                  "children" : [ ],
                  "updatedAt" : 1608049506,
                  "createdAt" : 1608049506,
                  "archivedAt" : 0
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      },
      "delete" : {
        "tags" : [ "Content" ],
        "summary" : "Delete a file",
        "description" : "Deletes the file at the specified path in the specified environment.",
        "operationId" : "ContentArchive",
        "parameters" : [ {
          "name" : "environment",
          "in" : "path",
          "description" : "The environment of the file (\"draft\" or \"published\").",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "path",
          "description" : "The file system location of the file.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      }
    },
    "/cms/v3/source-code/{environment}/metadata/{path}" : {
      "get" : {
        "tags" : [ "Metadata" ],
        "summary" : "Get the metadata for a file",
        "description" : "Gets the metadata object for the file at the specified path in the specified environment.",
        "operationId" : "MetadataGet",
        "parameters" : [ {
          "name" : "environment",
          "in" : "path",
          "description" : "The environment of the file (\"draft\" or \"published\").",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "path",
          "in" : "path",
          "description" : "The file system location of the file.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AssetFileMetadata"
                },
                "example" : {
                  "id" : "/example.json",
                  "name" : "example.json",
                  "folder" : false,
                  "children" : [ ],
                  "updatedAt" : 1608049506,
                  "createdAt" : 1608049506,
                  "archivedAt" : 0
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      }
    },
    "/cms/v3/source-code/{environment}/validate/{path}" : {
      "post" : {
        "tags" : [ "Validation" ],
        "summary" : "Validate the contents of a file",
        "description" : "Validates the file contents passed to the endpoint given a specified path and environment. Accepts multipart/form-data content type.",
        "operationId" : "Validate",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "description" : "The file system location of the file.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "description" : "The file to validate.",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ],
        "x-hubspot-rate-limit-exemptions" : [ "ten-secondly" ]
      }
    },
    "/cms/v3/source-code/extract/{path}" : {
      "post" : {
        "tags" : [ "Extract" ],
        "summary" : "Extracts a zip file",
        "description" : "Extracts a zip file in the file system. The zip file will be extracted in-place and not be deleted automatically.",
        "operationId" : "ExtractByPath",
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "description" : "The file system location of the zip file.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : ".+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No content",
            "content" : { }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "deprecated" : true,
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/source-code/extract/async" : {
      "post" : {
        "tags" : [ "Source_Code_Extract" ],
        "operationId" : "ExtractAsync",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileExtractRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "accepted",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskLocator"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    },
    "/cms/v3/source-code/extract/async/tasks/{taskId}/status" : {
      "get" : {
        "tags" : [ "Source_Code_Extract" ],
        "operationId" : "ExtractGetAsyncStatus",
        "parameters" : [ {
          "name" : "taskId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ActionResponse"
                }
              }
            }
          },
          "default" : {
            "$ref" : "#/components/responses/Error"
          }
        },
        "security" : [ {
          "private_apps_legacy" : [ "content" ]
        }, {
          "oauth2_legacy" : [ "content" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorDetail" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "code" : {
            "type" : "string",
            "description" : "The status code associated with the error detail"
          },
          "in" : {
            "type" : "string",
            "description" : "The name of the field or parameter in which the error was found."
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ]
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate"
          }
        }
      },
      "AssetFileMetadata" : {
        "required" : [ "createdAt", "folder", "id", "name", "updatedAt" ],
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "type" : "integer",
            "description" : "Timestamp of when the object was first created.",
            "format" : "int32"
          },
          "archivedAt" : {
            "type" : "integer",
            "description" : "Timestamp of when the object was archived (deleted).",
            "format" : "int64"
          },
          "folder" : {
            "type" : "boolean",
            "description" : "Determines whether or not this path points to a folder."
          },
          "children" : {
            "type" : "array",
            "description" : "If the object is a folder, contains the filenames of the files within the folder.",
            "items" : {
              "type" : "string"
            }
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the file."
          },
          "id" : {
            "type" : "string",
            "description" : "The path of the file in the CMS Developer File System."
          },
          "hash" : {
            "type" : "string"
          },
          "updatedAt" : {
            "type" : "integer",
            "description" : "Timestamp of when the object was last updated.",
            "format" : "int32"
          }
        },
        "description" : "The object metadata of a file."
      },
      "FileExtractRequest" : {
        "required" : [ "path" ],
        "type" : "object",
        "properties" : {
          "path" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "required" : [ "category", "correlationId", "message" ],
        "type" : "object",
        "properties" : {
          "subCategory" : {
            "type" : "string",
            "description" : "A specific category that contains more specific detail about the error"
          },
          "context" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "description" : "Context about the error condition",
            "example" : {
              "missingScopes" : [ "scope1", "scope2" ],
              "invalidPropertyName" : [ "propertyValue" ]
            }
          },
          "correlationId" : {
            "type" : "string",
            "description" : "A unique identifier for the request. Include this value with any error reports or support tickets",
            "format" : "uuid",
            "example" : "aeb5f871-7f07-4993-9211-075dc63e7cbf"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "A map of link names to associated URIs containing documentation about the error or recommended remediation steps",
            "example" : {
              "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
            }
          },
          "message" : {
            "type" : "string",
            "description" : "A human readable message describing the error along with remediation steps where appropriate",
            "example" : "Invalid input (details will vary based on the error)"
          },
          "category" : {
            "type" : "string",
            "description" : "The error category",
            "example" : "VALIDATION_ERROR"
          },
          "errors" : {
            "type" : "array",
            "description" : "further information about the error",
            "items" : {
              "$ref" : "#/components/schemas/ErrorDetail"
            }
          }
        },
        "example" : {
          "message" : "Invalid input (details will vary based on the error)",
          "correlationId" : "aeb5f871-7f07-4993-9211-075dc63e7cbf",
          "category" : "VALIDATION_ERROR",
          "links" : {
            "knowledge-base" : "https://www.hubspot.com/products/service/knowledge-base"
          }
        }
      },
      "ActionResponse" : {
        "required" : [ "completedAt", "startedAt", "status" ],
        "type" : "object",
        "properties" : {
          "completedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "requestedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "startedAt" : {
            "type" : "string",
            "format" : "date-time"
          },
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "status" : {
            "type" : "string",
            "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ]
          }
        }
      },
      "TaskLocator" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "links" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "id" : {
            "type" : "string"
          }
        }
      }
    },
    "responses" : {
      "Error" : {
        "description" : "An error occurred.",
        "content" : {
          "*/*" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "oauth2_legacy" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://app.hubspot.com/oauth/authorize",
            "tokenUrl" : "https://api.hubapi.com/oauth/v1/token",
            "scopes" : {
              "content" : "Read from and write to my Content"
            }
          }
        }
      },
      "private_apps_legacy" : {
        "type" : "apiKey",
        "name" : "private-app-legacy",
        "in" : "header"
      }
    }
  },
  "x-hubspot-available-client-libraries" : [ "PHP", "Node", "Ruby", "Python" ],
  "x-hubspot-product-tier-requirements" : {
    "marketing" : "FREE",
    "cms" : "FREE"
  },
  "x-hubspot-documentation-banner" : "NONE"
}