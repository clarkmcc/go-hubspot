openapi: 3.0.1
info:
  title: Tickets
  version: v3
servers:
- url: https://api.hubapi.com/
tags:
- name: Associations
- name: Basic
- name: Batch
- name: Search
- name: Public_Object
paths:
  /crm/v3/objects/tickets:
    get:
      description: Read a page of tickets. Control what is returned via the `properties`
        query param.
      operationId: GetPage
      parameters:
      - description: The maximum number of results to display per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - description: The paging cursor token of the last successfully read resource
          will be returned as the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: "A comma separated list of the properties to be returned in the\
          \ response. If any of the specified properties are not present on the requested\
          \ object(s), they will be ignored."
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A comma separated list of the properties to be returned along\
          \ with their history of previous values. If any of the specified properties\
          \ are not present on the requested object(s), they will be ignored. Usage\
          \ of this parameter will reduce the maximum number of objects that can be\
          \ read by a single request."
        explode: true
        in: query
        name: propertiesWithHistory
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A comma separated list of object types to retrieve associated\
          \ IDs for. If any of the specified associations do not exist, they will\
          \ be ignored."
        explode: true
        in: query
        name: associations
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Whether to return only results that have been archived.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseSimplePublicObjectWithAssociationsForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: List
      tags:
      - Basic
    post:
      description: "Create a ticket with the given properties and return a copy of\
        \ the object, including the ID. Documentation and examples for creating standard\
        \ tickets is provided."
      operationId: Create
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Create
      tags:
      - Basic
  /crm/v3/objects/tickets/batch/archive:
    post:
      operationId: BatchArchive
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputSimplePublicObjectId'
        required: true
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Archive a batch of tickets by ID
      tags:
      - Batch
  /crm/v3/objects/tickets/batch/create:
    post:
      operationId: BatchCreate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputSimplePublicObjectInputForCreate'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseSimplePublicObject'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseSimplePublicObjectWithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Create a batch of tickets
      tags:
      - Batch
  /crm/v3/objects/tickets/batch/read:
    post:
      operationId: BatchRead
      parameters:
      - description: Whether to return only results that have been archived.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchReadInputSimplePublicObjectId'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseSimplePublicObject'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseSimplePublicObjectWithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: "Read a batch of tickets by internal ID, or unique property values"
      tags:
      - Batch
  /crm/v3/objects/tickets/batch/update:
    post:
      operationId: BatchUpdate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputSimplePublicObjectBatchInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseSimplePublicObject'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseSimplePublicObjectWithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Update a batch of tickets
      tags:
      - Batch
  /crm/v3/objects/tickets/merge:
    post:
      operationId: Merge
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicMergeInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Merge two tickets with same type
      tags:
      - Public_Object
  /crm/v3/objects/tickets/search:
    post:
      operationId: Search
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicObjectSearchRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalSimplePublicObjectForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      tags:
      - Search
      x-hubspot-rate-limit-exemptions:
      - ten-secondly
  /crm/v3/objects/tickets/{ticketId}:
    delete:
      description: "Move an Object identified by `{ticketId}` to the recycling bin."
      operationId: Archive
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Archive
      tags:
      - Basic
    get:
      description: "Read an Object identified by `{ticketId}`. `{ticketId}` refers\
        \ to the internal object ID by default, or optionally any unique property\
        \ value as specified by the `idProperty` query param.  Control what is returned\
        \ via the `properties` query param."
      operationId: GetByID
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: "A comma separated list of the properties to be returned in the\
          \ response. If any of the specified properties are not present on the requested\
          \ object(s), they will be ignored."
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A comma separated list of the properties to be returned along\
          \ with their history of previous values. If any of the specified properties\
          \ are not present on the requested object(s), they will be ignored."
        explode: true
        in: query
        name: propertiesWithHistory
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "A comma separated list of object types to retrieve associated\
          \ IDs for. If any of the specified associations do not exist, they will\
          \ be ignored."
        explode: true
        in: query
        name: associations
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Whether to return only results that have been archived.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: The name of a property whose values are unique for this object
          type
        explode: true
        in: query
        name: idProperty
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObjectWithAssociations'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Read
      tags:
      - Basic
    patch:
      description: "Perform a partial update of an Object identified by `{ticketId}`.\
        \ `{ticketId}` refers to the internal object ID by default, or optionally\
        \ any unique property value as specified by the `idProperty` query param.\
        \ Provided property values will be overwritten. Read-only and non-existent\
        \ properties will be ignored. Properties values can be cleared by passing\
        \ an empty string."
      operationId: Update
      parameters:
      - explode: false
        in: path
        name: ticketId
        required: true
        schema:
          type: string
        style: simple
      - description: The name of a property whose values are unique for this object
          type
        explode: true
        in: query
        name: idProperty
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimplePublicObjectInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimplePublicObject'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - tickets
      summary: Update
      tags:
      - Basic
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    StandardError:
      properties:
        status:
          type: string
        id:
          type: string
        category:
          type: string
        subCategory:
          properties: {}
          type: object
        message:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - category
      - context
      - errors
      - links
      - message
      - status
      type: object
    CollectionResponseAssociatedId:
      properties:
        results:
          items:
            $ref: '#/components/schemas/AssociatedId'
          type: array
        paging:
          $ref: '#/components/schemas/Paging'
      required:
      - results
      type: object
    PublicAssociationsForObject:
      properties:
        to:
          $ref: '#/components/schemas/PublicObjectId'
        types:
          items:
            $ref: '#/components/schemas/AssociationSpec'
          type: array
      required:
      - to
      - types
      type: object
    BatchResponseSimplePublicObject:
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        requestedAt: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        links:
          key: links
        results:
        - id: "512"
          properties:
            createdate: 2019-10-30T03:30:17.883Z
            hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
        - id: "512"
          properties:
            createdate: 2019-10-30T03:30:17.883Z
            hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
        status: PENDING
      properties:
        status:
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
        results:
          items:
            $ref: '#/components/schemas/SimplePublicObject'
          type: array
        requestedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        completedAt:
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - completedAt
      - results
      - startedAt
      - status
      type: object
    FilterGroup:
      example:
        filters:
        - highValue: highValue
          propertyName: propertyName
          values:
          - values
          - values
          value: value
          operator: EQ
        - highValue: highValue
          propertyName: propertyName
          values:
          - values
          - values
          value: value
          operator: EQ
      properties:
        filters:
          items:
            $ref: '#/components/schemas/Filter'
          type: array
      required:
      - filters
      type: object
    ErrorDetail:
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
      required:
      - message
      type: object
    ForwardPaging:
      example:
        next:
          after: NTI1Cg%3D%3D
          link: ?after=NTI1Cg%3D%3D
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
      type: object
    SimplePublicObjectId:
      example:
        id: id
      properties:
        id:
          type: string
      required:
      - id
      type: object
    BatchReadInputSimplePublicObjectId:
      example:
        propertiesWithHistory:
        - propertiesWithHistory
        - propertiesWithHistory
        idProperty: idProperty
        inputs:
        - id: id
        - id: id
        properties:
        - properties
        - properties
      properties:
        properties:
          items:
            type: string
          type: array
        propertiesWithHistory:
          items:
            type: string
          type: array
        idProperty:
          type: string
        inputs:
          items:
            $ref: '#/components/schemas/SimplePublicObjectId'
          type: array
      required:
      - inputs
      - properties
      - propertiesWithHistory
      type: object
    ValueWithTimestamp:
      properties:
        value:
          type: string
        timestamp:
          format: date-time
          type: string
        sourceType:
          type: string
        sourceId:
          type: string
        sourceLabel:
          type: string
        updatedByUserId:
          format: int32
          type: integer
      required:
      - sourceType
      - timestamp
      - value
      type: object
    BatchInputSimplePublicObjectId:
      example:
        inputs:
        - id: id
        - id: id
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/SimplePublicObjectId'
          type: array
      required:
      - inputs
      type: object
    CollectionResponseWithTotalSimplePublicObjectForwardPaging:
      example:
        total: 0
        paging:
          next:
            after: NTI1Cg%3D%3D
            link: ?after=NTI1Cg%3D%3D
        results:
        - id: "512"
          properties:
            createdate: 2019-10-30T03:30:17.883Z
            hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
        - id: "512"
          properties:
            createdate: 2019-10-30T03:30:17.883Z
            hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
      properties:
        total:
          format: int32
          type: integer
        results:
          items:
            $ref: '#/components/schemas/SimplePublicObject'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardPaging'
      required:
      - results
      - total
      type: object
    SimplePublicObject:
      example:
        id: "512"
        properties:
          createdate: 2019-10-30T03:30:17.883Z
          hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          hubspot_owner_id: "910901"
          subject: troubleshoot report
        createdAt: 2019-10-30T03:30:17.883Z
        updatedAt: 2019-12-07T16:50:06.678Z
        archived: false
      properties:
        id:
          type: string
        properties:
          additionalProperties:
            nullable: true
            type: string
          type: object
        propertiesWithHistory:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ValueWithTimestamp'
            type: array
          type: object
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        archived:
          type: boolean
        archivedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - properties
      - updatedAt
      type: object
    PublicObjectId:
      properties:
        id:
          type: string
      required:
      - id
      type: object
    Paging:
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
        prev:
          $ref: '#/components/schemas/PreviousPage'
      type: object
    PublicObjectSearchRequest:
      example:
        query: query
        limit: 0
        after: 6
        sorts:
        - sorts
        - sorts
        properties:
        - properties
        - properties
        filterGroups:
        - filters:
          - highValue: highValue
            propertyName: propertyName
            values:
            - values
            - values
            value: value
            operator: EQ
          - highValue: highValue
            propertyName: propertyName
            values:
            - values
            - values
            value: value
            operator: EQ
        - filters:
          - highValue: highValue
            propertyName: propertyName
            values:
            - values
            - values
            value: value
            operator: EQ
          - highValue: highValue
            propertyName: propertyName
            values:
            - values
            - values
            value: value
            operator: EQ
      properties:
        filterGroups:
          items:
            $ref: '#/components/schemas/FilterGroup'
          type: array
        sorts:
          items:
            type: string
          type: array
        query:
          type: string
        properties:
          items:
            type: string
          type: array
        limit:
          format: int32
          type: integer
        after:
          format: int32
          type: integer
      required:
      - after
      - filterGroups
      - limit
      - properties
      - sorts
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: An error occurred
          type: string
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        category:
          description: The error category
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            invalidPropertyName:
            - propertyValue
            missingScopes:
            - scope1
            - scope2
          type: object
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          type: object
      required:
      - category
      - correlationId
      - message
      type: object
    BatchResponseSimplePublicObjectWithErrors:
      properties:
        status:
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
        results:
          items:
            $ref: '#/components/schemas/SimplePublicObject'
          type: array
        numErrors:
          format: int32
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/StandardError'
          type: array
        requestedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        completedAt:
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - completedAt
      - results
      - startedAt
      - status
      type: object
    SimplePublicObjectInput:
      example:
        properties:
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          hubspot_owner_id: "910901"
          subject: troubleshoot report
        associations:
        - to:
            id: "101"
          types:
          - associationCategory: HUBSPOT_DEFINED
            associationTypeId: 2
      properties:
        properties:
          additionalProperties:
            type: string
          type: object
      required:
      - properties
      type: object
    CollectionResponseSimplePublicObjectWithAssociationsForwardPaging:
      example:
        paging:
          next:
            after: NTI1Cg%3D%3D
            link: ?after=NTI1Cg%3D%3D
        results:
        - properties:
            createdate: 2019-10-30T03:30:17.883Z
            hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
        - properties:
            createdate: 2019-10-30T03:30:17.883Z
            hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
      properties:
        results:
          items:
            $ref: '#/components/schemas/SimplePublicObjectWithAssociations'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardPaging'
      required:
      - results
      type: object
    PublicMergeInput:
      example:
        objectIdToMerge: objectIdToMerge
        primaryObjectId: primaryObjectId
      properties:
        primaryObjectId:
          type: string
        objectIdToMerge:
          type: string
      required:
      - objectIdToMerge
      - primaryObjectId
      type: object
    AssociationSpec:
      properties:
        associationCategory:
          enum:
          - HUBSPOT_DEFINED
          - USER_DEFINED
          - INTEGRATOR_DEFINED
          type: string
        associationTypeId:
          format: int32
          type: integer
      required:
      - associationCategory
      - associationTypeId
      type: object
    SimplePublicObjectWithAssociations:
      example:
        properties:
          createdate: 2019-10-30T03:30:17.883Z
          hs_lastmodifieddate: 2019-12-07T16:50:06.678Z
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          hubspot_owner_id: "910901"
          subject: troubleshoot report
      properties:
        id:
          type: string
        properties:
          additionalProperties:
            nullable: true
            type: string
          type: object
        propertiesWithHistory:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ValueWithTimestamp'
            type: array
          type: object
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        archived:
          type: boolean
        archivedAt:
          format: date-time
          type: string
        associations:
          additionalProperties:
            $ref: '#/components/schemas/CollectionResponseAssociatedId'
          type: object
      required:
      - createdAt
      - id
      - properties
      - updatedAt
      type: object
    Filter:
      example:
        highValue: highValue
        propertyName: propertyName
        values:
        - values
        - values
        value: value
        operator: EQ
      properties:
        value:
          type: string
        highValue:
          type: string
        values:
          items:
            type: string
          type: array
        propertyName:
          type: string
        operator:
          description: "null"
          enum:
          - EQ
          - NEQ
          - LT
          - LTE
          - GT
          - GTE
          - BETWEEN
          - IN
          - NOT_IN
          - HAS_PROPERTY
          - NOT_HAS_PROPERTY
          - CONTAINS_TOKEN
          - NOT_CONTAINS_TOKEN
          type: string
      required:
      - operator
      - propertyName
      type: object
    PreviousPage:
      properties:
        before:
          type: string
        link:
          type: string
      required:
      - before
      type: object
    BatchInputSimplePublicObjectInputForCreate:
      example:
        inputs:
        - properties:
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
          associations:
          - to:
              id: "101"
            types:
            - associationCategory: HUBSPOT_DEFINED
              associationTypeId: 2
        - properties:
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
          associations:
          - to:
              id: "101"
            types:
            - associationCategory: HUBSPOT_DEFINED
              associationTypeId: 2
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/SimplePublicObjectInputForCreate'
          type: array
      required:
      - inputs
      type: object
    BatchInputSimplePublicObjectBatchInput:
      example:
        inputs:
        - id: "1"
          properties:
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
        - id: "1"
          properties:
            hs_pipeline: support_pipeline
            hs_pipeline_stage: open
            hs_ticket_priority: HIGH
            hubspot_owner_id: "910901"
            subject: troubleshoot report
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/SimplePublicObjectBatchInput'
          type: array
      required:
      - inputs
      type: object
    SimplePublicObjectBatchInput:
      example:
        id: "1"
        properties:
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          hubspot_owner_id: "910901"
          subject: troubleshoot report
      properties:
        properties:
          additionalProperties:
            type: string
          type: object
        id:
          type: string
      required:
      - id
      - properties
      type: object
    NextPage:
      example:
        after: NTI1Cg%3D%3D
        link: ?after=NTI1Cg%3D%3D
      properties:
        after:
          type: string
        link:
          type: string
      required:
      - after
      type: object
    AssociatedId:
      properties:
        id:
          type: string
        type:
          type: string
      required:
      - id
      - type
      type: object
    SimplePublicObjectInputForCreate:
      example:
        properties:
          hs_pipeline: support_pipeline
          hs_pipeline_stage: open
          hs_ticket_priority: HIGH
          hubspot_owner_id: "910901"
          subject: troubleshoot report
        associations:
        - to:
            id: "101"
          types:
          - associationCategory: HUBSPOT_DEFINED
            associationTypeId: 2
      properties:
        properties:
          additionalProperties:
            type: string
          type: object
        associations:
          items:
            $ref: '#/components/schemas/PublicAssociationsForObject'
          type: array
      required:
      - associations
      - properties
      type: object
  securitySchemes:
    oauth2_legacy:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            tickets: Read and write tickets
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    private_apps_legacy:
      in: header
      name: private-app-legacy
      type: apiKey
x-hubspot-available-client-libraries:
- PHP
- Node
- Python
- Ruby
