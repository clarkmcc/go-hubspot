/*
Send Event Completions

HTTP API for triggering instances of custom behavioral events

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package custom_behavioral_events

import (
	"encoding/json"
	"time"
)

// BehavioralEventHttpCompletionRequest struct for BehavioralEventHttpCompletionRequest
type BehavioralEventHttpCompletionRequest struct {
	// The time when this event occurred (if any). If this isn't set, the current time will be used
	OccurredAt *time.Time `json:"occurredAt,omitempty"`
	// Internal name of the event-type to trigger
	EventName string `json:"eventName"`
	// User token
	Utk  *string `json:"utk,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
	// Email of visitor
	Email *string `json:"email,omitempty"`
	// Map of properties for the event in the format property internal name - property value
	Properties *map[string]string `json:"properties,omitempty"`
	// The object id that this event occurred on. Could be a contact id or a visitor id.
	ObjectId *string `json:"objectId,omitempty"`
}

// NewBehavioralEventHttpCompletionRequest instantiates a new BehavioralEventHttpCompletionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBehavioralEventHttpCompletionRequest(eventName string) *BehavioralEventHttpCompletionRequest {
	this := BehavioralEventHttpCompletionRequest{}
	this.EventName = eventName
	return &this
}

// NewBehavioralEventHttpCompletionRequestWithDefaults instantiates a new BehavioralEventHttpCompletionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBehavioralEventHttpCompletionRequestWithDefaults() *BehavioralEventHttpCompletionRequest {
	this := BehavioralEventHttpCompletionRequest{}
	return &this
}

// GetOccurredAt returns the OccurredAt field value if set, zero value otherwise.
func (o *BehavioralEventHttpCompletionRequest) GetOccurredAt() time.Time {
	if o == nil || o.OccurredAt == nil {
		var ret time.Time
		return ret
	}
	return *o.OccurredAt
}

// GetOccurredAtOk returns a tuple with the OccurredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BehavioralEventHttpCompletionRequest) GetOccurredAtOk() (*time.Time, bool) {
	if o == nil || o.OccurredAt == nil {
		return nil, false
	}
	return o.OccurredAt, true
}

// HasOccurredAt returns a boolean if a field has been set.
func (o *BehavioralEventHttpCompletionRequest) HasOccurredAt() bool {
	if o != nil && o.OccurredAt != nil {
		return true
	}

	return false
}

// SetOccurredAt gets a reference to the given time.Time and assigns it to the OccurredAt field.
func (o *BehavioralEventHttpCompletionRequest) SetOccurredAt(v time.Time) {
	o.OccurredAt = &v
}

// GetEventName returns the EventName field value
func (o *BehavioralEventHttpCompletionRequest) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *BehavioralEventHttpCompletionRequest) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *BehavioralEventHttpCompletionRequest) SetEventName(v string) {
	o.EventName = v
}

// GetUtk returns the Utk field value if set, zero value otherwise.
func (o *BehavioralEventHttpCompletionRequest) GetUtk() string {
	if o == nil || o.Utk == nil {
		var ret string
		return ret
	}
	return *o.Utk
}

// GetUtkOk returns a tuple with the Utk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BehavioralEventHttpCompletionRequest) GetUtkOk() (*string, bool) {
	if o == nil || o.Utk == nil {
		return nil, false
	}
	return o.Utk, true
}

// HasUtk returns a boolean if a field has been set.
func (o *BehavioralEventHttpCompletionRequest) HasUtk() bool {
	if o != nil && o.Utk != nil {
		return true
	}

	return false
}

// SetUtk gets a reference to the given string and assigns it to the Utk field.
func (o *BehavioralEventHttpCompletionRequest) SetUtk(v string) {
	o.Utk = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *BehavioralEventHttpCompletionRequest) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BehavioralEventHttpCompletionRequest) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *BehavioralEventHttpCompletionRequest) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *BehavioralEventHttpCompletionRequest) SetUuid(v string) {
	o.Uuid = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *BehavioralEventHttpCompletionRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BehavioralEventHttpCompletionRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *BehavioralEventHttpCompletionRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *BehavioralEventHttpCompletionRequest) SetEmail(v string) {
	o.Email = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *BehavioralEventHttpCompletionRequest) GetProperties() map[string]string {
	if o == nil || o.Properties == nil {
		var ret map[string]string
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BehavioralEventHttpCompletionRequest) GetPropertiesOk() (*map[string]string, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *BehavioralEventHttpCompletionRequest) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given map[string]string and assigns it to the Properties field.
func (o *BehavioralEventHttpCompletionRequest) SetProperties(v map[string]string) {
	o.Properties = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *BehavioralEventHttpCompletionRequest) GetObjectId() string {
	if o == nil || o.ObjectId == nil {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BehavioralEventHttpCompletionRequest) GetObjectIdOk() (*string, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *BehavioralEventHttpCompletionRequest) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *BehavioralEventHttpCompletionRequest) SetObjectId(v string) {
	o.ObjectId = &v
}

func (o BehavioralEventHttpCompletionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OccurredAt != nil {
		toSerialize["occurredAt"] = o.OccurredAt
	}
	if true {
		toSerialize["eventName"] = o.EventName
	}
	if o.Utk != nil {
		toSerialize["utk"] = o.Utk
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.ObjectId != nil {
		toSerialize["objectId"] = o.ObjectId
	}
	return json.Marshal(toSerialize)
}

type NullableBehavioralEventHttpCompletionRequest struct {
	value *BehavioralEventHttpCompletionRequest
	isSet bool
}

func (v NullableBehavioralEventHttpCompletionRequest) Get() *BehavioralEventHttpCompletionRequest {
	return v.value
}

func (v *NullableBehavioralEventHttpCompletionRequest) Set(val *BehavioralEventHttpCompletionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBehavioralEventHttpCompletionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBehavioralEventHttpCompletionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBehavioralEventHttpCompletionRequest(val *BehavioralEventHttpCompletionRequest) *NullableBehavioralEventHttpCompletionRequest {
	return &NullableBehavioralEventHttpCompletionRequest{value: val, isSet: true}
}

func (v NullableBehavioralEventHttpCompletionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBehavioralEventHttpCompletionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
