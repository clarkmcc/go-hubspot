/*
Posts

Use these endpoints for interacting with Blog Posts, Blog Authors, and Blog Tags

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blog_posts

import (
	"encoding/json"
)

// ContentCloneRequestVNext Request body object for cloning content.
type ContentCloneRequestVNext struct {
	// Name of the cloned object.
	CloneName *string `json:"cloneName,omitempty"`
	// ID of the object to be cloned.
	Id string `json:"id"`
}

// NewContentCloneRequestVNext instantiates a new ContentCloneRequestVNext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentCloneRequestVNext(id string) *ContentCloneRequestVNext {
	this := ContentCloneRequestVNext{}
	this.Id = id
	return &this
}

// NewContentCloneRequestVNextWithDefaults instantiates a new ContentCloneRequestVNext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentCloneRequestVNextWithDefaults() *ContentCloneRequestVNext {
	this := ContentCloneRequestVNext{}
	return &this
}

// GetCloneName returns the CloneName field value if set, zero value otherwise.
func (o *ContentCloneRequestVNext) GetCloneName() string {
	if o == nil || o.CloneName == nil {
		var ret string
		return ret
	}
	return *o.CloneName
}

// GetCloneNameOk returns a tuple with the CloneName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentCloneRequestVNext) GetCloneNameOk() (*string, bool) {
	if o == nil || o.CloneName == nil {
		return nil, false
	}
	return o.CloneName, true
}

// HasCloneName returns a boolean if a field has been set.
func (o *ContentCloneRequestVNext) HasCloneName() bool {
	if o != nil && o.CloneName != nil {
		return true
	}

	return false
}

// SetCloneName gets a reference to the given string and assigns it to the CloneName field.
func (o *ContentCloneRequestVNext) SetCloneName(v string) {
	o.CloneName = &v
}

// GetId returns the Id field value
func (o *ContentCloneRequestVNext) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ContentCloneRequestVNext) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ContentCloneRequestVNext) SetId(v string) {
	o.Id = v
}

func (o ContentCloneRequestVNext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloneName != nil {
		toSerialize["cloneName"] = o.CloneName
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableContentCloneRequestVNext struct {
	value *ContentCloneRequestVNext
	isSet bool
}

func (v NullableContentCloneRequestVNext) Get() *ContentCloneRequestVNext {
	return v.value
}

func (v *NullableContentCloneRequestVNext) Set(val *ContentCloneRequestVNext) {
	v.value = val
	v.isSet = true
}

func (v NullableContentCloneRequestVNext) IsSet() bool {
	return v.isSet
}

func (v *NullableContentCloneRequestVNext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentCloneRequestVNext(val *ContentCloneRequestVNext) *NullableContentCloneRequestVNext {
	return &NullableContentCloneRequestVNext{value: val, isSet: true}
}

func (v NullableContentCloneRequestVNext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentCloneRequestVNext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
