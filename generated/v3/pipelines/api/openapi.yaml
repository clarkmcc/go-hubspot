openapi: 3.0.1
info:
  description: "Pipelines represent distinct stages in a workflow, like closing a\
    \ deal or servicing a support ticket. These endpoints provide access to read and\
    \ modify pipelines in HubSpot. Pipelines support `deals` and `tickets` object\
    \ types.\n\n## Pipeline ID validation\n\nWhen calling endpoints that take pipelineId\
    \ as a parameter, that ID must correspond to an existing, un-archived pipeline.\
    \ Otherwise the request will fail with a `404 Not Found` response."
  title: Pipelines
  version: v3
  x-hubspot-product-tier-requirements:
    marketing: FREE
    sales: FREE
    service: FREE
    cms: STARTER
  x-hubspot-documentation-banner: NONE
  x-hubspot-api-use-case: "To streamline customer support processes, use this API\
    \ to retrieve your existing ticket pipelines and add new stages based on your\
    \ business needs. Support reps can then assign tickets to those pipeline stages\
    \ to track progress on customer issues."
  x-hubspot-related-documentation:
  - name: Pipelines Guide
    url: https://hubspot.dev/guides/api/crm/pipelines
  x-hubspot-introduction: "Use the pipelines API to create and manage deal and ticket\
    \ pipelines. Pipelines enable you to track the status or progress of deals and\
    \ tickets, such as closing deals and opening support tickets."
servers:
- url: https://api.hubapi.com
tags:
- description: ""
  name: Pipeline Stage Audits
  x-hubspot-tag-name-english-source: Pipeline Stage Audits
- description: ""
  name: Pipelines
  x-hubspot-tag-name-english-source: Pipelines
- description: ""
  name: Pipeline Audits
  x-hubspot-tag-name-english-source: Pipeline Audits
- description: ""
  name: Pipeline Stages
  x-hubspot-tag-name-english-source: Pipeline Stages
paths:
  /crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}/audit:
    get:
      description: "Return a reverse chronological list of all mutations that have\
        \ occurred on the pipeline stage identified by `{stageId}`."
      operationId: StagesGetAudit
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponsePublicAuditInfoNoPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - media_bridge.read
      - oauth2:
        - crm.objects.contacts.read
      - private_apps:
        - crm.objects.deals.read
      - private_apps_legacy:
        - timeline
      - oauth2:
        - crm.objects.deals.read
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.objects.contacts.read
      - oauth2_legacy:
        - crm.schemas.custom.read
      - private_apps:
        - crm.objects.companies.read
      - private_apps:
        - crm.objects.deals.write
      - oauth2:
        - crm.schemas.quotes.read
      - private_apps:
        - crm.schemas.quotes.read
      - oauth2:
        - crm.objects.deals.write
      - oauth2:
        - crm.objects.companies.read
      - private_apps_legacy:
        - crm.schemas.custom.read
      - private_apps_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.deals.read
      - oauth2:
        - crm.schemas.deals.read
      - oauth2_legacy:
        - timeline
      - private_apps_legacy:
        - media_bridge.read
      - private_apps:
        - crm.objects.companies.write
      - oauth2:
        - crm.objects.companies.write
      - oauth2:
        - crm.schemas.contacts.read
      - private_apps:
        - crm.schemas.contacts.read
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
      - private_apps:
        - crm.schemas.companies.read
      - oauth2:
        - crm.schemas.companies.read
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - oauth2_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.line_items.read
      - oauth2:
        - crm.schemas.line_items.read
      summary: Return an audit of all changes to the pipeline stage
      tags:
      - Pipeline Stage Audits
  /crm/v3/pipelines/{objectType}/{pipelineId}:
    delete:
      description: "Delete the pipeline identified by `{pipelineId}`."
      operationId: Archive
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: validateReferencesBeforeDelete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: validateDealStageUsagesBeforeDelete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Delete a pipeline
      tags:
      - Pipelines
    get:
      description: "Return a single pipeline object identified by its unique `{pipelineId}`."
      operationId: GetByID
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - media_bridge.read
      - oauth2:
        - crm.objects.contacts.read
      - private_apps:
        - crm.objects.deals.read
      - private_apps_legacy:
        - timeline
      - oauth2:
        - crm.objects.deals.read
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.objects.contacts.read
      - oauth2_legacy:
        - crm.schemas.custom.read
      - private_apps:
        - crm.objects.companies.read
      - private_apps:
        - crm.objects.deals.write
      - oauth2:
        - crm.schemas.quotes.read
      - private_apps:
        - crm.schemas.quotes.read
      - oauth2:
        - crm.objects.deals.write
      - oauth2:
        - crm.objects.companies.read
      - private_apps_legacy:
        - crm.schemas.custom.read
      - private_apps_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.deals.read
      - oauth2:
        - crm.schemas.deals.read
      - oauth2_legacy:
        - timeline
      - private_apps_legacy:
        - media_bridge.read
      - private_apps:
        - crm.objects.companies.write
      - oauth2:
        - crm.objects.companies.write
      - oauth2:
        - crm.schemas.contacts.read
      - private_apps:
        - crm.schemas.contacts.read
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
      - private_apps:
        - crm.schemas.companies.read
      - oauth2:
        - crm.schemas.companies.read
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - oauth2_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.line_items.read
      - oauth2:
        - crm.schemas.line_items.read
      summary: Return a pipeline by ID
      tags:
      - Pipelines
    patch:
      description: "Perform a partial update of the pipeline identified by `{pipelineId}`.\
        \ The updated pipeline will be returned in the response."
      operationId: Update
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: validateReferencesBeforeDelete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: validateDealStageUsagesBeforeDelete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelinePatchInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Update a pipeline
      tags:
      - Pipelines
    put:
      description: Replace all the properties of an existing pipeline with the values
        provided. This will overwrite any existing pipeline stages. The updated pipeline
        will be returned in the response.
      operationId: Replace
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: validateReferencesBeforeDelete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: validateDealStageUsagesBeforeDelete
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Replace a pipeline
      tags:
      - Pipelines
  /crm/v3/pipelines/{objectType}/{pipelineId}/audit:
    get:
      description: "Return a reverse chronological list of all mutations that have\
        \ occurred on the pipeline identified by `{pipelineId}`."
      operationId: GetAudit
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponsePublicAuditInfoNoPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - media_bridge.read
      - oauth2:
        - crm.objects.contacts.read
      - private_apps:
        - crm.objects.deals.read
      - private_apps_legacy:
        - timeline
      - oauth2:
        - crm.objects.deals.read
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.objects.contacts.read
      - oauth2_legacy:
        - crm.schemas.custom.read
      - private_apps:
        - crm.objects.companies.read
      - private_apps:
        - crm.objects.deals.write
      - oauth2:
        - crm.schemas.quotes.read
      - private_apps:
        - crm.schemas.quotes.read
      - oauth2:
        - crm.objects.deals.write
      - oauth2:
        - crm.objects.companies.read
      - private_apps_legacy:
        - crm.schemas.custom.read
      - private_apps_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.deals.read
      - oauth2:
        - crm.schemas.deals.read
      - oauth2_legacy:
        - timeline
      - private_apps_legacy:
        - media_bridge.read
      - private_apps:
        - crm.objects.companies.write
      - oauth2:
        - crm.objects.companies.write
      - oauth2:
        - crm.schemas.contacts.read
      - private_apps:
        - crm.schemas.contacts.read
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
      - private_apps:
        - crm.schemas.companies.read
      - oauth2:
        - crm.schemas.companies.read
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - oauth2_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.line_items.read
      - oauth2:
        - crm.schemas.line_items.read
      summary: Return an audit of all changes to the pipeline
      tags:
      - Pipeline Audits
  /crm/v3/pipelines/{objectType}/{pipelineId}/stages:
    get:
      description: "Return all the stages associated with the pipeline identified\
        \ by `{pipelineId}`."
      operationId: StagesGetAll
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponsePipelineStageNoPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - media_bridge.read
      - oauth2:
        - crm.objects.contacts.read
      - private_apps:
        - crm.objects.deals.read
      - private_apps_legacy:
        - timeline
      - oauth2:
        - crm.objects.deals.read
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.objects.contacts.read
      - oauth2_legacy:
        - crm.schemas.custom.read
      - private_apps:
        - crm.objects.companies.read
      - private_apps:
        - crm.objects.deals.write
      - oauth2:
        - crm.schemas.quotes.read
      - private_apps:
        - crm.schemas.quotes.read
      - oauth2:
        - crm.objects.deals.write
      - oauth2:
        - crm.objects.companies.read
      - private_apps_legacy:
        - crm.schemas.custom.read
      - private_apps_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.deals.read
      - oauth2:
        - crm.schemas.deals.read
      - oauth2_legacy:
        - timeline
      - private_apps_legacy:
        - media_bridge.read
      - private_apps:
        - crm.objects.companies.write
      - oauth2:
        - crm.objects.companies.write
      - oauth2:
        - crm.schemas.contacts.read
      - private_apps:
        - crm.schemas.contacts.read
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
      - private_apps:
        - crm.schemas.companies.read
      - oauth2:
        - crm.schemas.companies.read
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - oauth2_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.line_items.read
      - oauth2:
        - crm.schemas.line_items.read
      summary: Return all stages of a pipeline
      tags:
      - Pipeline Stages
    post:
      description: "Create a new stage associated with the pipeline identified by\
        \ `{pipelineId}`. The entire stage object, including its unique ID, will be\
        \ returned in the response."
      operationId: StagesCreate
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineStageInput'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineStage'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Create a pipeline stage
      tags:
      - Pipeline Stages
  /crm/v3/pipelines/{objectType}:
    get:
      description: "Return all pipelines for the object type specified by `{objectType}`."
      operationId: GetAll
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponsePipelineNoPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - media_bridge.read
      - oauth2:
        - crm.objects.contacts.read
      - private_apps:
        - crm.objects.deals.read
      - private_apps_legacy:
        - timeline
      - oauth2:
        - crm.objects.deals.read
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.objects.contacts.read
      - oauth2_legacy:
        - crm.schemas.custom.read
      - private_apps:
        - crm.objects.companies.read
      - private_apps:
        - crm.objects.deals.write
      - oauth2:
        - crm.schemas.quotes.read
      - private_apps:
        - crm.schemas.quotes.read
      - oauth2:
        - crm.objects.deals.write
      - oauth2:
        - crm.objects.companies.read
      - private_apps_legacy:
        - crm.schemas.custom.read
      - private_apps_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.deals.read
      - oauth2:
        - crm.schemas.deals.read
      - oauth2_legacy:
        - timeline
      - private_apps_legacy:
        - media_bridge.read
      - private_apps:
        - crm.objects.companies.write
      - oauth2:
        - crm.objects.companies.write
      - oauth2:
        - crm.schemas.contacts.read
      - private_apps:
        - crm.schemas.contacts.read
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
      - private_apps:
        - crm.schemas.companies.read
      - oauth2:
        - crm.schemas.companies.read
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - oauth2_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.line_items.read
      - oauth2:
        - crm.schemas.line_items.read
      summary: Retrieve all pipelines
      tags:
      - Pipelines
    post:
      description: "Create a new pipeline with the provided property values. The entire\
        \ pipeline object, including its unique ID, will be returned in the response."
      operationId: Create
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineInput'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pipeline'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Create a pipeline
      tags:
      - Pipelines
  /crm/v3/pipelines/{objectType}/{pipelineId}/stages/{stageId}:
    delete:
      description: "Delete the pipeline stage identified by `{stageId}` associated\
        \ with the pipeline identified by `{pipelineId}`."
      operationId: StagesArchive
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Delete a pipeline stage
      tags:
      - Pipeline Stages
    get:
      description: "Return the stage identified by `{stageId}` associated with the\
        \ pipeline identified by `{pipelineId}`."
      operationId: StagesGetByID
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stageId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineStage'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - media_bridge.read
      - oauth2:
        - crm.objects.contacts.read
      - private_apps:
        - crm.objects.deals.read
      - private_apps_legacy:
        - timeline
      - oauth2:
        - crm.objects.deals.read
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.objects.contacts.read
      - oauth2_legacy:
        - crm.schemas.custom.read
      - private_apps:
        - crm.objects.companies.read
      - private_apps:
        - crm.objects.deals.write
      - oauth2:
        - crm.schemas.quotes.read
      - private_apps:
        - crm.schemas.quotes.read
      - oauth2:
        - crm.objects.deals.write
      - oauth2:
        - crm.objects.companies.read
      - private_apps_legacy:
        - crm.schemas.custom.read
      - private_apps_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.deals.read
      - oauth2:
        - crm.schemas.deals.read
      - oauth2_legacy:
        - timeline
      - private_apps_legacy:
        - media_bridge.read
      - private_apps:
        - crm.objects.companies.write
      - oauth2:
        - crm.objects.companies.write
      - oauth2:
        - crm.schemas.contacts.read
      - private_apps:
        - crm.schemas.contacts.read
      - oauth2_legacy:
        - tickets
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.objects.contacts.write
      - private_apps:
        - crm.objects.contacts.write
      - private_apps:
        - crm.schemas.companies.read
      - oauth2:
        - crm.schemas.companies.read
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - oauth2_legacy:
        - crm.objects.goals.read
      - private_apps:
        - crm.schemas.line_items.read
      - oauth2:
        - crm.schemas.line_items.read
      summary: Return a pipeline stage by ID
      tags:
      - Pipeline Stages
    patch:
      description: "Perform a partial update of the pipeline stage identified by `{stageId}`\
        \ associated with the pipeline identified by `{pipelineId}`. Any properties\
        \ not included in this update will keep their existing values. The updated\
        \ stage will be returned in the response."
      operationId: StagesUpdate
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineStagePatchInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineStage'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Update a pipeline stage
      tags:
      - Pipeline Stages
    put:
      description: Replace all the properties of an existing pipeline stage with the
        values provided. The updated stage will be returned in the response.
      operationId: StagesReplace
      parameters:
      - explode: false
        in: path
        name: objectType
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: pipelineId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: stageId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PipelineStageInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineStage'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - tickets
      - oauth2:
        - crm.schemas.deals.write
      - private_apps_legacy:
        - e-commerce
      - oauth2:
        - crm.schemas.contacts.write
      - oauth2:
        - crm.schemas.companies.write
      - private_apps_legacy:
        - contacts
      - private_apps:
        - crm.schemas.contacts.write
      - private_apps:
        - crm.schemas.companies.write
      - oauth2_legacy:
        - e-commerce
      - private_apps_legacy:
        - tickets
      - private_apps_legacy:
        - crm.schemas.custom.write
      - private_apps:
        - crm.schemas.deals.write
      summary: Replace a pipeline stage
      tags:
      - Pipeline Stages
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    PipelineStagePatchInput:
      description: An input used to update some properties on a pipeline definition.
      example:
        label: Done
        displayOrder: 1
        metadata:
          ticketState: CLOSED
      properties:
        archived:
          description: Whether the pipeline is archived.
          type: boolean
        metadata:
          additionalProperties:
            type: string
          description: "A JSON object containing properties that are not present on\
            \ all object pipelines.\n\nFor `deals` pipelines, the `probability` field\
            \ is required (`{ \"probability\": 0.5 }`), and represents the likelihood\
            \ a deal will close. Possible values are between 0.0 and 1.0 in increments\
            \ of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional\
            \ (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket\
            \ remains open or has been closed by a member of your Support team. Possible\
            \ values are `OPEN` or `CLOSED`."
          example:
            ticketState: CLOSED
          type: object
        displayOrder:
          description: "The order for displaying this pipeline stage. If two pipeline\
            \ stages have a matching `displayOrder`, they will be sorted alphabetically\
            \ by label."
          example: 1
          format: int32
          type: integer
        label:
          description: A label used to organize pipeline stages in HubSpot's UI. Each
            pipeline stage's label must be unique within that pipeline.
          example: Done
          type: string
      required:
      - metadata
      type: object
    PipelinePatchInput:
      description: An input used to update some properties on a pipeline definition.
      example:
        label: My updated pipeline
        displayOrder: 0
      properties:
        archived:
          description: "Whether the pipeline is archived. This property should only\
            \ be provided when restoring an archived pipeline. If it's provided in\
            \ any other call, the request will fail and a `400 Bad Request` will be\
            \ returned."
          type: boolean
        displayOrder:
          description: "The order for displaying this pipeline. If two pipelines have\
            \ a matching `displayOrder`, they will be sorted alphabetically by label."
          example: 0
          format: int32
          type: integer
        label:
          description: A unique label used to organize pipelines in HubSpot's UI
          example: My updated pipeline
          type: string
      type: object
    PipelineStage:
      description: A pipeline stage definition.
      example:
        label: In Progress
        displayOrder: 0
        metadata:
          ticketState: OPEN
        createdAt: 2019-10-30T03:30:17.883Z
        updatedAt: 2019-12-07T16:50:06.678Z
        archived: false
        id: "1234912"
      properties:
        createdAt:
          description: The date the pipeline stage was created. The stages on default
            pipelines will have createdAt = 0.
          example: 2019-10-30T03:30:17.883Z
          format: date-time
          type: string
        archivedAt:
          description: The date the pipeline was archived. `archivedAt` will only
            be present if the pipeline is archived.
          format: date-time
          type: string
        archived:
          description: Whether the pipeline is archived.
          example: false
          type: boolean
        metadata:
          additionalProperties:
            type: string
          description: "A JSON object containing properties that are not present on\
            \ all object pipelines.\n\nFor `deals` pipelines, the `probability` field\
            \ is required (`{ \"probability\": 0.5 }`), and represents the likelihood\
            \ a deal will close. Possible values are between 0.0 and 1.0 in increments\
            \ of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional\
            \ (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket\
            \ remains open or has been closed by a member of your Support team. Possible\
            \ values are `OPEN` or `CLOSED`."
          example:
            ticketState: OPEN
          type: object
        displayOrder:
          description: "The order for displaying this pipeline stage. If two pipeline\
            \ stages have a matching `displayOrder`, they will be sorted alphabetically\
            \ by label."
          example: 0
          format: int32
          type: integer
        writePermissions:
          enum:
          - CRM_PERMISSIONS_ENFORCEMENT
          - READ_ONLY
          - INTERNAL_ONLY
          type: string
        label:
          description: A label used to organize pipeline stages in HubSpot's UI. Each
            pipeline stage's label must be unique within that pipeline.
          example: In Progress
          type: string
        id:
          description: A unique identifier generated by HubSpot that can be used to
            retrieve and update the pipeline stage.
          example: "1234912"
          type: string
        updatedAt:
          description: The date the pipeline stage was last updated.
          example: 2019-12-07T16:50:06.678Z
          format: date-time
          type: string
      required:
      - archived
      - createdAt
      - displayOrder
      - id
      - label
      - metadata
      - updatedAt
      type: object
    CollectionResponsePipelineStageNoPaging:
      example:
        results:
        - label: In Progress
          displayOrder: 0
          metadata:
            ticketState: OPEN
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
          id: "1234912"
        - label: In Progress
          displayOrder: 0
          metadata:
            ticketState: OPEN
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
          id: "1234912"
      properties:
        results:
          items:
            $ref: '#/components/schemas/PipelineStage'
          type: array
      required:
      - results
      type: object
    PublicAuditInfo:
      example:
        identifier: identifier
        rawObject: "{}"
        fromUserId: 0
        portalId: 6
        action: action
        message: message
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        identifier:
          type: string
        rawObject:
          properties: {}
          type: object
        fromUserId:
          format: int32
          type: integer
        portalId:
          format: int32
          type: integer
        action:
          type: string
        message:
          type: string
        timestamp:
          format: date-time
          type: string
      required:
      - action
      - identifier
      - portalId
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
            invalidPropertyName:
            - propertyValue
          type: object
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          example:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: Invalid input (details will vary based on the error)
          type: string
        category:
          description: The error category
          example: VALIDATION_ERROR
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
      required:
      - category
      - correlationId
      - message
      type: object
    CollectionResponsePublicAuditInfoNoPaging:
      example:
        results:
        - identifier: identifier
          rawObject: "{}"
          fromUserId: 0
          portalId: 6
          action: action
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
        - identifier: identifier
          rawObject: "{}"
          fromUserId: 0
          portalId: 6
          action: action
          message: message
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/PublicAuditInfo'
          type: array
      required:
      - results
      type: object
    Pipeline:
      description: A pipeline definition.
      example:
        label: My ticket pipeline
        displayOrder: 0
        createdAt: 2019-10-30T03:30:17.883Z
        updatedAt: 2019-12-07T16:50:06.678Z
        archived: false
        id: "812723471"
        stages:
        - label: In Progress
          displayOrder: 0
          metadata:
            ticketState: OPEN
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
          id: "1234912"
        - label: Done
          displayOrder: 0
          metadata:
            ticketState: CLOSED
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
          id: "1234914"
      properties:
        createdAt:
          description: The date the pipeline was created. The default pipelines will
            have createdAt = 0.
          example: 2019-10-30T03:30:17.883Z
          format: date-time
          type: string
        archivedAt:
          description: The date the pipeline was archived. `archivedAt` will only
            be present if the pipeline is archived.
          format: date-time
          type: string
        archived:
          description: Whether the pipeline is archived.
          example: false
          type: boolean
        displayOrder:
          description: "The order for displaying this pipeline. If two pipelines have\
            \ a matching `displayOrder`, they will be sorted alphabetically by label."
          example: 0
          format: int32
          type: integer
        stages:
          description: The stages associated with the pipeline. They can be retrieved
            and updated via the pipeline stages endpoints.
          example:
          - id: "1234912"
            label: In Progress
            archived: false
            metadata:
              ticketState: OPEN
            createdAt: 2019-10-30T03:30:17.883Z
            updatedAt: 2019-12-07T16:50:06.678Z
            displayOrder: 0
          - id: "1234914"
            label: Done
            archived: false
            metadata:
              ticketState: CLOSED
            createdAt: 2019-10-30T03:30:17.883Z
            updatedAt: 2019-12-07T16:50:06.678Z
            displayOrder: 0
          items:
            $ref: '#/components/schemas/PipelineStage'
          type: array
        label:
          description: A unique label used to organize pipelines in HubSpot's UI
          example: My ticket pipeline
          type: string
        id:
          description: A unique identifier generated by HubSpot that can be used to
            retrieve and update the pipeline.
          example: "812723471"
          type: string
        updatedAt:
          description: The date the pipeline was last updated.
          example: 2019-12-07T16:50:06.678Z
          format: date-time
          type: string
      required:
      - archived
      - createdAt
      - displayOrder
      - id
      - label
      - stages
      - updatedAt
      type: object
    ErrorDetail:
      properties:
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
      required:
      - message
      type: object
    PipelineStageInput:
      description: An input used to create or replace a pipeline stage's definition.
      example:
        label: Done
        displayOrder: 1
        metadata:
          ticketState: CLOSED
      properties:
        metadata:
          additionalProperties:
            type: string
          description: "A JSON object containing properties that are not present on\
            \ all object pipelines.\n\nFor `deals` pipelines, the `probability` field\
            \ is required (`{ \"probability\": 0.5 }`), and represents the likelihood\
            \ a deal will close. Possible values are between 0.0 and 1.0 in increments\
            \ of 0.1.\n\nFor `tickets` pipelines, the `ticketState` field is optional\
            \ (`{ \"ticketState\": \"OPEN\" }`), and represents whether the ticket\
            \ remains open or has been closed by a member of your Support team. Possible\
            \ values are `OPEN` or `CLOSED`."
          example:
            ticketState: CLOSED
          type: object
        displayOrder:
          description: "The order for displaying this pipeline stage. If two pipeline\
            \ stages have a matching `displayOrder`, they will be sorted alphabetically\
            \ by label."
          example: 1
          format: int32
          type: integer
        label:
          description: A label used to organize pipeline stages in HubSpot's UI. Each
            pipeline stage's label must be unique within that pipeline.
          example: Done
          type: string
      required:
      - displayOrder
      - label
      - metadata
      type: object
    PipelineInput:
      description: An input used to create or replace a pipeline's definition.
      example:
        label: My replaced pipeline
        displayOrder: 0
        stages:
        - label: In Progress
          displayOrder: 0
          metadata:
            ticketState: OPEN
        - label: Done
          displayOrder: 1
          metadata:
            ticketState: CLOSED
      properties:
        displayOrder:
          description: "The order for displaying this pipeline. If two pipelines have\
            \ a matching `displayOrder`, they will be sorted alphabetically by label."
          example: 0
          format: int32
          type: integer
        stages:
          description: Pipeline stage inputs used to create the new or replacement
            pipeline.
          example:
          - label: In Progress
            metadata:
              ticketState: OPEN
            displayOrder: 0
          - label: Done
            metadata:
              ticketState: CLOSED
            displayOrder: 1
          items:
            $ref: '#/components/schemas/PipelineStageInput'
          type: array
        label:
          description: A unique label used to organize pipelines in HubSpot's UI
          example: My replaced pipeline
          type: string
      required:
      - displayOrder
      - label
      - stages
      type: object
    CollectionResponsePipelineNoPaging:
      example:
        results:
        - label: My ticket pipeline
          displayOrder: 0
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
          id: "812723471"
          stages:
          - label: In Progress
            displayOrder: 0
            metadata:
              ticketState: OPEN
            createdAt: 2019-10-30T03:30:17.883Z
            updatedAt: 2019-12-07T16:50:06.678Z
            archived: false
            id: "1234912"
          - label: Done
            displayOrder: 0
            metadata:
              ticketState: CLOSED
            createdAt: 2019-10-30T03:30:17.883Z
            updatedAt: 2019-12-07T16:50:06.678Z
            archived: false
            id: "1234914"
        - label: My ticket pipeline
          displayOrder: 0
          createdAt: 2019-10-30T03:30:17.883Z
          updatedAt: 2019-12-07T16:50:06.678Z
          archived: false
          id: "812723471"
          stages:
          - label: In Progress
            displayOrder: 0
            metadata:
              ticketState: OPEN
            createdAt: 2019-10-30T03:30:17.883Z
            updatedAt: 2019-12-07T16:50:06.678Z
            archived: false
            id: "1234912"
          - label: Done
            displayOrder: 0
            metadata:
              ticketState: CLOSED
            createdAt: 2019-10-30T03:30:17.883Z
            updatedAt: 2019-12-07T16:50:06.678Z
            archived: false
            id: "1234914"
      properties:
        results:
          items:
            $ref: '#/components/schemas/Pipeline'
          type: array
      required:
      - results
      type: object
  securitySchemes:
    oauth2_legacy:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            crm.objects.goals.read: Read goals
            media_bridge.read: Read media and media events
            e-commerce: e-commerce
            timeline: Create timeline events
            crm.schemas.custom.read: View custom object definitions
            tickets: Read and write tickets
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            crm.objects.deals.write: ' '
            crm.schemas.deals.read: ' '
            crm.objects.contacts.read: ' '
            crm.schemas.quotes.read: Quotes schemas
            crm.objects.contacts.write: ' '
            crm.schemas.contacts.read: ' '
            crm.objects.companies.write: ' '
            crm.objects.companies.read: ' '
            crm.schemas.companies.read: ' '
            crm.objects.deals.read: ' '
            crm.schemas.line_items.read: Line Items schemas
            crm.schemas.deals.write: ' '
            crm.schemas.contacts.write: ' '
            crm.schemas.companies.write: ' '
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    private_apps_legacy:
      in: header
      name: private-app-legacy
      type: apiKey
    private_apps:
      in: header
      name: private-app
      type: apiKey
x-hubspot-available-client-libraries:
- PHP
- Node
- Ruby
- Python
x-hubspot-product-tier-requirements:
  marketing: FREE
  sales: FREE
  service: FREE
  cms: STARTER
x-hubspot-documentation-banner: NONE
