/*
CMS Audit Logs

Use this endpoint to query audit logs of CMS changes that occurred on your HubSpot account.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package audit_logs

import (
	"encoding/json"
	"time"
)

// PublicAuditLog struct for PublicAuditLog
type PublicAuditLog struct {
	// The type of event that took place (CREATED, UPDATED, PUBLISHED, DELETED, UNPUBLISHED).
	Event string `json:"event"`
	// The type of the object (BLOG, LANDING_PAGE, DOMAIN, HUBDB_TABLE etc.)
	ObjectType string `json:"objectType"`
	// The ID of the object.
	ObjectId string `json:"objectId"`
	// The ID of the user who caused the event.
	UserId string `json:"userId"`
	// The timestamp at which the event occurred.
	Timestamp time.Time `json:"timestamp"`
	// The internal name of the object in HubSpot.
	ObjectName string `json:"objectName"`
	// The name of the user who caused the event.
	FullName string                 `json:"fullName"`
	Meta     map[string]interface{} `json:"meta,omitempty"`
}

// NewPublicAuditLog instantiates a new PublicAuditLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicAuditLog(event string, objectType string, objectId string, userId string, timestamp time.Time, objectName string, fullName string) *PublicAuditLog {
	this := PublicAuditLog{}
	this.Event = event
	this.ObjectType = objectType
	this.ObjectId = objectId
	this.UserId = userId
	this.Timestamp = timestamp
	this.ObjectName = objectName
	this.FullName = fullName
	return &this
}

// NewPublicAuditLogWithDefaults instantiates a new PublicAuditLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicAuditLogWithDefaults() *PublicAuditLog {
	this := PublicAuditLog{}
	return &this
}

// GetEvent returns the Event field value
func (o *PublicAuditLog) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *PublicAuditLog) SetEvent(v string) {
	o.Event = v
}

// GetObjectType returns the ObjectType field value
func (o *PublicAuditLog) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *PublicAuditLog) SetObjectType(v string) {
	o.ObjectType = v
}

// GetObjectId returns the ObjectId field value
func (o *PublicAuditLog) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *PublicAuditLog) SetObjectId(v string) {
	o.ObjectId = v
}

// GetUserId returns the UserId field value
func (o *PublicAuditLog) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *PublicAuditLog) SetUserId(v string) {
	o.UserId = v
}

// GetTimestamp returns the Timestamp field value
func (o *PublicAuditLog) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *PublicAuditLog) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetObjectName returns the ObjectName field value
func (o *PublicAuditLog) GetObjectName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectName
}

// GetObjectNameOk returns a tuple with the ObjectName field value
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetObjectNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectName, true
}

// SetObjectName sets field value
func (o *PublicAuditLog) SetObjectName(v string) {
	o.ObjectName = v
}

// GetFullName returns the FullName field value
func (o *PublicAuditLog) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *PublicAuditLog) SetFullName(v string) {
	o.FullName = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PublicAuditLog) GetMeta() map[string]interface{} {
	if o == nil || o.Meta == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicAuditLog) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PublicAuditLog) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given map[string]interface{} and assigns it to the Meta field.
func (o *PublicAuditLog) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

func (o PublicAuditLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["event"] = o.Event
	}
	if true {
		toSerialize["objectType"] = o.ObjectType
	}
	if true {
		toSerialize["objectId"] = o.ObjectId
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	if true {
		toSerialize["timestamp"] = o.Timestamp
	}
	if true {
		toSerialize["objectName"] = o.ObjectName
	}
	if true {
		toSerialize["fullName"] = o.FullName
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullablePublicAuditLog struct {
	value *PublicAuditLog
	isSet bool
}

func (v NullablePublicAuditLog) Get() *PublicAuditLog {
	return v.value
}

func (v *NullablePublicAuditLog) Set(val *PublicAuditLog) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicAuditLog) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicAuditLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicAuditLog(val *PublicAuditLog) *NullablePublicAuditLog {
	return &NullablePublicAuditLog{value: val, isSet: true}
}

func (v NullablePublicAuditLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicAuditLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
