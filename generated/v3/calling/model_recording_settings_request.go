/*
Calling Extensions

Provides a way for apps to add custom calling options to a contact record. This works in conjunction with the [Calling SDK](#), which is used to build your phone/calling UI. The endpoints here allow your service to appear as an option to HubSpot users when they access the *Call* action on a contact record. Once accessed, your custom phone/calling UI will be displayed in an iframe at the specified URL with the specified dimensions on that record.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package calling

import (
	"encoding/json"
)

// RecordingSettingsRequest struct for RecordingSettingsRequest
type RecordingSettingsRequest struct {
	UrlToRetrieveAuthedRecording string `json:"urlToRetrieveAuthedRecording"`
}

// NewRecordingSettingsRequest instantiates a new RecordingSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecordingSettingsRequest(urlToRetrieveAuthedRecording string) *RecordingSettingsRequest {
	this := RecordingSettingsRequest{}
	this.UrlToRetrieveAuthedRecording = urlToRetrieveAuthedRecording
	return &this
}

// NewRecordingSettingsRequestWithDefaults instantiates a new RecordingSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecordingSettingsRequestWithDefaults() *RecordingSettingsRequest {
	this := RecordingSettingsRequest{}
	return &this
}

// GetUrlToRetrieveAuthedRecording returns the UrlToRetrieveAuthedRecording field value
func (o *RecordingSettingsRequest) GetUrlToRetrieveAuthedRecording() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlToRetrieveAuthedRecording
}

// GetUrlToRetrieveAuthedRecordingOk returns a tuple with the UrlToRetrieveAuthedRecording field value
// and a boolean to check if the value has been set.
func (o *RecordingSettingsRequest) GetUrlToRetrieveAuthedRecordingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlToRetrieveAuthedRecording, true
}

// SetUrlToRetrieveAuthedRecording sets field value
func (o *RecordingSettingsRequest) SetUrlToRetrieveAuthedRecording(v string) {
	o.UrlToRetrieveAuthedRecording = v
}

func (o RecordingSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["urlToRetrieveAuthedRecording"] = o.UrlToRetrieveAuthedRecording
	}
	return json.Marshal(toSerialize)
}

type NullableRecordingSettingsRequest struct {
	value *RecordingSettingsRequest
	isSet bool
}

func (v NullableRecordingSettingsRequest) Get() *RecordingSettingsRequest {
	return v.value
}

func (v *NullableRecordingSettingsRequest) Set(val *RecordingSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRecordingSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRecordingSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecordingSettingsRequest(val *RecordingSettingsRequest) *NullableRecordingSettingsRequest {
	return &NullableRecordingSettingsRequest{value: val, isSet: true}
}

func (v NullableRecordingSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecordingSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
