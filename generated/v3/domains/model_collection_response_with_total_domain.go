/*
Domains

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package domains

import (
	"encoding/json"
)

// CollectionResponseWithTotalDomain struct for CollectionResponseWithTotalDomain
type CollectionResponseWithTotalDomain struct {
	Total   int32    `json:"total"`
	Results []Domain `json:"results"`
	Paging  *Paging  `json:"paging,omitempty"`
}

// NewCollectionResponseWithTotalDomain instantiates a new CollectionResponseWithTotalDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionResponseWithTotalDomain(total int32, results []Domain) *CollectionResponseWithTotalDomain {
	this := CollectionResponseWithTotalDomain{}
	this.Total = total
	this.Results = results
	return &this
}

// NewCollectionResponseWithTotalDomainWithDefaults instantiates a new CollectionResponseWithTotalDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionResponseWithTotalDomainWithDefaults() *CollectionResponseWithTotalDomain {
	this := CollectionResponseWithTotalDomain{}
	return &this
}

// GetTotal returns the Total field value
func (o *CollectionResponseWithTotalDomain) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *CollectionResponseWithTotalDomain) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *CollectionResponseWithTotalDomain) SetTotal(v int32) {
	o.Total = v
}

// GetResults returns the Results field value
func (o *CollectionResponseWithTotalDomain) GetResults() []Domain {
	if o == nil {
		var ret []Domain
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CollectionResponseWithTotalDomain) GetResultsOk() ([]Domain, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *CollectionResponseWithTotalDomain) SetResults(v []Domain) {
	o.Results = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *CollectionResponseWithTotalDomain) GetPaging() Paging {
	if o == nil || o.Paging == nil {
		var ret Paging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionResponseWithTotalDomain) GetPagingOk() (*Paging, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *CollectionResponseWithTotalDomain) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given Paging and assigns it to the Paging field.
func (o *CollectionResponseWithTotalDomain) SetPaging(v Paging) {
	o.Paging = &v
}

func (o CollectionResponseWithTotalDomain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["results"] = o.Results
	}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionResponseWithTotalDomain struct {
	value *CollectionResponseWithTotalDomain
	isSet bool
}

func (v NullableCollectionResponseWithTotalDomain) Get() *CollectionResponseWithTotalDomain {
	return v.value
}

func (v *NullableCollectionResponseWithTotalDomain) Set(val *CollectionResponseWithTotalDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionResponseWithTotalDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionResponseWithTotalDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionResponseWithTotalDomain(val *CollectionResponseWithTotalDomain) *NullableCollectionResponseWithTotalDomain {
	return &NullableCollectionResponseWithTotalDomain{value: val, isSet: true}
}

func (v NullableCollectionResponseWithTotalDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionResponseWithTotalDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
