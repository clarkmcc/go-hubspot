/*
CRM Timeline

This feature allows an app to create and configure custom events that can show up in the timelines of certain CRM objects like contacts, companies, tickets, or deals. You'll find multiple use cases for this API in the sections below.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package timeline

import (
	"encoding/json"
)

// TimelineEventTemplateUpdateRequest State of the template definition being updated.
type TimelineEventTemplateUpdateRequest struct {
	// This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline when you expand the details.
	DetailTemplate *string `json:"detailTemplate,omitempty"`
	// The template name.
	Name string `json:"name"`
	// A collection of tokens that can be used as custom properties on the event and to create fully fledged CRM objects.
	Tokens []TimelineEventTemplateToken `json:"tokens"`
	// The template ID.
	Id string `json:"id"`
	// This uses Markdown syntax with Handlebars and event-specific data to render HTML on a timeline as a header.
	HeaderTemplate *string `json:"headerTemplate,omitempty"`
}

// NewTimelineEventTemplateUpdateRequest instantiates a new TimelineEventTemplateUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelineEventTemplateUpdateRequest(name string, tokens []TimelineEventTemplateToken, id string) *TimelineEventTemplateUpdateRequest {
	this := TimelineEventTemplateUpdateRequest{}
	this.Name = name
	this.Tokens = tokens
	this.Id = id
	return &this
}

// NewTimelineEventTemplateUpdateRequestWithDefaults instantiates a new TimelineEventTemplateUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelineEventTemplateUpdateRequestWithDefaults() *TimelineEventTemplateUpdateRequest {
	this := TimelineEventTemplateUpdateRequest{}
	return &this
}

// GetDetailTemplate returns the DetailTemplate field value if set, zero value otherwise.
func (o *TimelineEventTemplateUpdateRequest) GetDetailTemplate() string {
	if o == nil || o.DetailTemplate == nil {
		var ret string
		return ret
	}
	return *o.DetailTemplate
}

// GetDetailTemplateOk returns a tuple with the DetailTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineEventTemplateUpdateRequest) GetDetailTemplateOk() (*string, bool) {
	if o == nil || o.DetailTemplate == nil {
		return nil, false
	}
	return o.DetailTemplate, true
}

// HasDetailTemplate returns a boolean if a field has been set.
func (o *TimelineEventTemplateUpdateRequest) HasDetailTemplate() bool {
	if o != nil && o.DetailTemplate != nil {
		return true
	}

	return false
}

// SetDetailTemplate gets a reference to the given string and assigns it to the DetailTemplate field.
func (o *TimelineEventTemplateUpdateRequest) SetDetailTemplate(v string) {
	o.DetailTemplate = &v
}

// GetName returns the Name field value
func (o *TimelineEventTemplateUpdateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TimelineEventTemplateUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TimelineEventTemplateUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetTokens returns the Tokens field value
func (o *TimelineEventTemplateUpdateRequest) GetTokens() []TimelineEventTemplateToken {
	if o == nil {
		var ret []TimelineEventTemplateToken
		return ret
	}

	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value
// and a boolean to check if the value has been set.
func (o *TimelineEventTemplateUpdateRequest) GetTokensOk() ([]TimelineEventTemplateToken, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tokens, true
}

// SetTokens sets field value
func (o *TimelineEventTemplateUpdateRequest) SetTokens(v []TimelineEventTemplateToken) {
	o.Tokens = v
}

// GetId returns the Id field value
func (o *TimelineEventTemplateUpdateRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TimelineEventTemplateUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TimelineEventTemplateUpdateRequest) SetId(v string) {
	o.Id = v
}

// GetHeaderTemplate returns the HeaderTemplate field value if set, zero value otherwise.
func (o *TimelineEventTemplateUpdateRequest) GetHeaderTemplate() string {
	if o == nil || o.HeaderTemplate == nil {
		var ret string
		return ret
	}
	return *o.HeaderTemplate
}

// GetHeaderTemplateOk returns a tuple with the HeaderTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineEventTemplateUpdateRequest) GetHeaderTemplateOk() (*string, bool) {
	if o == nil || o.HeaderTemplate == nil {
		return nil, false
	}
	return o.HeaderTemplate, true
}

// HasHeaderTemplate returns a boolean if a field has been set.
func (o *TimelineEventTemplateUpdateRequest) HasHeaderTemplate() bool {
	if o != nil && o.HeaderTemplate != nil {
		return true
	}

	return false
}

// SetHeaderTemplate gets a reference to the given string and assigns it to the HeaderTemplate field.
func (o *TimelineEventTemplateUpdateRequest) SetHeaderTemplate(v string) {
	o.HeaderTemplate = &v
}

func (o TimelineEventTemplateUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DetailTemplate != nil {
		toSerialize["detailTemplate"] = o.DetailTemplate
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["tokens"] = o.Tokens
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.HeaderTemplate != nil {
		toSerialize["headerTemplate"] = o.HeaderTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableTimelineEventTemplateUpdateRequest struct {
	value *TimelineEventTemplateUpdateRequest
	isSet bool
}

func (v NullableTimelineEventTemplateUpdateRequest) Get() *TimelineEventTemplateUpdateRequest {
	return v.value
}

func (v *NullableTimelineEventTemplateUpdateRequest) Set(val *TimelineEventTemplateUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelineEventTemplateUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelineEventTemplateUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelineEventTemplateUpdateRequest(val *TimelineEventTemplateUpdateRequest) *NullableTimelineEventTemplateUpdateRequest {
	return &NullableTimelineEventTemplateUpdateRequest{value: val, isSet: true}
}

func (v NullableTimelineEventTemplateUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelineEventTemplateUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
