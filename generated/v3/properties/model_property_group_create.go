/*
Properties

All HubSpot objects store data in default and custom properties. These endpoints provide access to read and modify object properties in HubSpot.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package properties

import (
	"encoding/json"
)

// PropertyGroupCreate struct for PropertyGroupCreate
type PropertyGroupCreate struct {
	// The internal property group name, which must be used when referencing the property group via the API.
	Name string `json:"name"`
	// A human-readable label that will be shown in HubSpot.
	Label string `json:"label"`
	// Property groups are displayed in order starting with the lowest positive integer value. Values of -1 will cause the property group to be displayed after any positive values.
	DisplayOrder *int32 `json:"displayOrder,omitempty"`
}

// NewPropertyGroupCreate instantiates a new PropertyGroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPropertyGroupCreate(name string, label string) *PropertyGroupCreate {
	this := PropertyGroupCreate{}
	this.Name = name
	this.Label = label
	return &this
}

// NewPropertyGroupCreateWithDefaults instantiates a new PropertyGroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPropertyGroupCreateWithDefaults() *PropertyGroupCreate {
	this := PropertyGroupCreate{}
	return &this
}

// GetName returns the Name field value
func (o *PropertyGroupCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PropertyGroupCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PropertyGroupCreate) SetName(v string) {
	o.Name = v
}

// GetLabel returns the Label field value
func (o *PropertyGroupCreate) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PropertyGroupCreate) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PropertyGroupCreate) SetLabel(v string) {
	o.Label = v
}

// GetDisplayOrder returns the DisplayOrder field value if set, zero value otherwise.
func (o *PropertyGroupCreate) GetDisplayOrder() int32 {
	if o == nil || o.DisplayOrder == nil {
		var ret int32
		return ret
	}
	return *o.DisplayOrder
}

// GetDisplayOrderOk returns a tuple with the DisplayOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PropertyGroupCreate) GetDisplayOrderOk() (*int32, bool) {
	if o == nil || o.DisplayOrder == nil {
		return nil, false
	}
	return o.DisplayOrder, true
}

// HasDisplayOrder returns a boolean if a field has been set.
func (o *PropertyGroupCreate) HasDisplayOrder() bool {
	if o != nil && o.DisplayOrder != nil {
		return true
	}

	return false
}

// SetDisplayOrder gets a reference to the given int32 and assigns it to the DisplayOrder field.
func (o *PropertyGroupCreate) SetDisplayOrder(v int32) {
	o.DisplayOrder = &v
}

func (o PropertyGroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["label"] = o.Label
	}
	if o.DisplayOrder != nil {
		toSerialize["displayOrder"] = o.DisplayOrder
	}
	return json.Marshal(toSerialize)
}

type NullablePropertyGroupCreate struct {
	value *PropertyGroupCreate
	isSet bool
}

func (v NullablePropertyGroupCreate) Get() *PropertyGroupCreate {
	return v.value
}

func (v *NullablePropertyGroupCreate) Set(val *PropertyGroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullablePropertyGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullablePropertyGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePropertyGroupCreate(val *PropertyGroupCreate) *NullablePropertyGroupCreate {
	return &NullablePropertyGroupCreate{value: val, isSet: true}
}

func (v NullablePropertyGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePropertyGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
