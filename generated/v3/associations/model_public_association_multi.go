/*
Associations

Associations define the relationships between objects in HubSpot. These endpoints allow you to create, read, and remove associations.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package associations

import (
	"encoding/json"
)

// PublicAssociationMulti struct for PublicAssociationMulti
type PublicAssociationMulti struct {
	From PublicObjectId `json:"from"`
	// The IDs of objects that are associated with the object identified by the ID in 'from'.
	To []AssociatedId `json:"to"`
}

// NewPublicAssociationMulti instantiates a new PublicAssociationMulti object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicAssociationMulti(from PublicObjectId, to []AssociatedId) *PublicAssociationMulti {
	this := PublicAssociationMulti{}
	this.From = from
	this.To = to
	return &this
}

// NewPublicAssociationMultiWithDefaults instantiates a new PublicAssociationMulti object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicAssociationMultiWithDefaults() *PublicAssociationMulti {
	this := PublicAssociationMulti{}
	return &this
}

// GetFrom returns the From field value
func (o *PublicAssociationMulti) GetFrom() PublicObjectId {
	if o == nil {
		var ret PublicObjectId
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *PublicAssociationMulti) GetFromOk() (*PublicObjectId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *PublicAssociationMulti) SetFrom(v PublicObjectId) {
	o.From = v
}

// GetTo returns the To field value
func (o *PublicAssociationMulti) GetTo() []AssociatedId {
	if o == nil {
		var ret []AssociatedId
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *PublicAssociationMulti) GetToOk() ([]AssociatedId, bool) {
	if o == nil {
		return nil, false
	}
	return o.To, true
}

// SetTo sets field value
func (o *PublicAssociationMulti) SetTo(v []AssociatedId) {
	o.To = v
}

func (o PublicAssociationMulti) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["to"] = o.To
	}
	return json.Marshal(toSerialize)
}

type NullablePublicAssociationMulti struct {
	value *PublicAssociationMulti
	isSet bool
}

func (v NullablePublicAssociationMulti) Get() *PublicAssociationMulti {
	return v.value
}

func (v *NullablePublicAssociationMulti) Set(val *PublicAssociationMulti) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicAssociationMulti) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicAssociationMulti) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicAssociationMulti(val *PublicAssociationMulti) *NullablePublicAssociationMulti {
	return &NullablePublicAssociationMulti{value: val, isSet: true}
}

func (v NullablePublicAssociationMulti) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicAssociationMulti) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
