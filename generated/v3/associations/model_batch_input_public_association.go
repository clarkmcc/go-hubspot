/*
Associations

Associations define the relationships between objects in HubSpot. These endpoints allow you to create, read, and remove associations.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package associations

import (
	"encoding/json"
)

// BatchInputPublicAssociation struct for BatchInputPublicAssociation
type BatchInputPublicAssociation struct {
	Inputs []PublicAssociation `json:"inputs"`
}

// NewBatchInputPublicAssociation instantiates a new BatchInputPublicAssociation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchInputPublicAssociation(inputs []PublicAssociation) *BatchInputPublicAssociation {
	this := BatchInputPublicAssociation{}
	this.Inputs = inputs
	return &this
}

// NewBatchInputPublicAssociationWithDefaults instantiates a new BatchInputPublicAssociation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchInputPublicAssociationWithDefaults() *BatchInputPublicAssociation {
	this := BatchInputPublicAssociation{}
	return &this
}

// GetInputs returns the Inputs field value
func (o *BatchInputPublicAssociation) GetInputs() []PublicAssociation {
	if o == nil {
		var ret []PublicAssociation
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *BatchInputPublicAssociation) GetInputsOk() ([]PublicAssociation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *BatchInputPublicAssociation) SetInputs(v []PublicAssociation) {
	o.Inputs = v
}

func (o BatchInputPublicAssociation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["inputs"] = o.Inputs
	}
	return json.Marshal(toSerialize)
}

type NullableBatchInputPublicAssociation struct {
	value *BatchInputPublicAssociation
	isSet bool
}

func (v NullableBatchInputPublicAssociation) Get() *BatchInputPublicAssociation {
	return v.value
}

func (v *NullableBatchInputPublicAssociation) Set(val *BatchInputPublicAssociation) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchInputPublicAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchInputPublicAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchInputPublicAssociation(val *BatchInputPublicAssociation) *NullableBatchInputPublicAssociation {
	return &NullableBatchInputPublicAssociation{value: val, isSet: true}
}

func (v NullableBatchInputPublicAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchInputPublicAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
