/*
Accounting Extension

These APIs allow you to interact with HubSpot's Accounting Extension. It allows you to: * Specify the URLs that HubSpot will use when making webhook requests to your external accounting system. * Respond to webhook calls made to your external accounting system by HubSpot

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accounting

import (
	"encoding/json"
)

// AccountingFeatures Outlines the features that are supported by the external accounting system.
type AccountingFeatures struct {
	CreateInvoice CreateInvoiceFeature `json:"createInvoice"`
	ImportInvoice ImportInvoiceFeature `json:"importInvoice"`
	// Indicates if syncing objects from the external account system into HubSpot is supported for the integration. This is a map, where the key is one of `CONTACT` or `PRODUCT`, to indicate which type of object you do or don't support syncing. For example: ```   \"sync\": {     \"CONTACT\": {       \"toHubSpot\": true     },     \"PRODUCT\": {       \"toHubSpot\": true     }   } ```
	Sync map[string]ObjectSyncFeature `json:"sync"`
}

// NewAccountingFeatures instantiates a new AccountingFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountingFeatures(createInvoice CreateInvoiceFeature, importInvoice ImportInvoiceFeature, sync map[string]ObjectSyncFeature) *AccountingFeatures {
	this := AccountingFeatures{}
	this.CreateInvoice = createInvoice
	this.ImportInvoice = importInvoice
	this.Sync = sync
	return &this
}

// NewAccountingFeaturesWithDefaults instantiates a new AccountingFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountingFeaturesWithDefaults() *AccountingFeatures {
	this := AccountingFeatures{}
	return &this
}

// GetCreateInvoice returns the CreateInvoice field value
func (o *AccountingFeatures) GetCreateInvoice() CreateInvoiceFeature {
	if o == nil {
		var ret CreateInvoiceFeature
		return ret
	}

	return o.CreateInvoice
}

// GetCreateInvoiceOk returns a tuple with the CreateInvoice field value
// and a boolean to check if the value has been set.
func (o *AccountingFeatures) GetCreateInvoiceOk() (*CreateInvoiceFeature, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateInvoice, true
}

// SetCreateInvoice sets field value
func (o *AccountingFeatures) SetCreateInvoice(v CreateInvoiceFeature) {
	o.CreateInvoice = v
}

// GetImportInvoice returns the ImportInvoice field value
func (o *AccountingFeatures) GetImportInvoice() ImportInvoiceFeature {
	if o == nil {
		var ret ImportInvoiceFeature
		return ret
	}

	return o.ImportInvoice
}

// GetImportInvoiceOk returns a tuple with the ImportInvoice field value
// and a boolean to check if the value has been set.
func (o *AccountingFeatures) GetImportInvoiceOk() (*ImportInvoiceFeature, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImportInvoice, true
}

// SetImportInvoice sets field value
func (o *AccountingFeatures) SetImportInvoice(v ImportInvoiceFeature) {
	o.ImportInvoice = v
}

// GetSync returns the Sync field value
func (o *AccountingFeatures) GetSync() map[string]ObjectSyncFeature {
	if o == nil {
		var ret map[string]ObjectSyncFeature
		return ret
	}

	return o.Sync
}

// GetSyncOk returns a tuple with the Sync field value
// and a boolean to check if the value has been set.
func (o *AccountingFeatures) GetSyncOk() (*map[string]ObjectSyncFeature, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sync, true
}

// SetSync sets field value
func (o *AccountingFeatures) SetSync(v map[string]ObjectSyncFeature) {
	o.Sync = v
}

func (o AccountingFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["createInvoice"] = o.CreateInvoice
	}
	if true {
		toSerialize["importInvoice"] = o.ImportInvoice
	}
	if true {
		toSerialize["sync"] = o.Sync
	}
	return json.Marshal(toSerialize)
}

type NullableAccountingFeatures struct {
	value *AccountingFeatures
	isSet bool
}

func (v NullableAccountingFeatures) Get() *AccountingFeatures {
	return v.value
}

func (v *NullableAccountingFeatures) Set(val *AccountingFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountingFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountingFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountingFeatures(val *AccountingFeatures) *NullableAccountingFeatures {
	return &NullableAccountingFeatures{value: val, isSet: true}
}

func (v NullableAccountingFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountingFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
