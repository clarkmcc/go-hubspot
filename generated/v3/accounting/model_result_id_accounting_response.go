/*
Accounting Extension

These APIs allow you to interact with HubSpot's Accounting Extension. It allows you to: * Specify the URLs that HubSpot will use when making webhook requests to your external accounting system. * Respond to webhook calls made to your external accounting system by HubSpot

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accounting

import (
	"encoding/json"
)

// ResultIdAccountingResponse A response to the creation of an entity (eg. invoice, customer).
type ResultIdAccountingResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result string `json:"@result"`
	// The ID of created entity.
	Id string `json:"id"`
}

// NewResultIdAccountingResponse instantiates a new ResultIdAccountingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResultIdAccountingResponse(result string, id string) *ResultIdAccountingResponse {
	this := ResultIdAccountingResponse{}
	this.Result = result
	this.Id = id
	return &this
}

// NewResultIdAccountingResponseWithDefaults instantiates a new ResultIdAccountingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResultIdAccountingResponseWithDefaults() *ResultIdAccountingResponse {
	this := ResultIdAccountingResponse{}
	return &this
}

// GetResult returns the Result field value
func (o *ResultIdAccountingResponse) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *ResultIdAccountingResponse) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *ResultIdAccountingResponse) SetResult(v string) {
	o.Result = v
}

// GetId returns the Id field value
func (o *ResultIdAccountingResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResultIdAccountingResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResultIdAccountingResponse) SetId(v string) {
	o.Id = v
}

func (o ResultIdAccountingResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["@result"] = o.Result
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableResultIdAccountingResponse struct {
	value *ResultIdAccountingResponse
	isSet bool
}

func (v NullableResultIdAccountingResponse) Get() *ResultIdAccountingResponse {
	return v.value
}

func (v *NullableResultIdAccountingResponse) Set(val *ResultIdAccountingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResultIdAccountingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResultIdAccountingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResultIdAccountingResponse(val *ResultIdAccountingResponse) *NullableResultIdAccountingResponse {
	return &NullableResultIdAccountingResponse{value: val, isSet: true}
}

func (v NullableResultIdAccountingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResultIdAccountingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
