/*
Accounting Extension

These APIs allow you to interact with HubSpot's Accounting Extension. It allows you to: * Specify the URLs that HubSpot will use when making webhook requests to your external accounting system. * Respond to webhook calls made to your external accounting system by HubSpot

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package accounting

import (
	"encoding/json"
)

// ProductSearchResponse A response to a search for products.
type ProductSearchResponse struct {
	// Designates if the response is a success ('OK') or failure ('ERR').
	Result *string `json:"@result,omitempty"`
	// The list of products that matched the search criteria.
	Products []Product `json:"products"`
}

// NewProductSearchResponse instantiates a new ProductSearchResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductSearchResponse(products []Product) *ProductSearchResponse {
	this := ProductSearchResponse{}
	this.Products = products
	return &this
}

// NewProductSearchResponseWithDefaults instantiates a new ProductSearchResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductSearchResponseWithDefaults() *ProductSearchResponse {
	this := ProductSearchResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ProductSearchResponse) GetResult() string {
	if o == nil || o.Result == nil {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSearchResponse) GetResultOk() (*string, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ProductSearchResponse) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *ProductSearchResponse) SetResult(v string) {
	o.Result = &v
}

// GetProducts returns the Products field value
func (o *ProductSearchResponse) GetProducts() []Product {
	if o == nil {
		var ret []Product
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *ProductSearchResponse) GetProductsOk() ([]Product, bool) {
	if o == nil {
		return nil, false
	}
	return o.Products, true
}

// SetProducts sets field value
func (o *ProductSearchResponse) SetProducts(v []Product) {
	o.Products = v
}

func (o ProductSearchResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Result != nil {
		toSerialize["@result"] = o.Result
	}
	if true {
		toSerialize["products"] = o.Products
	}
	return json.Marshal(toSerialize)
}

type NullableProductSearchResponse struct {
	value *ProductSearchResponse
	isSet bool
}

func (v NullableProductSearchResponse) Get() *ProductSearchResponse {
	return v.value
}

func (v *NullableProductSearchResponse) Set(val *ProductSearchResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductSearchResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductSearchResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductSearchResponse(val *ProductSearchResponse) *NullableProductSearchResponse {
	return &NullableProductSearchResponse{value: val, isSet: true}
}

func (v NullableProductSearchResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductSearchResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
