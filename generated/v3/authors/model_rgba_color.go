/*
Blog Post endpoints

Use these endpoints for interacting with Blog Posts, Blog Authors, and Blog Tags

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authors

import (
	"encoding/json"
)

// RGBAColor A color defined by RGB values.
type RGBAColor struct {
	// Red.
	R int32 `json:"r"`
	// Green.
	G int32 `json:"g"`
	// Blue.
	B int32 `json:"b"`
	// Alpha.
	A float32 `json:"a"`
}

// NewRGBAColor instantiates a new RGBAColor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRGBAColor(r int32, g int32, b int32, a float32) *RGBAColor {
	this := RGBAColor{}
	this.R = r
	this.G = g
	this.B = b
	this.A = a
	return &this
}

// NewRGBAColorWithDefaults instantiates a new RGBAColor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRGBAColorWithDefaults() *RGBAColor {
	this := RGBAColor{}
	return &this
}

// GetR returns the R field value
func (o *RGBAColor) GetR() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.R
}

// GetROk returns a tuple with the R field value
// and a boolean to check if the value has been set.
func (o *RGBAColor) GetROk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.R, true
}

// SetR sets field value
func (o *RGBAColor) SetR(v int32) {
	o.R = v
}

// GetG returns the G field value
func (o *RGBAColor) GetG() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.G
}

// GetGOk returns a tuple with the G field value
// and a boolean to check if the value has been set.
func (o *RGBAColor) GetGOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.G, true
}

// SetG sets field value
func (o *RGBAColor) SetG(v int32) {
	o.G = v
}

// GetB returns the B field value
func (o *RGBAColor) GetB() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.B
}

// GetBOk returns a tuple with the B field value
// and a boolean to check if the value has been set.
func (o *RGBAColor) GetBOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.B, true
}

// SetB sets field value
func (o *RGBAColor) SetB(v int32) {
	o.B = v
}

// GetA returns the A field value
func (o *RGBAColor) GetA() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.A
}

// GetAOk returns a tuple with the A field value
// and a boolean to check if the value has been set.
func (o *RGBAColor) GetAOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.A, true
}

// SetA sets field value
func (o *RGBAColor) SetA(v float32) {
	o.A = v
}

func (o RGBAColor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["r"] = o.R
	}
	if true {
		toSerialize["g"] = o.G
	}
	if true {
		toSerialize["b"] = o.B
	}
	if true {
		toSerialize["a"] = o.A
	}
	return json.Marshal(toSerialize)
}

type NullableRGBAColor struct {
	value *RGBAColor
	isSet bool
}

func (v NullableRGBAColor) Get() *RGBAColor {
	return v.value
}

func (v *NullableRGBAColor) Set(val *RGBAColor) {
	v.value = val
	v.isSet = true
}

func (v NullableRGBAColor) IsSet() bool {
	return v.isSet
}

func (v *NullableRGBAColor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRGBAColor(val *RGBAColor) *NullableRGBAColor {
	return &NullableRGBAColor{value: val, isSet: true}
}

func (v NullableRGBAColor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRGBAColor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
