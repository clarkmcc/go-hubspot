openapi: 3.0.1
info:
  description: |-
    HubDB is a relational data store that presents data as rows, columns, and cells in a table, much like a spreadsheet. HubDB tables can be added or modified [in the HubSpot CMS](https://knowledge.hubspot.com/cos-general/how-to-edit-hubdb-tables), but you can also use the API endpoints documented here. For more information on HubDB tables and using their data on a HubSpot site, see the [CMS developers site](https://designers.hubspot.com/docs/tools/hubdb). You can also see the [documentation for dynamic pages](https://designers.hubspot.com/docs/tutorials/how-to-build-dynamic-pages-with-hubdb) for more details about the `useForPages` field.

    HubDB tables support `draft` and `published` versions. This allows you to update data in the table, either for testing or to allow for a manual approval process, without affecting any live pages using the existing data. Draft data can be reviewed, and published by a user working in HubSpot or published via the API. Draft data can also be discarded, allowing users to go back to the published version of the data without disrupting it. If a table is set to be `allowed for public access`, you can access the published version of the table and rows without any authentication by specifying the portal id via the query parameter `portalId`.
  title: HubDB endpoints
  version: v3
servers:
- url: https://api.hubapi.com/
tags:
- name: Tables
- name: Rows
- name: Rows Batch
paths:
  /cms/v3/hubdb/tables:
    get:
      description: "Returns the details for the `published` version of each table\
        \ defined in an account, including column definitions."
      operationId: get-/cms/v3/hubdb/tables_getAllTables
      parameters:
      - description: "Specifies which fields to use for sorting results. Valid fields\
          \ are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt`\
          \ will be used by default."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Only return tables created at exactly the specified time.
        explode: true
        in: query
        name: createdAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created after the specified time.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created before the specified time.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated at exactly the specified time.
        explode: true
        in: query
        name: updatedAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated after the specified time.
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated before the specified time.
        explode: true
        in: query
        name: updatedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Specifies whether to return archived tables. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalHubDbTableV3ForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get all published tables
      tags:
      - Tables
    post:
      description: Creates a new draft HubDB table given a JSON schema. The table
        name and label should be unique for each account.
      operationId: post-/cms/v3/hubdb/tables_createTable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableV3Request'
        description: The JSON schema for the table being created.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Create a new table
      tags:
      - Tables
  /cms/v3/hubdb/tables/draft:
    get:
      description: "Returns the details for each draft table defined in the specified\
        \ account, including column definitions."
      operationId: get-/cms/v3/hubdb/tables/draft_getAllDraftTables
      parameters:
      - description: "Specifies which fields to use for sorting results. Valid fields\
          \ are `name`, `createdAt`, `updatedAt`, `createdBy`, `updatedBy`. `createdAt`\
          \ will be used by default."
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is 1000.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Only return tables created at exactly the specified time.
        explode: true
        in: query
        name: createdAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created after the specified time.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables created before the specified time.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated at exactly the specified time.
        explode: true
        in: query
        name: updatedAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated after the specified time.
        explode: true
        in: query
        name: updatedAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Only return tables last updated before the specified time.
        explode: true
        in: query
        name: updatedBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Specifies whether to return archived tables. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalHubDbTableV3ForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Return all draft tables
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}:
    delete:
      description: Archive (soft delete) an existing HubDB table. This archives both
        the published and draft versions.
      operationId: "delete-/cms/v3/hubdb/tables/{tableIdOrName}_archiveTable"
      parameters:
      - description: The ID or name of the table to archive.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Archive a table
      tags:
      - Tables
    get:
      description: |-
        Returns the details for the `published` version of the specified table. This will include the definitions for the columns in the table and the number of rows in the table.

        **Note:** This endpoint can be accessed without any authentication if the table is set to be allowed for public access.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}_getTableDetails"
      parameters:
      - description: The ID or name of the table to return.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to return details for an archived table. Defaults
          to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to populate foreign ID values in the result.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get details for a published table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft:
    get:
      description: Get the details for the `draft` version of a specific HubDB table.
        This will include the definitions for the columns in the table and the number
        of rows in the table.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/draft_getDraftTableDetailsById"
      parameters:
      - description: The ID or name of the table to return.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to return an archived table. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to populate foreign ID values in the result.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get details for a draft table
      tags:
      - Tables
    patch:
      description: |-
        Update an existing HubDB table. You can use this endpoint to add or remove columns to the table as well as restore an archived table. Tables updated using the endpoint will only modify the `draft` verion of the table. Use `publish` endpoint to push all the changes to the `published` version. To restore a table, include the query parameter `archived=true` and `"archived": false` in the json body.
        **Note:** You need to include all the columns in the input when you are adding/removing/updating a column. If you do not include an already existing column in the request, it will be deleted.
      operationId: "patch-/cms/v3/hubdb/tables/{tableIdOrName}/draft_updateDraftTable"
      parameters:
      - description: The ID or name of the table to update.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies whether to return archived tables. Defaults to `false`.
        explode: true
        in: query
        name: archived
        required: false
        schema:
          type: boolean
        style: form
      - description: Set this to `true` to populate foreign ID values in the result.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableV3Request'
        description: The JSON schema for the table being updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Update an existing table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/clone:
    post:
      description: Clone an existing HubDB table. The `newName` and `newLabel` of
        the new table can be sent as JSON in the `body` parameter. This will create
        the cloned table as a `draft`.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/clone_cloneDraftTable"
      parameters:
      - description: The ID or name of the table to clone.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableCloneRequest'
        description: JSON object with the properties newName and newLabel. You can
          set copyRows to false to clone the table with copying rows and default is
          true.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Clone a table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/export:
    get:
      description: Exports the `draft` version of a table to CSV / EXCEL format.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/draft/export_exportDraftTable"
      parameters:
      - description: The ID or name of the table to export.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "The file format to export. Possible values include `CSV`, `XLSX`,\
          \ and `XLS`."
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
            text/csv:
              schema:
                format: binary
                type: string
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Export a draft table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/import:
    post:
      description: |-
        Import the contents of a CSV file into an existing HubDB table. The data will always be imported into the `draft` version of the table. Use `/publish` endpoint to push these changes to `published` version.
        This endpoint takes a multi-part POST request. The first part will be a set of JSON-formatted options for the import and you can specify this with the name as `config`.  The second part will be the CSV file you want to import and you can specify this with the name as `file`. Refer the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#importing-tables) to check the details and format of the JSON-formatted options for the import.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/import_importDraftTable"
      parameters:
      - description: The ID of the destination table where data will be imported.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/post__cms_v3_hubdb_tables__tableIdOrName__draft_import_importDraftTable_request'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResult'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Import data into draft table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/publish:
    post:
      description: "Publishes the table by copying the data and table schema changes\
        \ from draft version to the published version, meaning any website pages using\
        \ data from the table will be updated."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/publish_publishDraftTable"
      parameters:
      - description: The ID or name of the table to publish.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to populate foreign ID values in the response.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Publish a table from draft
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/draft/reset:
    post:
      description: Replaces the data in the `draft` version of the table with values
        from the `published` version. Any unpublished changes in the `draft` will
        be lost after this call is made.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/draft/reset_resetDraftTable"
      parameters:
      - description: The ID or name of the table to reset.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to populate foreign ID values in the response.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Reset a draft table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/export:
    get:
      description: Exports the `published` version of a table to CSV / EXCEL format.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/export_exportTable"
      parameters:
      - description: The ID or name of the table to export.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "The file format to export. Possible values include `CSV`, `XLSX`,\
          \ and `XLS`."
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
            text/csv:
              schema:
                format: binary
                type: string
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Export a published version of a table
      tags:
      - Tables
  /cms/v3/hubdb/tables/{tableIdOrName}/rows:
    get:
      description: |-
        Returns a set of rows in the `published` version of the specified table. Row results can be filtered and sorted. Filtering and sorting options will be sent as query parameters to the API request. For example, by adding the query parameters `column1__gt=5&sort=-column1`, API returns the rows with values for column `column1` greater than 5 and in the descending order of `column1` values. Refer to the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#filtering-and-sorting-table-rows) for detailed filtering and sorting options.
        **Note:** This endpoint can be accessed without any authentication, if the table is set to be allowed for public access.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows_getTableRows"
      parameters:
      - description: The ID or name of the table to query.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the column names to sort the results by. See the above
          description for more details.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is `1000`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Specify the column names to get results containing only the required
          columns instead of all column details.
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalHubDbTableRowV3ForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get rows for a table
      tags:
      - Rows
    post:
      description: Add a new row to a HubDB table. New rows will be added to the `draft`
        version of the table. Use `publish` endpoint to push these changes to published
        version.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows_createTableRow"
      parameters:
      - description: The ID or name of the target table.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableRowV3Request'
        description: "The row definition JSON, formatted as described above."
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Add a new row to a table
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/batch/read:
    post:
      description: |-
        Returns rows in the `published` version of the specified table, given a set of row ids.
        **Note:** This endpoint can be accessed without any authentication if the table is set to be allowed for public access.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/batch/read_batchReadTableRows"
      parameters:
      - description: The ID or name of the table to query.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        description: The JSON array of row ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get a set of rows
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft:
    get:
      description: "Returns rows in the `draft` version of the specified table. Row\
        \ results can be filtered and sorted. Filtering and sorting options will be\
        \ sent as query parameters to the API request. For example, by adding the\
        \ query parameters `column1__gt=5&sort=-column1`, API returns the rows with\
        \ values for column `column1` greater than 5 and in the descending order of\
        \ `column1` values. Refer to the [overview section](https://developers.hubspot.com/docs/api/cms/hubdb#filtering-and-sorting-table-rows)\
        \ for detailed filtering and sorting options."
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft_readDraftTableRows"
      parameters:
      - description: The ID or name of the table to query.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the column names to sort the results by.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The cursor token value to get the next set of results. You can
          get this from the `paging.next.after` JSON property of a paged response
          containing more results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of results to return. Default is `1000`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Specify the column names to get results containing only the\
          \ required columns instead of all column details. If you want to include\
          \ multiple columns in the result, use this query param as many times. "
        explode: true
        in: query
        name: properties
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseWithTotalHubDbTableRowV3ForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get rows from draft table
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/clone:
    post:
      description: "Clones rows in the `draft` version of the specified table, given\
        \ a set of row ids."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/clone_batchCloneDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        description: The JSON array of row ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Clone rows in batch
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/create:
    post:
      description: "Creates rows in the `draft` version of the specified table, given\
        \ an array of row objects. See the overview section for more details with\
        \ an example."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/create_batchCreateDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputHubDbTableRowV3Request'
        description: JSON array of row objects
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Create rows in batch
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/purge:
    post:
      description: "Permanently deletes rows from the `draft` version of the table,\
        \ given a set of row ids."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/purge_batchPurgeDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        description: JSON array of row ids.
        required: true
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Permanently deletes rows
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/read:
    post:
      description: "Returns rows in the `draft` version of the specified table, given\
        \ a set of row ids."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/read_batchReadDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputString'
        description: JSON array of row ids.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get a set of rows from draft table
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/replace:
    post:
      description: "Replaces multiple rows as a batch in the `draft` version of the\
        \ table. See the endpoint `PUT /tables/{tableIdOrName}/rows/{rowId}/draft`\
        \ for details on updating a single row."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/replace_batchReplaceDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputHubDbTableRowV3Request'
        description: JSON array of row objects.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Replace rows in batch in draft table
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/update:
    post:
      description: "Updates multiple rows as a batch in the `draft` version of the\
        \ table. See the endpoint `PATCH /tables/{tableIdOrName}/rows/{rowId}/draft`\
        \ for details on updating a single row."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/draft/batch/update_batchUpdateDraftTableRows"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputJsonNode'
        description: JSON array of row objects.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3'
          description: successful operation
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseHubDbTableRowV3WithErrors'
          description: multiple statuses
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Update rows in batch in draft table
      tags:
      - Rows Batch
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}:
    get:
      description: |-
        Get a single row by ID from a table's `published` version.
        **Note:** This endpoint can be accessed without any authentication, if the table is set to be allowed for public access.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}_getTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get a table row
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft:
    delete:
      description: Permanently deletes a row from a table's `draft` version.
      operationId: "delete-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_purgeDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Permanently deletes a row
      tags:
      - Rows
    get:
      description: Get a single row by ID from a table's `draft` version.
      operationId: "get-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_getDraftTableRowById"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Get a row from the draft table
      tags:
      - Rows
    patch:
      description: |-
        Sparse updates a single row in the table's `draft` version.
        All the column values need not be specified. Only the columns or fields that needs to be modified can be specified.
        See the `Create a row` endpoint for instructions on how to format the JSON row definitions.
      operationId: "patch-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_updateDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableRowV3Request'
        description: The JSON object of the row with necessary fields that needs to
          be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Updates an existing row
      tags:
      - Rows
    put:
      description: |-
        Replace a single row in the table's `draft` version.
        All the column values must be specified. If a column has a value in the target table and this request doesn't define that value, it will be deleted.
        See the `Create a row` endpoint for instructions on how to format the JSON row definitions.
      operationId: "put-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft_replaceDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HubDbTableRowV3Request'
        description: The JSON object of the row
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Replaces an existing row
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft/clone:
    post:
      description: Clones a single row in the `draft` version of the table.
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/rows/{rowId}/draft/clone_cloneDraftTableRow"
      parameters:
      - description: The ID or name of the table
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the row
        explode: false
        in: path
        name: rowId
        required: true
        schema:
          pattern: \d+
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableRowV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Clone a row
      tags:
      - Rows
  /cms/v3/hubdb/tables/{tableIdOrName}/unpublish:
    post:
      description: "Unpublishes the table, meaning any website pages using data from\
        \ the table will not render any data."
      operationId: "post-/cms/v3/hubdb/tables/{tableIdOrName}/unpublish_unpublishTable"
      parameters:
      - description: The ID or name of the table to publish.
        explode: false
        in: path
        name: tableIdOrName
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to `true` to populate foreign ID values in the response.
        explode: true
        in: query
        name: includeForeignIds
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubDbTableV3'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - hubdb
      - hapikey: []
      summary: Unpublish a table
      tags:
      - Tables
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    BatchInputString:
      example:
        inputs:
        - inputs
        - inputs
      properties:
        inputs:
          items:
            type: string
          type: array
      required:
      - inputs
      type: object
    StandardError:
      properties:
        status:
          type: string
        id:
          type: string
        category:
          type: object
        subCategory:
          properties: {}
          type: object
        message:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - category
      - context
      - errors
      - links
      - message
      - status
      type: object
    BatchInputJsonNode:
      example:
        inputs:
        - "{}"
        - "{}"
      properties:
        inputs:
          items:
            properties: {}
            type: object
          type: array
      required:
      - inputs
      type: object
    HubDbTableCloneRequest:
      example:
        newName: test_table_new
        newLabel: Test Table New
        copyRows: "true"
      properties:
        newName:
          description: The new name for the cloned table
          type: string
        newLabel:
          description: The new label for the cloned table
          type: string
        copyRows:
          description: Specifies whether to copy the rows during clone
          type: boolean
      required:
      - copyRows
      type: object
    SimpleUser:
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
      required:
      - email
      - firstName
      - id
      - lastName
      type: object
    CollectionResponseWithTotalHubDbTableV3ForwardPaging:
      example:
        total: 0
        paging:
          next:
            link: link
            after: after
        results:
        - id: "1630034"
          label: Test Table
          name: test_table
          createdAt: 2019-03-15T21:20:51.556Z
          publishedAt: 2020-04-02T16:00:45.009Z
          updatedAt: 2020-04-02T16:00:43.880Z
          columns:
          - name: text_column
            label: Text Column
            id: "1"
            archived: false
            foreignIdsById: {}
            foreignIdsByName: {}
            type: TEXT
          archived: false
          rowCount: 0
          useForPages: true
          allowChildTables: true
          enableChildTablePages: false
          dynamicMetaTags: {}
          allowPublicApiAccess: false
          columnCount: 3
        - id: "1630034"
          label: Test Table
          name: test_table
          createdAt: 2019-03-15T21:20:51.556Z
          publishedAt: 2020-04-02T16:00:45.009Z
          updatedAt: 2020-04-02T16:00:43.880Z
          columns:
          - name: text_column
            label: Text Column
            id: "1"
            archived: false
            foreignIdsById: {}
            foreignIdsByName: {}
            type: TEXT
          archived: false
          rowCount: 0
          useForPages: true
          allowChildTables: true
          enableChildTablePages: false
          dynamicMetaTags: {}
          allowPublicApiAccess: false
          columnCount: 3
      properties:
        total:
          format: int32
          type: integer
        results:
          items:
            $ref: '#/components/schemas/HubDbTableV3'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardPaging'
      required:
      - results
      - total
      type: object
    BatchInputHubDbTableRowV3Request:
      example:
        inputs:
        - values:
            text_column: sample text value
            number_column: 76
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
          path: test_path
          name: test_title
          childTableId: "1902373"
        - values:
            text_column: sample text value
            number_column: 76
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
          path: test_path
          name: test_title
          childTableId: "1902373"
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3Request'
          type: array
      required:
      - inputs
      type: object
    ErrorDetail:
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
      required:
      - message
      type: object
    ForwardPaging:
      example:
        next:
          link: link
          after: after
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
      type: object
    CollectionResponseWithTotalHubDbTableRowV3ForwardPaging:
      example:
        total: 0
        paging:
          next:
            link: link
            after: after
        results:
        - id: "4099275931"
          createdAt: 2020-03-30T20:39:52.328Z
          updatedAt: 2020-03-30T20:39:52.328Z
          values:
            text_column: sample text value
            number_column: 76
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
          path: test_path
          name: test_title
          childTableId: "1902373"
        - id: "4099275931"
          createdAt: 2020-03-30T20:39:52.328Z
          updatedAt: 2020-03-30T20:39:52.328Z
          values:
            text_column: sample text value
            number_column: 76
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
          path: test_path
          name: test_title
          childTableId: "1902373"
      properties:
        total:
          format: int32
          type: integer
        results:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardPaging'
      required:
      - results
      - total
      type: object
    Column:
      example:
        name: text_column
        label: Text Column
        archived: false
        type: TEXT
        id: 1
      properties:
        name:
          description: Name of the column
          type: string
        label:
          description: Label of the column
          type: string
        id:
          description: Column Id
          type: string
        width:
          description: Column width for HubDB UI
          format: int32
          type: integer
        foreignTableId:
          description: Foreign table id referenced
          format: int64
          type: integer
        foreignColumnId:
          description: Foreign Column id
          format: int32
          type: integer
        foreignIds:
          description: Foreign Ids
          items:
            $ref: '#/components/schemas/ForeignId'
          type: array
        foreignIdsById:
          additionalProperties:
            $ref: '#/components/schemas/ForeignId'
          description: Foreign ids
          type: object
        foreignIdsByName:
          additionalProperties:
            $ref: '#/components/schemas/ForeignId'
          description: Foreign ids by name
          type: object
        type:
          description: Type of the column
          enum:
          - "NULL"
          - TEXT
          - NUMBER
          - URL
          - IMAGE
          - SELECT
          - MULTISELECT
          - BOOLEAN
          - LOCATION
          - DATE
          - DATETIME
          - CURRENCY
          - RICHTEXT
          - FOREIGN_ID
          - VIDEO
          - CTA
          type: string
        optionCount:
          description: Number of options available
          format: int32
          type: integer
        archived:
          description: Specifies whether the column is archived
          type: boolean
        options:
          description: Options to choose for select and multi-select columns
          items:
            $ref: '#/components/schemas/Option'
          type: array
      required:
      - label
      - name
      - type
      type: object
    HubDbTableV3:
      description: Model for HubDB table
      example:
        id: "1630034"
        label: Test Table
        name: test_table
        createdAt: 2019-03-15T21:20:51.556Z
        publishedAt: 2020-04-02T16:00:45.009Z
        updatedAt: 2020-04-02T16:00:43.880Z
        columns:
        - name: text_column
          label: Text Column
          id: "1"
          archived: false
          foreignIdsById: {}
          foreignIdsByName: {}
          type: TEXT
        archived: false
        rowCount: 0
        useForPages: true
        allowChildTables: true
        enableChildTablePages: false
        dynamicMetaTags: {}
        allowPublicApiAccess: false
        columnCount: 3
      properties:
        id:
          description: Id of the table
          type: string
        name:
          description: Name of the table
          type: string
        label:
          description: Label of the table
          type: string
        columns:
          description: List of columns in the table
          items:
            $ref: '#/components/schemas/Column'
          type: array
        published:
          type: boolean
        columnCount:
          description: Number of columns including deleted
          format: int32
          type: integer
        rowCount:
          description: Number of rows in the table
          format: int32
          type: integer
        createdBy:
          $ref: '#/components/schemas/SimpleUser'
        updatedBy:
          $ref: '#/components/schemas/SimpleUser'
        publishedAt:
          description: Timestamp at which the table is published recently
          format: date-time
          type: string
        dynamicMetaTags:
          additionalProperties:
            format: int32
            type: integer
          description: Specifies the key value pairs of the metadata fields with the
            associated column ids
          type: object
        createdAt:
          description: Timestamp at which the table is created
          format: date-time
          type: string
        archived:
          description: Specifies whether table is archived or not
          type: boolean
        allowPublicApiAccess:
          description: Specifies whether the table can be read by public without authorization
          type: boolean
        useForPages:
          description: Specifies whether the table can be used for creation of dynamic
            pages
          type: boolean
        enableChildTablePages:
          description: Specifies creation of multi-level dynamic pages using child
            tables
          type: boolean
        allowChildTables:
          description: Specifies whether child tables can be created
          type: boolean
        updatedAt:
          description: Timestamp at which the table is updated recently
          format: date-time
          type: string
      required:
      - label
      - name
      type: object
    BatchResponseHubDbTableRowV3:
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        requestedAt: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        links:
          key: links
        results:
        - id: "4099275931"
          createdAt: 2020-03-30T20:39:52.328Z
          updatedAt: 2020-03-30T20:39:52.328Z
          values:
            text_column: sample text value
            number_column: 76
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
          path: test_path
          name: test_title
          childTableId: "1902373"
        - id: "4099275931"
          createdAt: 2020-03-30T20:39:52.328Z
          updatedAt: 2020-03-30T20:39:52.328Z
          values:
            text_column: sample text value
            number_column: 76
            multiselect:
            - id: "1"
              name: Option 1
              type: option
              order: 0
            - id: "2"
              name: Option 2
              type: option
              order: 1
          path: test_path
          name: test_title
          childTableId: "1902373"
        status: PENDING
      properties:
        status:
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
        results:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3'
          type: array
        requestedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        completedAt:
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          type: object
      type: object
    ForeignId:
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
      required:
      - id
      - name
      - type
      type: object
    ImportResult:
      description: The result of import operation
      example:
        rowLimitExceeded: true
        duplicateRows: 6
        rowsImported: 0
        errors:
        - message: Invalid input (details will vary based on the error)
          correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
          category: VALIDATION_ERROR
          links:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
        - message: Invalid input (details will vary based on the error)
          correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
          category: VALIDATION_ERROR
          links:
            knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        errors:
          description: List of errors during import
          items:
            $ref: '#/components/schemas/Error'
          type: array
        rowsImported:
          description: Specifies number of rows imported
          format: int32
          type: integer
        duplicateRows:
          description: Specifies number of duplicate rows
          format: int32
          type: integer
        rowLimitExceeded:
          description: Specifies whether row limit exceeded during import
          type: boolean
      required:
      - duplicateRows
      - errors
      - rowLimitExceeded
      - rowsImported
      type: object
    HubDbTableV3Request:
      example:
        label: Test Table
        name: test_table
        columns:
        - name: text_column
          label: Text Column
          id: "1"
          type: TEXT
        useForPages: true
        allowChildTables: true
        enableChildTablePages: false
        dynamicMetaTags: {}
        allowPublicApiAccess: false
      properties:
        name:
          description: Name of the table
          type: string
        label:
          description: Label of the table
          type: string
        useForPages:
          description: Specifies whether the table can be used for creation of dynamic
            pages
          type: boolean
        allowPublicApiAccess:
          description: Specifies whether the table can be read by public without authorization
          type: boolean
        allowChildTables:
          description: Specifies whether child tables can be created
          type: boolean
        enableChildTablePages:
          description: Specifies creation of multi-level dynamic pages using child
            tables
          type: boolean
        columns:
          description: List of columns in the table
          items:
            $ref: '#/components/schemas/ColumnRequest'
          type: array
        dynamicMetaTags:
          additionalProperties:
            format: int32
            type: integer
          description: Specifies the key value pairs of the metadata fields with the
            associated column ids
          type: object
      required:
      - label
      - name
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: An error occurred
          type: string
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        category:
          description: The error category
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            invalidPropertyName:
            - propertyValue
            missingScopes:
            - scope1
            - scope2
          type: object
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          type: object
      required:
      - category
      - correlationId
      - message
      type: object
    BatchResponseHubDbTableRowV3WithErrors:
      properties:
        status:
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
        results:
          items:
            $ref: '#/components/schemas/HubDbTableRowV3'
          type: array
        numErrors:
          format: int32
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/StandardError'
          type: array
        requestedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        completedAt:
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - completedAt
      - results
      - startedAt
      - status
      type: object
    ColumnRequest:
      example:
        name: text_column
        label: Text Column
        archived: false
        type: TEXT
        id: 1
      properties:
        id:
          description: Column Id
          format: int32
          type: integer
        name:
          description: Name of the column
          type: string
        label:
          description: Label of the column
          type: string
        type:
          description: Type of the column
          enum:
          - "NULL"
          - TEXT
          - NUMBER
          - URL
          - IMAGE
          - SELECT
          - MULTISELECT
          - BOOLEAN
          - LOCATION
          - DATE
          - DATETIME
          - CURRENCY
          - RICHTEXT
          - FOREIGN_ID
          - VIDEO
          - CTA
          type: string
        options:
          description: Options to choose for select and multi-select columns
          items:
            $ref: '#/components/schemas/Option'
          type: array
        foreignTableId:
          description: The id of another table to which the column refers/points to.
          format: int64
          type: integer
        foreignColumnId:
          description: The id of the column from another table to which the column
            refers/points to.
          format: int32
          type: integer
      required:
      - id
      - label
      - name
      - options
      - type
      type: object
    Variant:
      type: object
    ErrorCategory:
      type: object
    HubDbTableRowV3:
      example:
        id: "4099275931"
        createdAt: 2020-03-30T20:39:52.328Z
        updatedAt: 2020-03-30T20:39:52.328Z
        values:
          text_column: sample text value
          number_column: 76
          multiselect:
          - id: "1"
            name: Option 1
            type: option
            order: 0
          - id: "2"
            name: Option 2
            type: option
            order: 1
        path: test_path
        name: test_title
        childTableId: "1902373"
      properties:
        id:
          description: The id of the table row
          type: string
        path:
          description: "Specifies the value for `hs_path` column, which will be used\
            \ as slug in the dynamic pages"
          type: string
        name:
          description: "Specifies the value for `hs_name` column, which will be used\
            \ as title in the dynamic pages"
          type: string
        createdAt:
          description: Timestamp at which the row is created
          format: date-time
          type: string
        updatedAt:
          description: Timestamp at which the row is updated last time
          format: date-time
          type: string
        childTableId:
          description: Specifies the value for the column child table id
          type: string
        values:
          additionalProperties:
            properties: {}
            type: object
          description: List of key value pairs with the column name and column value
          type: object
      required:
      - values
      type: object
    HubDbTableRowV3Request:
      example:
        values:
          text_column: sample text value
          number_column: 76
          multiselect:
          - id: "1"
            name: Option 1
            type: option
            order: 0
          - id: "2"
            name: Option 2
            type: option
            order: 1
        path: test_path
        name: test_title
        childTableId: "1902373"
      properties:
        path:
          description: "Specifies the value for `hs_path` column, which will be used\
            \ as slug in the dynamic pages"
          type: string
        name:
          description: "Specifies the value for `hs_name` column, which will be used\
            \ as title in the dynamic pages"
          type: string
        childTableId:
          description: Specifies the value for the column child table id
          format: int32
          type: integer
        values:
          additionalProperties:
            $ref: '#/components/schemas/Variant'
          description: List of key value pairs with the column name and column value
          type: object
      required:
      - values
      type: object
    Option:
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        order:
          format: int32
          type: integer
      required:
      - id
      - name
      - order
      - type
      type: object
    NextPage:
      example:
        link: link
        after: after
      properties:
        after:
          type: string
        link:
          type: string
      required:
      - after
      type: object
    post__cms_v3_hubdb_tables__tableIdOrName__draft_import_importDraftTable_request:
      properties:
        config:
          description: Configuration for the import in JSON format as described above.
          type: string
        file:
          description: The source CSV file to be imported.
          format: binary
          type: string
  securitySchemes:
    oauth2_legacy:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            hubdb: Read from and write to my HubDB
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    hapikey:
      in: query
      name: hapikey
      type: apiKey
x-hubspot-available-client-libraries:
- PHP
- Node
- Python
- Ruby
