/*
Schemas

The CRM uses schemas to define how custom objects should store and represent information in the HubSpot CRM. Schemas define details about an object's type, properties, and associations. The schema can be uniquely identified by its **object type ID**.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package schemas

import (
	"encoding/json"
)

// ObjectTypeDefinitionPatch Defines attributes to update on an object type.
type ObjectTypeDefinitionPatch struct {
	Labels *ObjectTypeDefinitionLabels `json:"labels,omitempty"`
	// The names of properties that should be **required** when creating an object of this type.
	RequiredProperties []string `json:"requiredProperties,omitempty"`
	// Names of properties that will be indexed for this object type in by HubSpot's product search.
	SearchableProperties []string `json:"searchableProperties,omitempty"`
	// The name of the primary property for this object. This will be displayed as primary on the HubSpot record page for this object type.
	PrimaryDisplayProperty *string `json:"primaryDisplayProperty,omitempty"`
	// The names of secondary properties for this object. These will be displayed as secondary on the HubSpot record page for this object type.
	SecondaryDisplayProperties []string `json:"secondaryDisplayProperties,omitempty"`
	Restorable                 *bool    `json:"restorable,omitempty"`
}

// NewObjectTypeDefinitionPatch instantiates a new ObjectTypeDefinitionPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObjectTypeDefinitionPatch() *ObjectTypeDefinitionPatch {
	this := ObjectTypeDefinitionPatch{}
	return &this
}

// NewObjectTypeDefinitionPatchWithDefaults instantiates a new ObjectTypeDefinitionPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObjectTypeDefinitionPatchWithDefaults() *ObjectTypeDefinitionPatch {
	this := ObjectTypeDefinitionPatch{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ObjectTypeDefinitionPatch) GetLabels() ObjectTypeDefinitionLabels {
	if o == nil || o.Labels == nil {
		var ret ObjectTypeDefinitionLabels
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectTypeDefinitionPatch) GetLabelsOk() (*ObjectTypeDefinitionLabels, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ObjectTypeDefinitionPatch) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given ObjectTypeDefinitionLabels and assigns it to the Labels field.
func (o *ObjectTypeDefinitionPatch) SetLabels(v ObjectTypeDefinitionLabels) {
	o.Labels = &v
}

// GetRequiredProperties returns the RequiredProperties field value if set, zero value otherwise.
func (o *ObjectTypeDefinitionPatch) GetRequiredProperties() []string {
	if o == nil || o.RequiredProperties == nil {
		var ret []string
		return ret
	}
	return o.RequiredProperties
}

// GetRequiredPropertiesOk returns a tuple with the RequiredProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectTypeDefinitionPatch) GetRequiredPropertiesOk() ([]string, bool) {
	if o == nil || o.RequiredProperties == nil {
		return nil, false
	}
	return o.RequiredProperties, true
}

// HasRequiredProperties returns a boolean if a field has been set.
func (o *ObjectTypeDefinitionPatch) HasRequiredProperties() bool {
	if o != nil && o.RequiredProperties != nil {
		return true
	}

	return false
}

// SetRequiredProperties gets a reference to the given []string and assigns it to the RequiredProperties field.
func (o *ObjectTypeDefinitionPatch) SetRequiredProperties(v []string) {
	o.RequiredProperties = v
}

// GetSearchableProperties returns the SearchableProperties field value if set, zero value otherwise.
func (o *ObjectTypeDefinitionPatch) GetSearchableProperties() []string {
	if o == nil || o.SearchableProperties == nil {
		var ret []string
		return ret
	}
	return o.SearchableProperties
}

// GetSearchablePropertiesOk returns a tuple with the SearchableProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectTypeDefinitionPatch) GetSearchablePropertiesOk() ([]string, bool) {
	if o == nil || o.SearchableProperties == nil {
		return nil, false
	}
	return o.SearchableProperties, true
}

// HasSearchableProperties returns a boolean if a field has been set.
func (o *ObjectTypeDefinitionPatch) HasSearchableProperties() bool {
	if o != nil && o.SearchableProperties != nil {
		return true
	}

	return false
}

// SetSearchableProperties gets a reference to the given []string and assigns it to the SearchableProperties field.
func (o *ObjectTypeDefinitionPatch) SetSearchableProperties(v []string) {
	o.SearchableProperties = v
}

// GetPrimaryDisplayProperty returns the PrimaryDisplayProperty field value if set, zero value otherwise.
func (o *ObjectTypeDefinitionPatch) GetPrimaryDisplayProperty() string {
	if o == nil || o.PrimaryDisplayProperty == nil {
		var ret string
		return ret
	}
	return *o.PrimaryDisplayProperty
}

// GetPrimaryDisplayPropertyOk returns a tuple with the PrimaryDisplayProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectTypeDefinitionPatch) GetPrimaryDisplayPropertyOk() (*string, bool) {
	if o == nil || o.PrimaryDisplayProperty == nil {
		return nil, false
	}
	return o.PrimaryDisplayProperty, true
}

// HasPrimaryDisplayProperty returns a boolean if a field has been set.
func (o *ObjectTypeDefinitionPatch) HasPrimaryDisplayProperty() bool {
	if o != nil && o.PrimaryDisplayProperty != nil {
		return true
	}

	return false
}

// SetPrimaryDisplayProperty gets a reference to the given string and assigns it to the PrimaryDisplayProperty field.
func (o *ObjectTypeDefinitionPatch) SetPrimaryDisplayProperty(v string) {
	o.PrimaryDisplayProperty = &v
}

// GetSecondaryDisplayProperties returns the SecondaryDisplayProperties field value if set, zero value otherwise.
func (o *ObjectTypeDefinitionPatch) GetSecondaryDisplayProperties() []string {
	if o == nil || o.SecondaryDisplayProperties == nil {
		var ret []string
		return ret
	}
	return o.SecondaryDisplayProperties
}

// GetSecondaryDisplayPropertiesOk returns a tuple with the SecondaryDisplayProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectTypeDefinitionPatch) GetSecondaryDisplayPropertiesOk() ([]string, bool) {
	if o == nil || o.SecondaryDisplayProperties == nil {
		return nil, false
	}
	return o.SecondaryDisplayProperties, true
}

// HasSecondaryDisplayProperties returns a boolean if a field has been set.
func (o *ObjectTypeDefinitionPatch) HasSecondaryDisplayProperties() bool {
	if o != nil && o.SecondaryDisplayProperties != nil {
		return true
	}

	return false
}

// SetSecondaryDisplayProperties gets a reference to the given []string and assigns it to the SecondaryDisplayProperties field.
func (o *ObjectTypeDefinitionPatch) SetSecondaryDisplayProperties(v []string) {
	o.SecondaryDisplayProperties = v
}

// GetRestorable returns the Restorable field value if set, zero value otherwise.
func (o *ObjectTypeDefinitionPatch) GetRestorable() bool {
	if o == nil || o.Restorable == nil {
		var ret bool
		return ret
	}
	return *o.Restorable
}

// GetRestorableOk returns a tuple with the Restorable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObjectTypeDefinitionPatch) GetRestorableOk() (*bool, bool) {
	if o == nil || o.Restorable == nil {
		return nil, false
	}
	return o.Restorable, true
}

// HasRestorable returns a boolean if a field has been set.
func (o *ObjectTypeDefinitionPatch) HasRestorable() bool {
	if o != nil && o.Restorable != nil {
		return true
	}

	return false
}

// SetRestorable gets a reference to the given bool and assigns it to the Restorable field.
func (o *ObjectTypeDefinitionPatch) SetRestorable(v bool) {
	o.Restorable = &v
}

func (o ObjectTypeDefinitionPatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.RequiredProperties != nil {
		toSerialize["requiredProperties"] = o.RequiredProperties
	}
	if o.SearchableProperties != nil {
		toSerialize["searchableProperties"] = o.SearchableProperties
	}
	if o.PrimaryDisplayProperty != nil {
		toSerialize["primaryDisplayProperty"] = o.PrimaryDisplayProperty
	}
	if o.SecondaryDisplayProperties != nil {
		toSerialize["secondaryDisplayProperties"] = o.SecondaryDisplayProperties
	}
	if o.Restorable != nil {
		toSerialize["restorable"] = o.Restorable
	}
	return json.Marshal(toSerialize)
}

type NullableObjectTypeDefinitionPatch struct {
	value *ObjectTypeDefinitionPatch
	isSet bool
}

func (v NullableObjectTypeDefinitionPatch) Get() *ObjectTypeDefinitionPatch {
	return v.value
}

func (v *NullableObjectTypeDefinitionPatch) Set(val *ObjectTypeDefinitionPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableObjectTypeDefinitionPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableObjectTypeDefinitionPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObjectTypeDefinitionPatch(val *ObjectTypeDefinitionPatch) *NullableObjectTypeDefinitionPatch {
	return &NullableObjectTypeDefinitionPatch{value: val, isSet: true}
}

func (v NullableObjectTypeDefinitionPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObjectTypeDefinitionPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
