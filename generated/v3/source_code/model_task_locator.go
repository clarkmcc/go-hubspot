/*
CMS Source Code

Endpoints for interacting with files in the CMS Developer File System. These files include HTML templates, CSS, JS, modules, and other assets which are used to create CMS content.

API version: v3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package source_code

import (
	"encoding/json"
)

// TaskLocator struct for TaskLocator
type TaskLocator struct {
	Links *map[string]string `json:"links,omitempty"`
	Id    string             `json:"id"`
}

// NewTaskLocator instantiates a new TaskLocator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskLocator(id string) *TaskLocator {
	this := TaskLocator{}
	this.Id = id
	return &this
}

// NewTaskLocatorWithDefaults instantiates a new TaskLocator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskLocatorWithDefaults() *TaskLocator {
	this := TaskLocator{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *TaskLocator) GetLinks() map[string]string {
	if o == nil || o.Links == nil {
		var ret map[string]string
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaskLocator) GetLinksOk() (*map[string]string, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *TaskLocator) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]string and assigns it to the Links field.
func (o *TaskLocator) SetLinks(v map[string]string) {
	o.Links = &v
}

// GetId returns the Id field value
func (o *TaskLocator) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TaskLocator) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TaskLocator) SetId(v string) {
	o.Id = v
}

func (o TaskLocator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableTaskLocator struct {
	value *TaskLocator
	isSet bool
}

func (v NullableTaskLocator) Get() *TaskLocator {
	return v.value
}

func (v *NullableTaskLocator) Set(val *TaskLocator) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskLocator) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskLocator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskLocator(val *TaskLocator) *NullableTaskLocator {
	return &NullableTaskLocator{value: val, isSet: true}
}

func (v NullableTaskLocator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskLocator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
