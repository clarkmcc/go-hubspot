/*
Custom Workflow Actions

Create custom workflow actions

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions

import (
	"encoding/json"
)

// CallbackCompletionBatchRequest Any information to send back to Workflows when completing an action callback as part of a batch request.
type CallbackCompletionBatchRequest struct {
	// The ID of the callback to complete.
	CallbackId string `json:"callbackId"`
	// A map of action output names and values.
	OutputFields map[string]string `json:"outputFields"`
}

// NewCallbackCompletionBatchRequest instantiates a new CallbackCompletionBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCallbackCompletionBatchRequest(callbackId string, outputFields map[string]string) *CallbackCompletionBatchRequest {
	this := CallbackCompletionBatchRequest{}
	this.CallbackId = callbackId
	this.OutputFields = outputFields
	return &this
}

// NewCallbackCompletionBatchRequestWithDefaults instantiates a new CallbackCompletionBatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCallbackCompletionBatchRequestWithDefaults() *CallbackCompletionBatchRequest {
	this := CallbackCompletionBatchRequest{}
	return &this
}

// GetCallbackId returns the CallbackId field value
func (o *CallbackCompletionBatchRequest) GetCallbackId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CallbackId
}

// GetCallbackIdOk returns a tuple with the CallbackId field value
// and a boolean to check if the value has been set.
func (o *CallbackCompletionBatchRequest) GetCallbackIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CallbackId, true
}

// SetCallbackId sets field value
func (o *CallbackCompletionBatchRequest) SetCallbackId(v string) {
	o.CallbackId = v
}

// GetOutputFields returns the OutputFields field value
func (o *CallbackCompletionBatchRequest) GetOutputFields() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.OutputFields
}

// GetOutputFieldsOk returns a tuple with the OutputFields field value
// and a boolean to check if the value has been set.
func (o *CallbackCompletionBatchRequest) GetOutputFieldsOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputFields, true
}

// SetOutputFields sets field value
func (o *CallbackCompletionBatchRequest) SetOutputFields(v map[string]string) {
	o.OutputFields = v
}

func (o CallbackCompletionBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["callbackId"] = o.CallbackId
	}
	if true {
		toSerialize["outputFields"] = o.OutputFields
	}
	return json.Marshal(toSerialize)
}

type NullableCallbackCompletionBatchRequest struct {
	value *CallbackCompletionBatchRequest
	isSet bool
}

func (v NullableCallbackCompletionBatchRequest) Get() *CallbackCompletionBatchRequest {
	return v.value
}

func (v *NullableCallbackCompletionBatchRequest) Set(val *CallbackCompletionBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCallbackCompletionBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCallbackCompletionBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCallbackCompletionBatchRequest(val *CallbackCompletionBatchRequest) *NullableCallbackCompletionBatchRequest {
	return &NullableCallbackCompletionBatchRequest{value: val, isSet: true}
}

func (v NullableCallbackCompletionBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCallbackCompletionBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
