/*
Automation Actions V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions

import (
	"encoding/json"
)

// CollectionResponsePublicActionDefinitionForwardPaging struct for CollectionResponsePublicActionDefinitionForwardPaging
type CollectionResponsePublicActionDefinitionForwardPaging struct {
	Paging  *ForwardPaging           `json:"paging,omitempty"`
	Results []PublicActionDefinition `json:"results"`
}

// NewCollectionResponsePublicActionDefinitionForwardPaging instantiates a new CollectionResponsePublicActionDefinitionForwardPaging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionResponsePublicActionDefinitionForwardPaging(results []PublicActionDefinition) *CollectionResponsePublicActionDefinitionForwardPaging {
	this := CollectionResponsePublicActionDefinitionForwardPaging{}
	this.Results = results
	return &this
}

// NewCollectionResponsePublicActionDefinitionForwardPagingWithDefaults instantiates a new CollectionResponsePublicActionDefinitionForwardPaging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionResponsePublicActionDefinitionForwardPagingWithDefaults() *CollectionResponsePublicActionDefinitionForwardPaging {
	this := CollectionResponsePublicActionDefinitionForwardPaging{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *CollectionResponsePublicActionDefinitionForwardPaging) GetPaging() ForwardPaging {
	if o == nil || o.Paging == nil {
		var ret ForwardPaging
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionResponsePublicActionDefinitionForwardPaging) GetPagingOk() (*ForwardPaging, bool) {
	if o == nil || o.Paging == nil {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *CollectionResponsePublicActionDefinitionForwardPaging) HasPaging() bool {
	if o != nil && o.Paging != nil {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ForwardPaging and assigns it to the Paging field.
func (o *CollectionResponsePublicActionDefinitionForwardPaging) SetPaging(v ForwardPaging) {
	o.Paging = &v
}

// GetResults returns the Results field value
func (o *CollectionResponsePublicActionDefinitionForwardPaging) GetResults() []PublicActionDefinition {
	if o == nil {
		var ret []PublicActionDefinition
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *CollectionResponsePublicActionDefinitionForwardPaging) GetResultsOk() ([]PublicActionDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Results, true
}

// SetResults sets field value
func (o *CollectionResponsePublicActionDefinitionForwardPaging) SetResults(v []PublicActionDefinition) {
	o.Results = v
}

func (o CollectionResponsePublicActionDefinitionForwardPaging) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Paging != nil {
		toSerialize["paging"] = o.Paging
	}
	if true {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableCollectionResponsePublicActionDefinitionForwardPaging struct {
	value *CollectionResponsePublicActionDefinitionForwardPaging
	isSet bool
}

func (v NullableCollectionResponsePublicActionDefinitionForwardPaging) Get() *CollectionResponsePublicActionDefinitionForwardPaging {
	return v.value
}

func (v *NullableCollectionResponsePublicActionDefinitionForwardPaging) Set(val *CollectionResponsePublicActionDefinitionForwardPaging) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionResponsePublicActionDefinitionForwardPaging) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionResponsePublicActionDefinitionForwardPaging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionResponsePublicActionDefinitionForwardPaging(val *CollectionResponsePublicActionDefinitionForwardPaging) *NullableCollectionResponsePublicActionDefinitionForwardPaging {
	return &NullableCollectionResponsePublicActionDefinitionForwardPaging{value: val, isSet: true}
}

func (v NullableCollectionResponsePublicActionDefinitionForwardPaging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionResponsePublicActionDefinitionForwardPaging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
