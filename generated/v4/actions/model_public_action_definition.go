/*
Automation Actions V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions

import (
	"encoding/json"
)

// PublicActionDefinition struct for PublicActionDefinition
type PublicActionDefinition struct {
	Functions              []PublicActionFunctionIdentifier                    `json:"functions"`
	ActionUrl              string                                              `json:"actionUrl"`
	Published              bool                                                `json:"published"`
	Labels                 map[string]PublicActionLabels                       `json:"labels"`
	InputFields            []InputFieldDefinition                              `json:"inputFields"`
	OutputFields           []OutputFieldDefinition                             `json:"outputFields,omitempty"`
	RevisionId             string                                              `json:"revisionId"`
	ArchivedAt             *int64                                              `json:"archivedAt,omitempty"`
	InputFieldDependencies []PublicActionDefinitionInputFieldDependenciesInner `json:"inputFieldDependencies,omitempty"`
	ExecutionRules         []PublicExecutionTranslationRule                    `json:"executionRules,omitempty"`
	Id                     string                                              `json:"id"`
	ObjectTypes            []string                                            `json:"objectTypes"`
	ObjectRequestOptions   *PublicObjectRequestOptions                         `json:"objectRequestOptions,omitempty"`
}

// NewPublicActionDefinition instantiates a new PublicActionDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicActionDefinition(functions []PublicActionFunctionIdentifier, actionUrl string, published bool, labels map[string]PublicActionLabels, inputFields []InputFieldDefinition, revisionId string, id string, objectTypes []string) *PublicActionDefinition {
	this := PublicActionDefinition{}
	this.Functions = functions
	this.ActionUrl = actionUrl
	this.Published = published
	this.Labels = labels
	this.InputFields = inputFields
	this.RevisionId = revisionId
	this.Id = id
	this.ObjectTypes = objectTypes
	return &this
}

// NewPublicActionDefinitionWithDefaults instantiates a new PublicActionDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicActionDefinitionWithDefaults() *PublicActionDefinition {
	this := PublicActionDefinition{}
	return &this
}

// GetFunctions returns the Functions field value
func (o *PublicActionDefinition) GetFunctions() []PublicActionFunctionIdentifier {
	if o == nil {
		var ret []PublicActionFunctionIdentifier
		return ret
	}

	return o.Functions
}

// GetFunctionsOk returns a tuple with the Functions field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetFunctionsOk() ([]PublicActionFunctionIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return o.Functions, true
}

// SetFunctions sets field value
func (o *PublicActionDefinition) SetFunctions(v []PublicActionFunctionIdentifier) {
	o.Functions = v
}

// GetActionUrl returns the ActionUrl field value
func (o *PublicActionDefinition) GetActionUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActionUrl
}

// GetActionUrlOk returns a tuple with the ActionUrl field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetActionUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActionUrl, true
}

// SetActionUrl sets field value
func (o *PublicActionDefinition) SetActionUrl(v string) {
	o.ActionUrl = v
}

// GetPublished returns the Published field value
func (o *PublicActionDefinition) GetPublished() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Published
}

// GetPublishedOk returns a tuple with the Published field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetPublishedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Published, true
}

// SetPublished sets field value
func (o *PublicActionDefinition) SetPublished(v bool) {
	o.Published = v
}

// GetLabels returns the Labels field value
func (o *PublicActionDefinition) GetLabels() map[string]PublicActionLabels {
	if o == nil {
		var ret map[string]PublicActionLabels
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetLabelsOk() (*map[string]PublicActionLabels, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Labels, true
}

// SetLabels sets field value
func (o *PublicActionDefinition) SetLabels(v map[string]PublicActionLabels) {
	o.Labels = v
}

// GetInputFields returns the InputFields field value
func (o *PublicActionDefinition) GetInputFields() []InputFieldDefinition {
	if o == nil {
		var ret []InputFieldDefinition
		return ret
	}

	return o.InputFields
}

// GetInputFieldsOk returns a tuple with the InputFields field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetInputFieldsOk() ([]InputFieldDefinition, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputFields, true
}

// SetInputFields sets field value
func (o *PublicActionDefinition) SetInputFields(v []InputFieldDefinition) {
	o.InputFields = v
}

// GetOutputFields returns the OutputFields field value if set, zero value otherwise.
func (o *PublicActionDefinition) GetOutputFields() []OutputFieldDefinition {
	if o == nil || o.OutputFields == nil {
		var ret []OutputFieldDefinition
		return ret
	}
	return o.OutputFields
}

// GetOutputFieldsOk returns a tuple with the OutputFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetOutputFieldsOk() ([]OutputFieldDefinition, bool) {
	if o == nil || o.OutputFields == nil {
		return nil, false
	}
	return o.OutputFields, true
}

// HasOutputFields returns a boolean if a field has been set.
func (o *PublicActionDefinition) HasOutputFields() bool {
	if o != nil && o.OutputFields != nil {
		return true
	}

	return false
}

// SetOutputFields gets a reference to the given []OutputFieldDefinition and assigns it to the OutputFields field.
func (o *PublicActionDefinition) SetOutputFields(v []OutputFieldDefinition) {
	o.OutputFields = v
}

// GetRevisionId returns the RevisionId field value
func (o *PublicActionDefinition) GetRevisionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetRevisionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevisionId, true
}

// SetRevisionId sets field value
func (o *PublicActionDefinition) SetRevisionId(v string) {
	o.RevisionId = v
}

// GetArchivedAt returns the ArchivedAt field value if set, zero value otherwise.
func (o *PublicActionDefinition) GetArchivedAt() int64 {
	if o == nil || o.ArchivedAt == nil {
		var ret int64
		return ret
	}
	return *o.ArchivedAt
}

// GetArchivedAtOk returns a tuple with the ArchivedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetArchivedAtOk() (*int64, bool) {
	if o == nil || o.ArchivedAt == nil {
		return nil, false
	}
	return o.ArchivedAt, true
}

// HasArchivedAt returns a boolean if a field has been set.
func (o *PublicActionDefinition) HasArchivedAt() bool {
	if o != nil && o.ArchivedAt != nil {
		return true
	}

	return false
}

// SetArchivedAt gets a reference to the given int64 and assigns it to the ArchivedAt field.
func (o *PublicActionDefinition) SetArchivedAt(v int64) {
	o.ArchivedAt = &v
}

// GetInputFieldDependencies returns the InputFieldDependencies field value if set, zero value otherwise.
func (o *PublicActionDefinition) GetInputFieldDependencies() []PublicActionDefinitionInputFieldDependenciesInner {
	if o == nil || o.InputFieldDependencies == nil {
		var ret []PublicActionDefinitionInputFieldDependenciesInner
		return ret
	}
	return o.InputFieldDependencies
}

// GetInputFieldDependenciesOk returns a tuple with the InputFieldDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetInputFieldDependenciesOk() ([]PublicActionDefinitionInputFieldDependenciesInner, bool) {
	if o == nil || o.InputFieldDependencies == nil {
		return nil, false
	}
	return o.InputFieldDependencies, true
}

// HasInputFieldDependencies returns a boolean if a field has been set.
func (o *PublicActionDefinition) HasInputFieldDependencies() bool {
	if o != nil && o.InputFieldDependencies != nil {
		return true
	}

	return false
}

// SetInputFieldDependencies gets a reference to the given []PublicActionDefinitionInputFieldDependenciesInner and assigns it to the InputFieldDependencies field.
func (o *PublicActionDefinition) SetInputFieldDependencies(v []PublicActionDefinitionInputFieldDependenciesInner) {
	o.InputFieldDependencies = v
}

// GetExecutionRules returns the ExecutionRules field value if set, zero value otherwise.
func (o *PublicActionDefinition) GetExecutionRules() []PublicExecutionTranslationRule {
	if o == nil || o.ExecutionRules == nil {
		var ret []PublicExecutionTranslationRule
		return ret
	}
	return o.ExecutionRules
}

// GetExecutionRulesOk returns a tuple with the ExecutionRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetExecutionRulesOk() ([]PublicExecutionTranslationRule, bool) {
	if o == nil || o.ExecutionRules == nil {
		return nil, false
	}
	return o.ExecutionRules, true
}

// HasExecutionRules returns a boolean if a field has been set.
func (o *PublicActionDefinition) HasExecutionRules() bool {
	if o != nil && o.ExecutionRules != nil {
		return true
	}

	return false
}

// SetExecutionRules gets a reference to the given []PublicExecutionTranslationRule and assigns it to the ExecutionRules field.
func (o *PublicActionDefinition) SetExecutionRules(v []PublicExecutionTranslationRule) {
	o.ExecutionRules = v
}

// GetId returns the Id field value
func (o *PublicActionDefinition) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PublicActionDefinition) SetId(v string) {
	o.Id = v
}

// GetObjectTypes returns the ObjectTypes field value
func (o *PublicActionDefinition) GetObjectTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ObjectTypes
}

// GetObjectTypesOk returns a tuple with the ObjectTypes field value
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetObjectTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectTypes, true
}

// SetObjectTypes sets field value
func (o *PublicActionDefinition) SetObjectTypes(v []string) {
	o.ObjectTypes = v
}

// GetObjectRequestOptions returns the ObjectRequestOptions field value if set, zero value otherwise.
func (o *PublicActionDefinition) GetObjectRequestOptions() PublicObjectRequestOptions {
	if o == nil || o.ObjectRequestOptions == nil {
		var ret PublicObjectRequestOptions
		return ret
	}
	return *o.ObjectRequestOptions
}

// GetObjectRequestOptionsOk returns a tuple with the ObjectRequestOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinition) GetObjectRequestOptionsOk() (*PublicObjectRequestOptions, bool) {
	if o == nil || o.ObjectRequestOptions == nil {
		return nil, false
	}
	return o.ObjectRequestOptions, true
}

// HasObjectRequestOptions returns a boolean if a field has been set.
func (o *PublicActionDefinition) HasObjectRequestOptions() bool {
	if o != nil && o.ObjectRequestOptions != nil {
		return true
	}

	return false
}

// SetObjectRequestOptions gets a reference to the given PublicObjectRequestOptions and assigns it to the ObjectRequestOptions field.
func (o *PublicActionDefinition) SetObjectRequestOptions(v PublicObjectRequestOptions) {
	o.ObjectRequestOptions = &v
}

func (o PublicActionDefinition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["functions"] = o.Functions
	}
	if true {
		toSerialize["actionUrl"] = o.ActionUrl
	}
	if true {
		toSerialize["published"] = o.Published
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["inputFields"] = o.InputFields
	}
	if o.OutputFields != nil {
		toSerialize["outputFields"] = o.OutputFields
	}
	if true {
		toSerialize["revisionId"] = o.RevisionId
	}
	if o.ArchivedAt != nil {
		toSerialize["archivedAt"] = o.ArchivedAt
	}
	if o.InputFieldDependencies != nil {
		toSerialize["inputFieldDependencies"] = o.InputFieldDependencies
	}
	if o.ExecutionRules != nil {
		toSerialize["executionRules"] = o.ExecutionRules
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["objectTypes"] = o.ObjectTypes
	}
	if o.ObjectRequestOptions != nil {
		toSerialize["objectRequestOptions"] = o.ObjectRequestOptions
	}
	return json.Marshal(toSerialize)
}

type NullablePublicActionDefinition struct {
	value *PublicActionDefinition
	isSet bool
}

func (v NullablePublicActionDefinition) Get() *PublicActionDefinition {
	return v.value
}

func (v *NullablePublicActionDefinition) Set(val *PublicActionDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicActionDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicActionDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicActionDefinition(val *PublicActionDefinition) *NullablePublicActionDefinition {
	return &NullablePublicActionDefinition{value: val, isSet: true}
}

func (v NullablePublicActionDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicActionDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
