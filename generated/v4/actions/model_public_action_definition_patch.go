/*
Automation Actions V4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actions

import (
	"encoding/json"
)

// PublicActionDefinitionPatch struct for PublicActionDefinitionPatch
type PublicActionDefinitionPatch struct {
	InputFields            []InputFieldDefinition                              `json:"inputFields,omitempty"`
	OutputFields           []OutputFieldDefinition                             `json:"outputFields,omitempty"`
	ActionUrl              *string                                             `json:"actionUrl,omitempty"`
	InputFieldDependencies []PublicActionDefinitionInputFieldDependenciesInner `json:"inputFieldDependencies,omitempty"`
	Published              *bool                                               `json:"published,omitempty"`
	ExecutionRules         []PublicExecutionTranslationRule                    `json:"executionRules,omitempty"`
	ObjectTypes            []string                                            `json:"objectTypes,omitempty"`
	ObjectRequestOptions   *PublicObjectRequestOptions                         `json:"objectRequestOptions,omitempty"`
	Labels                 *map[string]PublicActionLabels                      `json:"labels,omitempty"`
}

// NewPublicActionDefinitionPatch instantiates a new PublicActionDefinitionPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicActionDefinitionPatch() *PublicActionDefinitionPatch {
	this := PublicActionDefinitionPatch{}
	return &this
}

// NewPublicActionDefinitionPatchWithDefaults instantiates a new PublicActionDefinitionPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicActionDefinitionPatchWithDefaults() *PublicActionDefinitionPatch {
	this := PublicActionDefinitionPatch{}
	return &this
}

// GetInputFields returns the InputFields field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetInputFields() []InputFieldDefinition {
	if o == nil || o.InputFields == nil {
		var ret []InputFieldDefinition
		return ret
	}
	return o.InputFields
}

// GetInputFieldsOk returns a tuple with the InputFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetInputFieldsOk() ([]InputFieldDefinition, bool) {
	if o == nil || o.InputFields == nil {
		return nil, false
	}
	return o.InputFields, true
}

// HasInputFields returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasInputFields() bool {
	if o != nil && o.InputFields != nil {
		return true
	}

	return false
}

// SetInputFields gets a reference to the given []InputFieldDefinition and assigns it to the InputFields field.
func (o *PublicActionDefinitionPatch) SetInputFields(v []InputFieldDefinition) {
	o.InputFields = v
}

// GetOutputFields returns the OutputFields field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetOutputFields() []OutputFieldDefinition {
	if o == nil || o.OutputFields == nil {
		var ret []OutputFieldDefinition
		return ret
	}
	return o.OutputFields
}

// GetOutputFieldsOk returns a tuple with the OutputFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetOutputFieldsOk() ([]OutputFieldDefinition, bool) {
	if o == nil || o.OutputFields == nil {
		return nil, false
	}
	return o.OutputFields, true
}

// HasOutputFields returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasOutputFields() bool {
	if o != nil && o.OutputFields != nil {
		return true
	}

	return false
}

// SetOutputFields gets a reference to the given []OutputFieldDefinition and assigns it to the OutputFields field.
func (o *PublicActionDefinitionPatch) SetOutputFields(v []OutputFieldDefinition) {
	o.OutputFields = v
}

// GetActionUrl returns the ActionUrl field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetActionUrl() string {
	if o == nil || o.ActionUrl == nil {
		var ret string
		return ret
	}
	return *o.ActionUrl
}

// GetActionUrlOk returns a tuple with the ActionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetActionUrlOk() (*string, bool) {
	if o == nil || o.ActionUrl == nil {
		return nil, false
	}
	return o.ActionUrl, true
}

// HasActionUrl returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasActionUrl() bool {
	if o != nil && o.ActionUrl != nil {
		return true
	}

	return false
}

// SetActionUrl gets a reference to the given string and assigns it to the ActionUrl field.
func (o *PublicActionDefinitionPatch) SetActionUrl(v string) {
	o.ActionUrl = &v
}

// GetInputFieldDependencies returns the InputFieldDependencies field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetInputFieldDependencies() []PublicActionDefinitionInputFieldDependenciesInner {
	if o == nil || o.InputFieldDependencies == nil {
		var ret []PublicActionDefinitionInputFieldDependenciesInner
		return ret
	}
	return o.InputFieldDependencies
}

// GetInputFieldDependenciesOk returns a tuple with the InputFieldDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetInputFieldDependenciesOk() ([]PublicActionDefinitionInputFieldDependenciesInner, bool) {
	if o == nil || o.InputFieldDependencies == nil {
		return nil, false
	}
	return o.InputFieldDependencies, true
}

// HasInputFieldDependencies returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasInputFieldDependencies() bool {
	if o != nil && o.InputFieldDependencies != nil {
		return true
	}

	return false
}

// SetInputFieldDependencies gets a reference to the given []PublicActionDefinitionInputFieldDependenciesInner and assigns it to the InputFieldDependencies field.
func (o *PublicActionDefinitionPatch) SetInputFieldDependencies(v []PublicActionDefinitionInputFieldDependenciesInner) {
	o.InputFieldDependencies = v
}

// GetPublished returns the Published field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetPublished() bool {
	if o == nil || o.Published == nil {
		var ret bool
		return ret
	}
	return *o.Published
}

// GetPublishedOk returns a tuple with the Published field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetPublishedOk() (*bool, bool) {
	if o == nil || o.Published == nil {
		return nil, false
	}
	return o.Published, true
}

// HasPublished returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasPublished() bool {
	if o != nil && o.Published != nil {
		return true
	}

	return false
}

// SetPublished gets a reference to the given bool and assigns it to the Published field.
func (o *PublicActionDefinitionPatch) SetPublished(v bool) {
	o.Published = &v
}

// GetExecutionRules returns the ExecutionRules field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetExecutionRules() []PublicExecutionTranslationRule {
	if o == nil || o.ExecutionRules == nil {
		var ret []PublicExecutionTranslationRule
		return ret
	}
	return o.ExecutionRules
}

// GetExecutionRulesOk returns a tuple with the ExecutionRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetExecutionRulesOk() ([]PublicExecutionTranslationRule, bool) {
	if o == nil || o.ExecutionRules == nil {
		return nil, false
	}
	return o.ExecutionRules, true
}

// HasExecutionRules returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasExecutionRules() bool {
	if o != nil && o.ExecutionRules != nil {
		return true
	}

	return false
}

// SetExecutionRules gets a reference to the given []PublicExecutionTranslationRule and assigns it to the ExecutionRules field.
func (o *PublicActionDefinitionPatch) SetExecutionRules(v []PublicExecutionTranslationRule) {
	o.ExecutionRules = v
}

// GetObjectTypes returns the ObjectTypes field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetObjectTypes() []string {
	if o == nil || o.ObjectTypes == nil {
		var ret []string
		return ret
	}
	return o.ObjectTypes
}

// GetObjectTypesOk returns a tuple with the ObjectTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetObjectTypesOk() ([]string, bool) {
	if o == nil || o.ObjectTypes == nil {
		return nil, false
	}
	return o.ObjectTypes, true
}

// HasObjectTypes returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasObjectTypes() bool {
	if o != nil && o.ObjectTypes != nil {
		return true
	}

	return false
}

// SetObjectTypes gets a reference to the given []string and assigns it to the ObjectTypes field.
func (o *PublicActionDefinitionPatch) SetObjectTypes(v []string) {
	o.ObjectTypes = v
}

// GetObjectRequestOptions returns the ObjectRequestOptions field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetObjectRequestOptions() PublicObjectRequestOptions {
	if o == nil || o.ObjectRequestOptions == nil {
		var ret PublicObjectRequestOptions
		return ret
	}
	return *o.ObjectRequestOptions
}

// GetObjectRequestOptionsOk returns a tuple with the ObjectRequestOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetObjectRequestOptionsOk() (*PublicObjectRequestOptions, bool) {
	if o == nil || o.ObjectRequestOptions == nil {
		return nil, false
	}
	return o.ObjectRequestOptions, true
}

// HasObjectRequestOptions returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasObjectRequestOptions() bool {
	if o != nil && o.ObjectRequestOptions != nil {
		return true
	}

	return false
}

// SetObjectRequestOptions gets a reference to the given PublicObjectRequestOptions and assigns it to the ObjectRequestOptions field.
func (o *PublicActionDefinitionPatch) SetObjectRequestOptions(v PublicObjectRequestOptions) {
	o.ObjectRequestOptions = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *PublicActionDefinitionPatch) GetLabels() map[string]PublicActionLabels {
	if o == nil || o.Labels == nil {
		var ret map[string]PublicActionLabels
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicActionDefinitionPatch) GetLabelsOk() (*map[string]PublicActionLabels, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *PublicActionDefinitionPatch) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]PublicActionLabels and assigns it to the Labels field.
func (o *PublicActionDefinitionPatch) SetLabels(v map[string]PublicActionLabels) {
	o.Labels = &v
}

func (o PublicActionDefinitionPatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InputFields != nil {
		toSerialize["inputFields"] = o.InputFields
	}
	if o.OutputFields != nil {
		toSerialize["outputFields"] = o.OutputFields
	}
	if o.ActionUrl != nil {
		toSerialize["actionUrl"] = o.ActionUrl
	}
	if o.InputFieldDependencies != nil {
		toSerialize["inputFieldDependencies"] = o.InputFieldDependencies
	}
	if o.Published != nil {
		toSerialize["published"] = o.Published
	}
	if o.ExecutionRules != nil {
		toSerialize["executionRules"] = o.ExecutionRules
	}
	if o.ObjectTypes != nil {
		toSerialize["objectTypes"] = o.ObjectTypes
	}
	if o.ObjectRequestOptions != nil {
		toSerialize["objectRequestOptions"] = o.ObjectRequestOptions
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	return json.Marshal(toSerialize)
}

type NullablePublicActionDefinitionPatch struct {
	value *PublicActionDefinitionPatch
	isSet bool
}

func (v NullablePublicActionDefinitionPatch) Get() *PublicActionDefinitionPatch {
	return v.value
}

func (v *NullablePublicActionDefinitionPatch) Set(val *PublicActionDefinitionPatch) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicActionDefinitionPatch) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicActionDefinitionPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicActionDefinitionPatch(val *PublicActionDefinitionPatch) *NullablePublicActionDefinitionPatch {
	return &NullablePublicActionDefinitionPatch{value: val, isSet: true}
}

func (v NullablePublicActionDefinitionPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicActionDefinitionPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
