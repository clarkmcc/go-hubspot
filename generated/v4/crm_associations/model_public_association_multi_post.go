/*
CrmPublicAssociationsServiceV4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm_associations

import (
	"encoding/json"
)

// PublicAssociationMultiPost struct for PublicAssociationMultiPost
type PublicAssociationMultiPost struct {
	From  PublicObjectId    `json:"from"`
	To    PublicObjectId    `json:"to"`
	Types []AssociationSpec `json:"types"`
}

// NewPublicAssociationMultiPost instantiates a new PublicAssociationMultiPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicAssociationMultiPost(from PublicObjectId, to PublicObjectId, types []AssociationSpec) *PublicAssociationMultiPost {
	this := PublicAssociationMultiPost{}
	this.From = from
	this.To = to
	this.Types = types
	return &this
}

// NewPublicAssociationMultiPostWithDefaults instantiates a new PublicAssociationMultiPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicAssociationMultiPostWithDefaults() *PublicAssociationMultiPost {
	this := PublicAssociationMultiPost{}
	return &this
}

// GetFrom returns the From field value
func (o *PublicAssociationMultiPost) GetFrom() PublicObjectId {
	if o == nil {
		var ret PublicObjectId
		return ret
	}

	return o.From
}

// GetFromOk returns a tuple with the From field value
// and a boolean to check if the value has been set.
func (o *PublicAssociationMultiPost) GetFromOk() (*PublicObjectId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.From, true
}

// SetFrom sets field value
func (o *PublicAssociationMultiPost) SetFrom(v PublicObjectId) {
	o.From = v
}

// GetTo returns the To field value
func (o *PublicAssociationMultiPost) GetTo() PublicObjectId {
	if o == nil {
		var ret PublicObjectId
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *PublicAssociationMultiPost) GetToOk() (*PublicObjectId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *PublicAssociationMultiPost) SetTo(v PublicObjectId) {
	o.To = v
}

// GetTypes returns the Types field value
func (o *PublicAssociationMultiPost) GetTypes() []AssociationSpec {
	if o == nil {
		var ret []AssociationSpec
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
func (o *PublicAssociationMultiPost) GetTypesOk() ([]AssociationSpec, bool) {
	if o == nil {
		return nil, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *PublicAssociationMultiPost) SetTypes(v []AssociationSpec) {
	o.Types = v
}

func (o PublicAssociationMultiPost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["from"] = o.From
	}
	if true {
		toSerialize["to"] = o.To
	}
	if true {
		toSerialize["types"] = o.Types
	}
	return json.Marshal(toSerialize)
}

type NullablePublicAssociationMultiPost struct {
	value *PublicAssociationMultiPost
	isSet bool
}

func (v NullablePublicAssociationMultiPost) Get() *PublicAssociationMultiPost {
	return v.value
}

func (v *NullablePublicAssociationMultiPost) Set(val *PublicAssociationMultiPost) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicAssociationMultiPost) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicAssociationMultiPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicAssociationMultiPost(val *PublicAssociationMultiPost) *NullablePublicAssociationMultiPost {
	return &NullablePublicAssociationMultiPost{value: val, isSet: true}
}

func (v NullablePublicAssociationMultiPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicAssociationMultiPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
