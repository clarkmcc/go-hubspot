/*
CrmPublicAssociationsServiceV4

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crm_associations

import (
	"encoding/json"
)

// BatchInputPublicAssociationMultiArchive struct for BatchInputPublicAssociationMultiArchive
type BatchInputPublicAssociationMultiArchive struct {
	Inputs []PublicAssociationMultiArchive `json:"inputs"`
}

// NewBatchInputPublicAssociationMultiArchive instantiates a new BatchInputPublicAssociationMultiArchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchInputPublicAssociationMultiArchive(inputs []PublicAssociationMultiArchive) *BatchInputPublicAssociationMultiArchive {
	this := BatchInputPublicAssociationMultiArchive{}
	this.Inputs = inputs
	return &this
}

// NewBatchInputPublicAssociationMultiArchiveWithDefaults instantiates a new BatchInputPublicAssociationMultiArchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchInputPublicAssociationMultiArchiveWithDefaults() *BatchInputPublicAssociationMultiArchive {
	this := BatchInputPublicAssociationMultiArchive{}
	return &this
}

// GetInputs returns the Inputs field value
func (o *BatchInputPublicAssociationMultiArchive) GetInputs() []PublicAssociationMultiArchive {
	if o == nil {
		var ret []PublicAssociationMultiArchive
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *BatchInputPublicAssociationMultiArchive) GetInputsOk() ([]PublicAssociationMultiArchive, bool) {
	if o == nil {
		return nil, false
	}
	return o.Inputs, true
}

// SetInputs sets field value
func (o *BatchInputPublicAssociationMultiArchive) SetInputs(v []PublicAssociationMultiArchive) {
	o.Inputs = v
}

func (o BatchInputPublicAssociationMultiArchive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["inputs"] = o.Inputs
	}
	return json.Marshal(toSerialize)
}

type NullableBatchInputPublicAssociationMultiArchive struct {
	value *BatchInputPublicAssociationMultiArchive
	isSet bool
}

func (v NullableBatchInputPublicAssociationMultiArchive) Get() *BatchInputPublicAssociationMultiArchive {
	return v.value
}

func (v *NullableBatchInputPublicAssociationMultiArchive) Set(val *BatchInputPublicAssociationMultiArchive) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchInputPublicAssociationMultiArchive) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchInputPublicAssociationMultiArchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchInputPublicAssociationMultiArchive(val *BatchInputPublicAssociationMultiArchive) *NullableBatchInputPublicAssociationMultiArchive {
	return &NullableBatchInputPublicAssociationMultiArchive{value: val, isSet: true}
}

func (v NullableBatchInputPublicAssociationMultiArchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchInputPublicAssociationMultiArchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
