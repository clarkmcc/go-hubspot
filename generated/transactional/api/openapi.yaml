openapi: 3.0.1
info:
  title: Transactional Email
  version: v3
servers:
- url: https://api.hubapi.com/
tags:
- name: Single_Send
- name: Public_Smtp_Tokens
paths:
  /marketing/v3/transactional/single-email/send:
    post:
      description: Asynchronously send a transactional email. Returns the status of
        the email send with a statusId that can be used to continuously query for
        the status using the Email Send Status API.
      operationId: post-/marketing/v3/transactional/single-email/send_sendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicSingleSendRequestEgg'
        description: A request object describing the email to send.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSendStatusView'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - transactional-email
      - hapikey: []
      summary: Send a single transactional email asynchronously.
      tags:
      - Single_Send
      x-hubspot-rate-limit-exemptions:
      - daily
      - ten-secondly
  /marketing/v3/transactional/smtp-tokens:
    get:
      description: Query multiple SMTP API tokens by campaign name or a single token
        by emailCampaignId.
      operationId: get-/marketing/v3/transactional/smtp-tokens_getTokensPage
      parameters:
      - description: A name for the campaign tied to the SMTP API token.
        explode: true
        in: query
        name: campaignName
        required: false
        schema:
          type: string
        style: form
      - description: Identifier assigned to the campaign provided during the token
          creation.
        explode: true
        in: query
        name: emailCampaignId
        required: false
        schema:
          type: string
        style: form
      - description: Starting point to get the next set of results.
        explode: true
        in: query
        name: after
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of tokens to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseSmtpApiTokenViewForwardPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - transactional-email
      summary: Query SMTP API tokens by campaign name or an emailCampaignId.
      tags:
      - Public_Smtp_Tokens
    post:
      description: Create a SMTP API token.
      operationId: post-/marketing/v3/transactional/smtp-tokens_createToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmtpApiTokenRequestEgg'
        description: A request object that includes the campaign name tied to the
          token and whether contacts should be created for email recipients.
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpApiTokenView'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - transactional-email
      summary: Create a SMTP API token.
      tags:
      - Public_Smtp_Tokens
  /marketing/v3/transactional/smtp-tokens/{tokenId}:
    delete:
      description: Delete a single token by ID.
      operationId: "delete-/marketing/v3/transactional/smtp-tokens/{tokenId}_archiveToken"
      parameters:
      - description: Identifier generated when a token is created.
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - transactional-email
      summary: Delete a single token by ID.
      tags:
      - Public_Smtp_Tokens
    get:
      description: Query a single token by ID.
      operationId: "get-/marketing/v3/transactional/smtp-tokens/{tokenId}_getTokenById"
      parameters:
      - description: Identifier generated when a token is created.
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpApiTokenView'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - transactional-email
      summary: Query a single token by ID.
      tags:
      - Public_Smtp_Tokens
  /marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset:
    post:
      description: "Allows the creation of a replacement password for a given token.\
        \ Once the password is successfully reset, the old password for the token\
        \ will be invalid."
      operationId: "post-/marketing/v3/transactional/smtp-tokens/{tokenId}/password-reset_resetPassword"
      parameters:
      - description: Identifier generated when a token is created.
        explode: false
        in: path
        name: tokenId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmtpApiTokenView'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - oauth2_legacy:
        - transactional-email
      summary: Reset the password of an existing token.
      tags:
      - Public_Smtp_Tokens
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    CollectionResponseSmtpApiTokenViewForwardPaging:
      example:
        paging:
          next:
            link: link
            after: after
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          password: password
          createdBy: createdBy
          createContact: true
          id: id
          emailCampaignId: emailCampaignId
          campaignName: campaignName
        - createdAt: 2000-01-23T04:56:07.000+00:00
          password: password
          createdBy: createdBy
          createContact: true
          id: id
          emailCampaignId: emailCampaignId
          campaignName: campaignName
      properties:
        results:
          items:
            $ref: '#/components/schemas/SmtpApiTokenView'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardPaging'
      required:
      - results
      type: object
    EmailSendStatusView:
      description: Describes the status of an email send request.
      example:
        eventId:
          created: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        completedAt: 2000-01-23T04:56:07.000+00:00
        statusId: statusId
        sendResult: SENT
        requestedAt: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        status: PENDING
      properties:
        statusId:
          description: Identifier used to query the status of the send.
          type: string
        sendResult:
          description: Result of the send.
          enum:
          - SENT
          - IDEMPOTENT_IGNORE
          - QUEUED
          - IDEMPOTENT_FAIL
          - THROTTLED
          - EMAIL_DISABLED
          - PORTAL_SUSPENDED
          - INVALID_TO_ADDRESS
          - BLOCKED_DOMAIN
          - PREVIOUSLY_BOUNCED
          - EMAIL_UNCONFIRMED
          - PREVIOUS_SPAM
          - PREVIOUSLY_UNSUBSCRIBED_MESSAGE
          - PREVIOUSLY_UNSUBSCRIBED_PORTAL
          - INVALID_FROM_ADDRESS
          - CAMPAIGN_CANCELLED
          - VALIDATION_FAILED
          - MTA_IGNORE
          - BLOCKED_ADDRESS
          - PORTAL_OVER_LIMIT
          - PORTAL_EXPIRED
          - PORTAL_MISSING_MARKETING_SCOPE
          - MISSING_TEMPLATE_PROPERTIES
          - MISSING_REQUIRED_PARAMETER
          - PORTAL_AUTHENTICATION_FAILURE
          - MISSING_CONTENT
          - CORRUPT_INPUT
          - TEMPLATE_RENDER_EXCEPTION
          - GRAYMAIL_SUPPRESSED
          - UNCONFIGURED_SENDING_DOMAIN
          - UNDELIVERABLE
          - CANCELLED_ABUSE
          - QUARANTINED_ADDRESS
          - ADDRESS_ONLY_ACCEPTED_ON_PROD
          - PORTAL_NOT_AUTHORIZED_FOR_APPLICATION
          - ADDRESS_LIST_BOMBED
          - ADDRESS_OPTED_OUT
          - RECIPIENT_FATIGUE_SUPPRESSED
          - TOO_MANY_RECIPIENTS
          - PREVIOUSLY_UNSUBSCRIBED_BRAND
          - NON_MARKETABLE_CONTACT
          - PREVIOUSLY_UNSUBSCRIBED_BUSINESS_UNIT
          type: string
        requestedAt:
          description: Time when the send was requested.
          format: date-time
          type: string
        startedAt:
          description: Time when the send began processing.
          format: date-time
          type: string
        completedAt:
          description: Time when the send was completed.
          format: date-time
          type: string
        status:
          description: Status of the send request.
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
        eventId:
          $ref: '#/components/schemas/EventIdView'
      required:
      - status
      - statusId
      type: object
    ErrorDetail:
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
      required:
      - message
      type: object
    SmtpApiTokenRequestEgg:
      description: A request object to create a SMTP API token
      example:
        createContact: true
        campaignName: campaignName
      properties:
        createContact:
          description: Indicates whether a contact should be created for email recipients.
          type: boolean
        campaignName:
          description: A name for the campaign tied to the SMTP API token.
          type: string
      required:
      - campaignName
      - createContact
      type: object
    ForwardPaging:
      example:
        next:
          link: link
          after: after
      properties:
        next:
          $ref: '#/components/schemas/NextPage'
      type: object
    PublicSingleSendRequestEgg:
      description: A request to send a single transactional email asynchronously.
      example:
        customProperties:
          key: "{}"
        emailId: 0
        message:
          cc:
          - cc
          - cc
          sendId: sendId
          bcc:
          - bcc
          - bcc
          replyTo:
          - replyTo
          - replyTo
          from: from
          to: to
        contactProperties:
          key: contactProperties
      properties:
        emailId:
          description: "The content ID for the transactional email, which can be found\
            \ in email tool UI."
          format: int32
          type: integer
        message:
          $ref: '#/components/schemas/PublicSingleSendEmail'
        contactProperties:
          additionalProperties:
            type: string
          description: "The contactProperties field is a map of contact property values.\
            \ Each contact property value contains a name and value property. Each\
            \ property will get set on the contact record and will be visible in the\
            \ template under {{ contact.NAME }}. Use these properties when you want\
            \ to set a contact property while you’re sending the email. For example,\
            \ when sending a reciept you may want to set a last_paid_date property,\
            \ as the sending of the receipt will have information about the last payment."
          type: object
        customProperties:
          additionalProperties:
            properties: {}
            type: object
          description: |-
            The customProperties field is a map of property values. Each property value contains a name and value property. Each property will be visible in the template under {{ custom.NAME }}.
            Note: Custom properties do not currently support arrays. To provide a listing in an email, one workaround is to build an HTML list (either with tables or ul) and specify it as a custom property.
          type: object
      required:
      - emailId
      - message
      type: object
    EventIdView:
      description: The ID of a send event.
      example:
        created: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        created:
          description: Time of event creation.
          format: date-time
          type: string
        id:
          description: Identifier of event.
          format: uuid
          type: string
      required:
      - created
      - id
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: An error occurred
          type: string
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        category:
          description: The error category
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            invalidPropertyName:
            - propertyValue
            missingScopes:
            - scope1
            - scope2
          type: object
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          type: object
      required:
      - category
      - correlationId
      - message
      type: object
    SmtpApiTokenView:
      description: A SMTP API token provides both an ID and password that can be used
        to send email through the HubSpot SMTP API.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        password: password
        createdBy: createdBy
        createContact: true
        id: id
        emailCampaignId: emailCampaignId
        campaignName: campaignName
      properties:
        id:
          description: User name to log into the HubSpot SMTP server.
          type: string
        createdBy:
          description: Email address of the user that sent the token creation request.
          type: string
        password:
          description: Password used to log into the HubSpot SMTP server.
          type: string
        emailCampaignId:
          description: Identifier assigned to the campaign provided in the token creation
            request.
          type: string
        createdAt:
          description: Timestamp generated when a token is created.
          format: date-time
          type: string
        createContact:
          description: Indicates whether a contact should be created for email recipients.
          type: boolean
        campaignName:
          description: A name for the campaign tied to the token.
          type: string
      required:
      - campaignName
      - createContact
      - createdAt
      - createdBy
      - emailCampaignId
      - id
      type: object
    NextPage:
      example:
        link: link
        after: after
      properties:
        after:
          type: string
        link:
          type: string
      required:
      - after
      type: object
    PublicSingleSendEmail:
      description: A JSON object containing anything you want to override.
      example:
        cc:
        - cc
        - cc
        sendId: sendId
        bcc:
        - bcc
        - bcc
        replyTo:
        - replyTo
        - replyTo
        from: from
        to: to
      properties:
        from:
          description: The From header for the email.
          type: string
        to:
          description: The recipient of the email.
          type: string
        sendId:
          description: ID for a particular send. No more than one email will be sent
            per sendId.
          type: string
        replyTo:
          description: List of Reply-To header values for the email.
          items:
            type: string
          type: array
        cc:
          description: List of email addresses to send as Cc.
          items:
            type: string
          type: array
        bcc:
          description: List of email addresses to send as Bcc.
          items:
            type: string
          type: array
      required:
      - to
      type: object
  securitySchemes:
    oauth2_legacy:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            transactional-email: Transactional Emails
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    hapikey:
      in: query
      name: hapikey
      type: apiKey
x-hubspot-available-client-libraries:
- Node
