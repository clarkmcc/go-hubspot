openapi: 3.0.1
info:
  description: |
    These APIs allow you to interact with HubSpot's Marketing Events Extension. It allows you to:
    * Create, Read or update Marketing Event information in HubSpot
    * Specify whether a HubSpot contact has registered, attended or cancelled a registration to a Marketing Event.
    * Specify a URL that can be called to get the details of a Marketing Event.
  title: Marketing Events Extension
  version: v3
servers:
- url: https://api.hubapi.com/
tags:
- description: Operations to interact with URL settings for an external application.
  name: Settings
- description: Endpoints that allow you to create or modify the state of an individual
    Marketing Event in HubSpot.
  name: Basic
- description: Endpoints that allow you to create or modify the state of multiple
    Marketing Events in HubSpot.
  name: Batch
- description: Endpoints that allow you to search for Marketing Events in HubSpot.
  name: Search
- description: "Operations to mark HubSpot contacts as registered, attended or cancelled\
    \ a registration to a Marketing Event."
  name: Subscriber State Changes
paths:
  /marketing/v3/marketing-events/events:
    post:
      description: Creates a new marketing event in HubSpot
      operationId: post-/marketing/v3/marketing-events/events_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketingEventCreateRequestParams'
        description: The details of the marketing event to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventDefaultResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Create a marketing event
      tags:
      - Basic
  /marketing/v3/marketing-events/events/delete:
    post:
      description: Bulk delete a number of marketing events in HubSpot
      operationId: post-/marketing/v3/marketing-events/events/delete_archive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputMarketingEventExternalUniqueIdentifier'
        description: The details of the marketing events to delete
        required: true
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Delete multiple marketing events
      tags:
      - Batch
  /marketing/v3/marketing-events/events/search:
    get:
      description: Search for marketing events that have an event id that starts with
        the query string
      operationId: get-/marketing/v3/marketing-events/events/search_doSearch
      parameters:
      - description: The partial event id to search for
        explode: true
        in: query
        name: q
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.read
      summary: Search for marketing events
      tags:
      - Search
  /marketing/v3/marketing-events/events/upsert:
    post:
      description: "Upset multiple Marketing Event. If there is an existing Marketing\
        \ event with the specified id, it will be updated; otherwise a new event will\
        \ be created."
      operationId: post-/marketing/v3/marketing-events/events/upsert_doUpsert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputMarketingEventCreateRequestParams'
        description: The details of the marketing events to upsert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponseMarketingEventPublicDefaultResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Create or update multiple marketing events
      tags:
      - Batch
  /marketing/v3/marketing-events/events/{externalEventId}:
    delete:
      description: "Deletes an existing Marketing Event with the specified id, if\
        \ one exists."
      operationId: "delete-/marketing/v3/marketing-events/events/{externalEventId}_archive"
      parameters:
      - description: The id of the marketing event to delete
        explode: false
        in: path
        name: externalEventId
        required: true
        schema:
          type: string
        style: simple
      - description: The account id associated with the marketing event
        explode: true
        in: query
        name: externalAccountId
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          content: {}
          description: No content
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Delete a marketing event
      tags:
      - Basic
    get:
      description: "Returns the details of the Marketing Event with the specified\
        \ id, if one exists."
      operationId: "get-/marketing/v3/marketing-events/events/{externalEventId}_getById"
      parameters:
      - description: The id of the marketing event to return
        explode: false
        in: path
        name: externalEventId
        required: true
        schema:
          type: string
        style: simple
      - description: The account id associated with the marketing event
        explode: true
        in: query
        name: externalAccountId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventPublicReadResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.read
      summary: Get a marketing event
      tags:
      - Basic
    patch:
      description: "Updates an existing Marketing Event with the specified id, if\
        \ one exists."
      operationId: "patch-/marketing/v3/marketing-events/events/{externalEventId}_update"
      parameters:
      - description: The id of the marketing event to update
        explode: false
        in: path
        name: externalEventId
        required: true
        schema:
          type: string
        style: simple
      - description: The account id associated with the marketing event
        explode: true
        in: query
        name: externalAccountId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketingEventUpdateRequestParams'
        description: The details of the marketing event to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventPublicDefaultResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Update a marketing event
      tags:
      - Basic
    put:
      description: "Upsets a Marketing Event. If there is an existing Marketing event\
        \ with the specified id, it will be updated; otherwise a new event will be\
        \ created."
      operationId: "put-/marketing/v3/marketing-events/events/{externalEventId}_replace"
      parameters:
      - description: The id of the marketing event to upsert
        explode: false
        in: path
        name: externalEventId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketingEventCreateRequestParams'
        description: The details of the marketing event to upsert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventPublicDefaultResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Create or update a marketing event
      tags:
      - Basic
  /marketing/v3/marketing-events/events/{externalEventId}/cancel:
    post:
      description: Mark a marketing event as cancelled.
      operationId: "post-/marketing/v3/marketing-events/events/{externalEventId}/cancel_doCancel"
      parameters:
      - description: The id of the marketing event to mark as cancelled
        explode: false
        in: path
        name: externalEventId
        required: true
        schema:
          type: string
        style: simple
      - description: The account id associated with the marketing event
        explode: true
        in: query
        name: externalAccountId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketingEventDefaultResponse'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Mark a marketing event as cancelled
      tags:
      - Basic
  /marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert:
    post:
      description: "Record a subscription state between multiple HubSpot contacts\
        \ and a marketing event, using contact email addresses."
      operationId: "post-/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/email-upsert_doEmailUpsertById"
      parameters:
      - description: The id of the marketing event
        explode: false
        in: path
        name: externalEventId
        required: true
        schema:
          type: string
        style: simple
      - description: The new subscriber state for the HubSpot contacts and the specified
          marketing event
        explode: false
        in: path
        name: subscriberState
        required: true
        schema:
          type: string
        style: simple
      - description: The account id associated with the marketing event
        explode: true
        in: query
        name: externalAccountId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputMarketingEventEmailSubscriber'
        description: The details of the contacts to subscribe to the event
        required: true
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Record
      tags:
      - Subscriber State Changes
  /marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert:
    post:
      description: "Record a subscription state between multiple HubSpot contacts\
        \ and a marketing event, using HubSpot contact ids."
      operationId: "post-/marketing/v3/marketing-events/events/{externalEventId}/{subscriberState}/upsert_doUpsertById"
      parameters:
      - description: The id of the marketing event
        explode: false
        in: path
        name: externalEventId
        required: true
        schema:
          type: string
        style: simple
      - description: The new subscriber state for the HubSpot contacts and the specified
          marketing event
        explode: false
        in: path
        name: subscriberState
        required: true
        schema:
          type: string
        style: simple
      - description: The account id associated with the marketing event
        explode: true
        in: query
        name: externalAccountId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchInputMarketingEventSubscriber'
        description: The details of the contacts to subscribe to the event
        required: true
      responses:
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - oauth2_legacy:
        - crm.objects.marketing_events.write
      summary: Record
      tags:
      - Subscriber State Changes
  /marketing/v3/marketing-events/{appId}/settings:
    get:
      description: Retrieve the current settings for the application.
      operationId: "get-/marketing/v3/marketing-events/{appId}/settings_getAll"
      parameters:
      - description: The id of the application to retrieve the settings for.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailSettings'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - developer_hapikey: []
      summary: Retrieve the application settings
      tags:
      - Settings
    post:
      description: Create or update the current settings for the application.
      operationId: "post-/marketing/v3/marketing-events/{appId}/settings_create"
      parameters:
      - description: The id of the application to update the settings for.
        explode: false
        in: path
        name: appId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventDetailSettingsUrl'
        description: The new application settings
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetailSettings'
          description: successful operation
        default:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Error'
          description: An error occurred.
      security:
      - hapikey: []
      - developer_hapikey: []
      summary: Update the application settings
      tags:
      - Settings
components:
  responses:
    Error:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Error'
      description: An error occurred.
  schemas:
    CollectionResponseMarketingEventExternalUniqueIdentifierNoPaging:
      example:
        results:
        - externalAccountId: externalAccountId
          externalEventId: externalEventId
          appId: 0
        - externalAccountId: externalAccountId
          externalEventId: externalEventId
          appId: 0
      properties:
        results:
          items:
            $ref: '#/components/schemas/MarketingEventExternalUniqueIdentifier'
          type: array
      required:
      - results
      type: object
    StandardError:
      example:
        subCategory: "{}"
        context:
          key:
          - context
          - context
        links:
          key: links
        id: id
        category:
          httpStatus: CONTINUE
          name: name
        message: message
        errors:
        - subCategory: subCategory
          code: code
          in: in
          context:
            missingScopes:
            - scope1
            - scope2
          message: message
        - subCategory: subCategory
          code: code
          in: in
          context:
            missingScopes:
            - scope1
            - scope2
          message: message
        status: status
      properties:
        status:
          type: string
        id:
          type: string
        category:
          $ref: '#/components/schemas/ErrorCategory'
        subCategory:
          properties: {}
          type: object
        message:
          type: string
        errors:
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - category
      - context
      - errors
      - links
      - message
      - status
      type: object
    MarketingEventCreateRequestParams:
      example:
        startDateTime: 2000-01-23T04:56:07.000+00:00
        customProperties:
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        externalAccountId: externalAccountId
        eventCancelled: true
        eventOrganizer: eventOrganizer
        eventUrl: eventUrl
        externalEventId: externalEventId
        eventDescription: eventDescription
        eventName: eventName
        eventType: eventType
        endDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        eventName:
          description: The name of the marketing event.
          type: string
        eventType:
          description: "Describes what type of event this is.  For example: `WEBINAR`,\
            \ `CONFERENCE`, `WORKSHOP`"
          type: string
        startDateTime:
          description: The start date and time of the marketing event.
          format: date-time
          type: string
        endDateTime:
          description: The end date and time of the marketing event.
          format: date-time
          type: string
        eventOrganizer:
          description: The name of the organizer of the marketing event.
          type: string
        eventDescription:
          description: The description of the marketing event.
          type: string
        eventUrl:
          description: A URL in the external event application where the marketing
            event can be managed.
          type: string
        eventCancelled:
          description: Indicates if the marketing event has been cancelled.  Defaults
            to `false`
          type: boolean
        customProperties:
          description: |
            A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
            In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
          items:
            $ref: '#/components/schemas/PropertyValue'
          type: array
        externalAccountId:
          description: The accountId that is associated with this marketing event
            in the external event application.
          type: string
        externalEventId:
          description: The id of the marketing event in the external event application.
          type: string
      required:
      - eventName
      - eventOrganizer
      - externalAccountId
      - externalEventId
      type: object
    BatchInputMarketingEventCreateRequestParams:
      example:
        inputs:
        - startDateTime: 2000-01-23T04:56:07.000+00:00
          customProperties:
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          externalAccountId: externalAccountId
          eventCancelled: true
          eventOrganizer: eventOrganizer
          eventUrl: eventUrl
          externalEventId: externalEventId
          eventDescription: eventDescription
          eventName: eventName
          eventType: eventType
          endDateTime: 2000-01-23T04:56:07.000+00:00
        - startDateTime: 2000-01-23T04:56:07.000+00:00
          customProperties:
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          externalAccountId: externalAccountId
          eventCancelled: true
          eventOrganizer: eventOrganizer
          eventUrl: eventUrl
          externalEventId: externalEventId
          eventDescription: eventDescription
          eventName: eventName
          eventType: eventType
          endDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/MarketingEventCreateRequestParams'
          type: array
      required:
      - inputs
      type: object
    Error:
      example:
        message: Invalid input (details will vary based on the error)
        correlationId: aeb5f871-7f07-4993-9211-075dc63e7cbf
        category: VALIDATION_ERROR
        links:
          knowledge-base: https://www.hubspot.com/products/service/knowledge-base
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          example: An error occurred
          type: string
        correlationId:
          description: A unique identifier for the request. Include this value with
            any error reports or support tickets
          example: aeb5f871-7f07-4993-9211-075dc63e7cbf
          format: uuid
          type: string
        category:
          description: The error category
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        errors:
          description: further information about the error
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            invalidPropertyName:
            - propertyValue
            missingScopes:
            - scope1
            - scope2
          type: object
        links:
          additionalProperties:
            type: string
          description: A map of link names to associated URIs containing documentation
            about the error or recommended remediation steps
          type: object
      required:
      - category
      - correlationId
      - message
      type: object
    PropertyValue:
      example:
        sourceId: sourceId
        selectedByUser: true
        sourceVid:
        - 1
        - 1
        sourceLabel: sourceLabel
        requestId: requestId
        name: name
        source: IMPORT
        updatedByUserId: 5
        value: value
        sourceMetadata: sourceMetadata
        selectedByUserTimestamp: 6
        timestamp: 0
      properties:
        name:
          type: string
        value:
          type: string
        timestamp:
          format: int64
          type: integer
        sourceId:
          type: string
        sourceLabel:
          type: string
        source:
          enum:
          - IMPORT
          - API
          - FORM
          - ANALYTICS
          - MIGRATION
          - SALESFORCE
          - INTEGRATION
          - CONTACTS_WEB
          - WAL_INCREMENTAL
          - TASK
          - EMAIL
          - WORKFLOWS
          - CALCULATED
          - SOCIAL
          - BATCH_UPDATE
          - SIGNALS
          - BIDEN
          - DEFAULT
          - COMPANIES
          - DEALS
          - ASSISTS
          - PRESENTATIONS
          - TALLY
          - SIDEKICK
          - CRM_UI
          - MERGE_CONTACTS
          - PORTAL_USER_ASSOCIATOR
          - INTEGRATIONS_PLATFORM
          - BCC_TO_CRM
          - FORWARD_TO_CRM
          - ENGAGEMENTS
          - SALES
          - HEISENBERG
          - LEADIN
          - GMAIL_INTEGRATION
          - ACADEMY
          - SALES_MESSAGES
          - AVATARS_SERVICE
          - MERGE_COMPANIES
          - SEQUENCES
          - COMPANY_FAMILIES
          - MOBILE_IOS
          - MOBILE_ANDROID
          - CONTACTS
          - ASSOCIATIONS
          - EXTENSION
          - SUCCESS
          - BOT
          - INTEGRATIONS_SYNC
          - AUTOMATION_PLATFORM
          - CONVERSATIONS
          - EMAIL_INTEGRATION
          - CONTENT_MEMBERSHIP
          - QUOTES
          - BET_ASSIGNMENT
          - QUOTAS
          - BET_CRM_CONNECTOR
          - MEETINGS
          - MERGE_OBJECTS
          - RECYCLING_BIN
          - ADS
          - AI_GROUP
          - COMMUNICATOR
          - SETTINGS
          - PROPERTY_SETTINGS
          - PIPELINE_SETTINGS
          - COMPANY_INSIGHTS
          - BEHAVIORAL_EVENTS
          - PAYMENTS
          - GOALS
          - PORTAL_OBJECT_SYNC
          - APPROVALS
          type: string
        selectedByUser:
          type: boolean
        selectedByUserTimestamp:
          format: int64
          type: integer
        sourceVid:
          items:
            format: int64
            type: integer
          type: array
        sourceMetadata:
          description: "Source metadata encoded as a base64 string. For example: `ZXhhbXBsZSBzdHJpbmc=`"
          type: string
        requestId:
          type: string
        updatedByUserId:
          format: int32
          type: integer
      required:
      - name
      - requestId
      - selectedByUser
      - selectedByUserTimestamp
      - source
      - sourceId
      - sourceLabel
      - sourceMetadata
      - sourceVid
      - timestamp
      - value
      type: object
    BatchInputMarketingEventExternalUniqueIdentifier:
      example:
        inputs:
        - externalAccountId: externalAccountId
          externalEventId: externalEventId
          appId: 0
        - externalAccountId: externalAccountId
          externalEventId: externalEventId
          appId: 0
      properties:
        inputs:
          items:
            $ref: '#/components/schemas/MarketingEventExternalUniqueIdentifier'
          type: array
      required:
      - inputs
      type: object
    EventDetailSettings:
      example:
        appId: 0
        eventDetailsUrl: eventDetailsUrl
      properties:
        appId:
          description: The id of the application the settings are for
          format: int32
          type: integer
        eventDetailsUrl:
          description: The url that will be used to fetch marketing event details
            by id
          type: string
      required:
      - appId
      - eventDetailsUrl
      type: object
    MarketingEventPublicReadResponse:
      example:
        registrants: 0
        eventOrganizer: eventOrganizer
        eventUrl: eventUrl
        attendees: 6
        eventType: eventType
        endDateTime: 2000-01-23T04:56:07.000+00:00
        noShows: 5
        cancellations: 1
        createdAt: 2000-01-23T04:56:07.000+00:00
        startDateTime: 2000-01-23T04:56:07.000+00:00
        customProperties:
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        eventCancelled: true
        externalEventId: externalEventId
        eventDescription: eventDescription
        eventName: eventName
        id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        eventName:
          description: The name of the marketing event.
          type: string
        eventType:
          description: The type of the marketing event.
          type: string
        startDateTime:
          description: The start date and time of the marketing event.
          format: date-time
          type: string
        endDateTime:
          description: The end date and time of the marketing event.
          format: date-time
          type: string
        eventOrganizer:
          description: The name of the organizer of the marketing event.
          type: string
        eventDescription:
          description: The description of the marketing event.
          type: string
        eventUrl:
          description: A URL in the external event application where the marketing
            event can be managed.
          type: string
        eventCancelled:
          description: Indicates if the marketing event has been cancelled.
          type: boolean
        customProperties:
          description: |
            A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
            In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
          items:
            $ref: '#/components/schemas/PropertyValue'
          type: array
        externalEventId:
          description: The id of the marketing event in the external event application.
          type: string
        registrants:
          description: The number of HubSpot contacts that registered for this marketing
            event.
          format: int32
          type: integer
        attendees:
          description: The number of HubSpot contacts that attended this marketing
            event.
          format: int32
          type: integer
        cancellations:
          description: "The number of HubSpot contacts that registered for this marketing\
            \ event, but later cancelled their registration."
          format: int32
          type: integer
        noShows:
          description: "The number of HubSpot contacts that registered for this marketing\
            \ event, but did not attend. This field only had a value when the event\
            \ is over."
          format: int32
          type: integer
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        id:
          type: string
      required:
      - attendees
      - cancellations
      - createdAt
      - eventName
      - eventOrganizer
      - externalEventId
      - id
      - noShows
      - registrants
      - updatedAt
      type: object
    MarketingEventUpdateRequestParams:
      example:
        startDateTime: 2000-01-23T04:56:07.000+00:00
        customProperties:
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        eventCancelled: true
        eventOrganizer: eventOrganizer
        eventUrl: eventUrl
        eventDescription: eventDescription
        eventName: eventName
        eventType: eventType
        endDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        eventName:
          description: The name of the marketing event.
          type: string
        eventType:
          description: "Describes what type of event this is.  For example: `WEBINAR`,\
            \ `CONFERENCE`, `WORKSHOP`"
          type: string
        startDateTime:
          description: The start date and time of the marketing event.
          format: date-time
          type: string
        endDateTime:
          description: The end date and time of the marketing event.
          format: date-time
          type: string
        eventOrganizer:
          description: The name of the organizer of the marketing event.
          type: string
        eventDescription:
          description: The description of the marketing event.
          type: string
        eventUrl:
          description: A URL in the external event application where the marketing
            event can be managed.
          type: string
        eventCancelled:
          description: Indicates if the marketing event has been cancelled. Defaults
            to `false`
          type: boolean
        customProperties:
          description: |
            A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
            In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
          items:
            $ref: '#/components/schemas/PropertyValue'
          type: array
      type: object
    MarketingEventSubscriber:
      example:
        vid: 6
        interactionDateTime: 0
      properties:
        interactionDateTime:
          description: The date and time at which the contact subscribed to the event.
          format: int64
          type: integer
        vid:
          format: int32
          type: integer
      required:
      - interactionDateTime
      type: object
    ErrorDetail:
      example:
        subCategory: subCategory
        code: code
        in: in
        context:
          missingScopes:
          - scope1
          - scope2
        message: message
      properties:
        message:
          description: A human readable message describing the error along with remediation
            steps where appropriate
          type: string
        in:
          description: The name of the field or parameter in which the error was found.
          type: string
        code:
          description: The status code associated with the error detail
          type: string
        subCategory:
          description: A specific category that contains more specific detail about
            the error
          type: string
        context:
          additionalProperties:
            items:
              type: string
            type: array
          description: Context about the error condition
          example:
            missingScopes:
            - scope1
            - scope2
          type: object
      required:
      - message
      type: object
    MarketingEventEmailSubscriber:
      example:
        email: email
        interactionDateTime: 0
      properties:
        interactionDateTime:
          description: The date and time at which the contact subscribed to the event.
          format: int64
          type: integer
        email:
          description: The email address of the contact in HubSpot to associate with
            the event. Note that the contact must already exist in HubSpot; a contact
            will not be created.
          type: string
      required:
      - email
      - interactionDateTime
      type: object
    ErrorCategory:
      example:
        httpStatus: CONTINUE
        name: name
      properties:
        httpStatus:
          enum:
          - CONTINUE
          - SWITCHING_PROTOCOLS
          - PROCESSING
          - OK
          - CREATED
          - ACCEPTED
          - NON_AUTHORITATIVE_INFORMATION
          - NO_CONTENT
          - RESET_CONTENT
          - PARTIAL_CONTENT
          - MULTI_STATUS
          - ALREADY_REPORTED
          - IM_USED
          - MULTIPLE_CHOICES
          - MOVED_PERMANENTLY
          - FOUND
          - SEE_OTHER
          - NOT_MODIFIED
          - USE_PROXY
          - TEMPORARY_REDIRECT
          - PERMANENT_REDIRECT
          - BAD_REQUEST
          - UNAUTHORIZED
          - PAYMENT_REQUIRED
          - FORBIDDEN
          - NOT_FOUND
          - METHOD_NOT_ALLOWED
          - NOT_ACCEPTABLE
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUEST_TIMEOUT
          - CONFLICT
          - GONE
          - LENGTH_REQUIRED
          - PRECONDITION_FAILED
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_URI_TOO_LONG
          - UNSUPPORTED_MEDIA_TYPE
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - EXPECTATION_FAILED
          - IM_A_TEAPOT
          - MISDIRECTED_REQUEST
          - UNPROCESSABLE_ENTITY
          - LOCKED
          - FAILED_DEPENDENCY
          - UPGRADE_REQUIRED
          - PRECONDITION_REQUIRED
          - TOO_MANY_REQUESTS
          - REQUEST_HEADERS_FIELDS_TOO_LARGE
          - INTERNAL_STALE_SERVICE_DISCOVERY
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - INTERNAL_SERVER_ERROR
          - NOT_IMPLEMENTED
          - BAD_GATEWAY
          - SERVICE_UNAVAILABLE
          - GATEWAY_TIMEOUT
          - HTTP_VERSION_NOT_SUPPORTED
          - VARIANT_ALSO_NEGOTIATES
          - INSUFFICIENT_STORAGE
          - LOOP_DETECTED
          - NOT_EXTENDED
          - NETWORK_AUTHENTICATION_REQUIRED
          type: string
        name:
          type: string
      required:
      - httpStatus
      - name
      type: object
    EventDetailSettingsUrl:
      example:
        eventDetailsUrl: eventDetailsUrl
      properties:
        eventDetailsUrl:
          description: "The url that will be used to fetch marketing event details\
            \ by id. Must contain a `%s` character sequence that will be substituted\
            \ with the event id. For example: `https://my.event.app/events/%s`"
          type: string
      required:
      - eventDetailsUrl
      type: object
    BatchInputMarketingEventEmailSubscriber:
      description: List of marketing event details to create or update
      example:
        inputs:
        - email: email
          interactionDateTime: 0
        - email: email
          interactionDateTime: 0
      properties:
        inputs:
          description: List of marketing event details to create or update
          items:
            $ref: '#/components/schemas/MarketingEventEmailSubscriber'
          type: array
      required:
      - inputs
      type: object
    MarketingEventPublicDefaultResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        startDateTime: 2000-01-23T04:56:07.000+00:00
        customProperties:
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        eventCancelled: true
        eventOrganizer: eventOrganizer
        eventUrl: eventUrl
        eventDescription: eventDescription
        eventName: eventName
        eventType: eventType
        id: id
        endDateTime: 2000-01-23T04:56:07.000+00:00
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        eventName:
          description: The name of the marketing event.
          type: string
        eventType:
          description: The type of the marketing event.
          type: string
        startDateTime:
          description: The start date and time of the marketing event.
          format: date-time
          type: string
        endDateTime:
          description: The end date and time of the marketing event.
          format: date-time
          type: string
        eventOrganizer:
          description: The name of the organizer of the marketing event.
          type: string
        eventDescription:
          description: The description of the marketing event.
          type: string
        eventUrl:
          description: A URL in the external event application where the marketing
            event can be managed.
          type: string
        eventCancelled:
          description: Indicates if the marketing event has been cancelled.
          type: boolean
        customProperties:
          description: |
            A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
            In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
          items:
            $ref: '#/components/schemas/PropertyValue'
          type: array
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - eventName
      - eventOrganizer
      - id
      - updatedAt
      type: object
    MarketingEventDefaultResponse:
      example:
        startDateTime: 2000-01-23T04:56:07.000+00:00
        customProperties:
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        - sourceId: sourceId
          selectedByUser: true
          sourceVid:
          - 1
          - 1
          sourceLabel: sourceLabel
          requestId: requestId
          name: name
          source: IMPORT
          updatedByUserId: 5
          value: value
          sourceMetadata: sourceMetadata
          selectedByUserTimestamp: 6
          timestamp: 0
        eventCancelled: true
        eventOrganizer: eventOrganizer
        eventUrl: eventUrl
        eventDescription: eventDescription
        eventName: eventName
        eventType: eventType
        endDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        eventName:
          description: The name of the marketing event.
          type: string
        eventType:
          description: The type of the marketing event.
          type: string
        startDateTime:
          description: The start date and time of the marketing event.
          format: date-time
          type: string
        endDateTime:
          description: The end date and time of the marketing event.
          format: date-time
          type: string
        eventOrganizer:
          description: The name of the organizer of the marketing event.
          type: string
        eventDescription:
          description: The description of the marketing event.
          type: string
        eventUrl:
          description: The URL in the external event application where the marketing
            event can be managed.
          type: string
        eventCancelled:
          description: Indicates if the marketing event has been cancelled.
          type: boolean
        customProperties:
          description: |
            A list of PropertyValues. These can be whatever kind of property names and values you want. However, they must already exist on the HubSpot account's definition of the MarketingEvent Object. If they don't they will be filtered out and not set.
            In order to do this you'll need to create a new PropertyGroup on the HubSpot account's MarketingEvent object for your specific app and create the Custom Property you want to track on that HubSpot account. Do not create any new default properties on the MarketingEvent object as that will apply to all HubSpot accounts.
          items:
            $ref: '#/components/schemas/PropertyValue'
          type: array
      required:
      - eventName
      - eventOrganizer
      type: object
    MarketingEventExternalUniqueIdentifier:
      example:
        externalAccountId: externalAccountId
        externalEventId: externalEventId
        appId: 0
      properties:
        appId:
          description: The id of the application that created the marketing event
            in HubSpot.
          format: int32
          type: integer
        externalAccountId:
          description: The accountId that is associated with this marketing event
            in the external event application.
          type: string
        externalEventId:
          description: The id of the marketing event in the external event application.
          type: string
      required:
      - appId
      - externalAccountId
      - externalEventId
      type: object
    BatchInputMarketingEventSubscriber:
      description: List of HubSpot contacts to subscribe to the marketing event
      example:
        inputs:
        - vid: 6
          interactionDateTime: 0
        - vid: 6
          interactionDateTime: 0
      properties:
        inputs:
          description: List of HubSpot contacts to subscribe to the marketing event
          items:
            $ref: '#/components/schemas/MarketingEventSubscriber'
          type: array
      required:
      - inputs
      type: object
    BatchResponseMarketingEventPublicDefaultResponse:
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        numErrors: 0
        requestedAt: 2000-01-23T04:56:07.000+00:00
        startedAt: 2000-01-23T04:56:07.000+00:00
        links:
          key: links
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          startDateTime: 2000-01-23T04:56:07.000+00:00
          customProperties:
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          eventCancelled: true
          eventOrganizer: eventOrganizer
          eventUrl: eventUrl
          eventDescription: eventDescription
          eventName: eventName
          eventType: eventType
          id: id
          endDateTime: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          startDateTime: 2000-01-23T04:56:07.000+00:00
          customProperties:
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          - sourceId: sourceId
            selectedByUser: true
            sourceVid:
            - 1
            - 1
            sourceLabel: sourceLabel
            requestId: requestId
            name: name
            source: IMPORT
            updatedByUserId: 5
            value: value
            sourceMetadata: sourceMetadata
            selectedByUserTimestamp: 6
            timestamp: 0
          eventCancelled: true
          eventOrganizer: eventOrganizer
          eventUrl: eventUrl
          eventDescription: eventDescription
          eventName: eventName
          eventType: eventType
          id: id
          endDateTime: 2000-01-23T04:56:07.000+00:00
          updatedAt: 2000-01-23T04:56:07.000+00:00
        errors:
        - subCategory: "{}"
          context:
            key:
            - context
            - context
          links:
            key: links
          id: id
          category:
            httpStatus: CONTINUE
            name: name
          message: message
          errors:
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          status: status
        - subCategory: "{}"
          context:
            key:
            - context
            - context
          links:
            key: links
          id: id
          category:
            httpStatus: CONTINUE
            name: name
          message: message
          errors:
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          - subCategory: subCategory
            code: code
            in: in
            context:
              missingScopes:
              - scope1
              - scope2
            message: message
          status: status
        status: PENDING
      properties:
        status:
          enum:
          - PENDING
          - PROCESSING
          - CANCELED
          - COMPLETE
          type: string
        results:
          items:
            $ref: '#/components/schemas/MarketingEventPublicDefaultResponse'
          type: array
        numErrors:
          format: int32
          type: integer
        errors:
          items:
            $ref: '#/components/schemas/StandardError'
          type: array
        requestedAt:
          format: date-time
          type: string
        startedAt:
          format: date-time
          type: string
        completedAt:
          format: date-time
          type: string
        links:
          additionalProperties:
            type: string
          type: object
      required:
      - completedAt
      - results
      - startedAt
      - status
      type: object
  securitySchemes:
    oauth2_legacy:
      flows:
        authorizationCode:
          authorizationUrl: https://app.hubspot.com/oauth/authorize
          scopes:
            crm.objects.marketing_events.write: Write marketing events
            crm.objects.marketing_events.read: Read marketing events
          tokenUrl: https://api.hubapi.com/oauth/v1/token
      type: oauth2
    hapikey:
      in: query
      name: hapikey
      type: apiKey
    developer_hapikey:
      in: query
      name: hapikey
      type: apiKey
