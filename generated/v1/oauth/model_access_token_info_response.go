/*
OAuthService

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package oauth

import (
	"encoding/json"
)

// AccessTokenInfoResponse struct for AccessTokenInfoResponse
type AccessTokenInfoResponse struct {
	Token                     string   `json:"token"`
	User                      *string  `json:"user,omitempty"`
	HubDomain                 *string  `json:"hub_domain,omitempty"`
	Scopes                    []string `json:"scopes"`
	ScopeToScopeGroupPks      []int32  `json:"scope_to_scope_group_pks"`
	TrialScopes               []string `json:"trial_scopes"`
	TrialScopeToScopeGroupPks []int32  `json:"trial_scope_to_scope_group_pks"`
	HubId                     int32    `json:"hub_id"`
	AppId                     int32    `json:"app_id"`
	ExpiresIn                 int32    `json:"expires_in"`
	UserId                    int32    `json:"user_id"`
	TokenType                 string   `json:"token_type"`
}

// NewAccessTokenInfoResponse instantiates a new AccessTokenInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTokenInfoResponse(token string, scopes []string, scopeToScopeGroupPks []int32, trialScopes []string, trialScopeToScopeGroupPks []int32, hubId int32, appId int32, expiresIn int32, userId int32, tokenType string) *AccessTokenInfoResponse {
	this := AccessTokenInfoResponse{}
	this.Token = token
	this.Scopes = scopes
	this.ScopeToScopeGroupPks = scopeToScopeGroupPks
	this.TrialScopes = trialScopes
	this.TrialScopeToScopeGroupPks = trialScopeToScopeGroupPks
	this.HubId = hubId
	this.AppId = appId
	this.ExpiresIn = expiresIn
	this.UserId = userId
	this.TokenType = tokenType
	return &this
}

// NewAccessTokenInfoResponseWithDefaults instantiates a new AccessTokenInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenInfoResponseWithDefaults() *AccessTokenInfoResponse {
	this := AccessTokenInfoResponse{}
	return &this
}

// GetToken returns the Token field value
func (o *AccessTokenInfoResponse) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *AccessTokenInfoResponse) SetToken(v string) {
	o.Token = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AccessTokenInfoResponse) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AccessTokenInfoResponse) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *AccessTokenInfoResponse) SetUser(v string) {
	o.User = &v
}

// GetHubDomain returns the HubDomain field value if set, zero value otherwise.
func (o *AccessTokenInfoResponse) GetHubDomain() string {
	if o == nil || o.HubDomain == nil {
		var ret string
		return ret
	}
	return *o.HubDomain
}

// GetHubDomainOk returns a tuple with the HubDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetHubDomainOk() (*string, bool) {
	if o == nil || o.HubDomain == nil {
		return nil, false
	}
	return o.HubDomain, true
}

// HasHubDomain returns a boolean if a field has been set.
func (o *AccessTokenInfoResponse) HasHubDomain() bool {
	if o != nil && o.HubDomain != nil {
		return true
	}

	return false
}

// SetHubDomain gets a reference to the given string and assigns it to the HubDomain field.
func (o *AccessTokenInfoResponse) SetHubDomain(v string) {
	o.HubDomain = &v
}

// GetScopes returns the Scopes field value
func (o *AccessTokenInfoResponse) GetScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Scopes, true
}

// SetScopes sets field value
func (o *AccessTokenInfoResponse) SetScopes(v []string) {
	o.Scopes = v
}

// GetScopeToScopeGroupPks returns the ScopeToScopeGroupPks field value
func (o *AccessTokenInfoResponse) GetScopeToScopeGroupPks() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.ScopeToScopeGroupPks
}

// GetScopeToScopeGroupPksOk returns a tuple with the ScopeToScopeGroupPks field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetScopeToScopeGroupPksOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScopeToScopeGroupPks, true
}

// SetScopeToScopeGroupPks sets field value
func (o *AccessTokenInfoResponse) SetScopeToScopeGroupPks(v []int32) {
	o.ScopeToScopeGroupPks = v
}

// GetTrialScopes returns the TrialScopes field value
func (o *AccessTokenInfoResponse) GetTrialScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TrialScopes
}

// GetTrialScopesOk returns a tuple with the TrialScopes field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetTrialScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialScopes, true
}

// SetTrialScopes sets field value
func (o *AccessTokenInfoResponse) SetTrialScopes(v []string) {
	o.TrialScopes = v
}

// GetTrialScopeToScopeGroupPks returns the TrialScopeToScopeGroupPks field value
func (o *AccessTokenInfoResponse) GetTrialScopeToScopeGroupPks() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.TrialScopeToScopeGroupPks
}

// GetTrialScopeToScopeGroupPksOk returns a tuple with the TrialScopeToScopeGroupPks field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetTrialScopeToScopeGroupPksOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrialScopeToScopeGroupPks, true
}

// SetTrialScopeToScopeGroupPks sets field value
func (o *AccessTokenInfoResponse) SetTrialScopeToScopeGroupPks(v []int32) {
	o.TrialScopeToScopeGroupPks = v
}

// GetHubId returns the HubId field value
func (o *AccessTokenInfoResponse) GetHubId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.HubId
}

// GetHubIdOk returns a tuple with the HubId field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetHubIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HubId, true
}

// SetHubId sets field value
func (o *AccessTokenInfoResponse) SetHubId(v int32) {
	o.HubId = v
}

// GetAppId returns the AppId field value
func (o *AccessTokenInfoResponse) GetAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *AccessTokenInfoResponse) SetAppId(v int32) {
	o.AppId = v
}

// GetExpiresIn returns the ExpiresIn field value
func (o *AccessTokenInfoResponse) GetExpiresIn() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetExpiresInOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresIn, true
}

// SetExpiresIn sets field value
func (o *AccessTokenInfoResponse) SetExpiresIn(v int32) {
	o.ExpiresIn = v
}

// GetUserId returns the UserId field value
func (o *AccessTokenInfoResponse) GetUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *AccessTokenInfoResponse) SetUserId(v int32) {
	o.UserId = v
}

// GetTokenType returns the TokenType field value
func (o *AccessTokenInfoResponse) GetTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenType
}

// GetTokenTypeOk returns a tuple with the TokenType field value
// and a boolean to check if the value has been set.
func (o *AccessTokenInfoResponse) GetTokenTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenType, true
}

// SetTokenType sets field value
func (o *AccessTokenInfoResponse) SetTokenType(v string) {
	o.TokenType = v
}

func (o AccessTokenInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["token"] = o.Token
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.HubDomain != nil {
		toSerialize["hub_domain"] = o.HubDomain
	}
	if true {
		toSerialize["scopes"] = o.Scopes
	}
	if true {
		toSerialize["scope_to_scope_group_pks"] = o.ScopeToScopeGroupPks
	}
	if true {
		toSerialize["trial_scopes"] = o.TrialScopes
	}
	if true {
		toSerialize["trial_scope_to_scope_group_pks"] = o.TrialScopeToScopeGroupPks
	}
	if true {
		toSerialize["hub_id"] = o.HubId
	}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if true {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if true {
		toSerialize["user_id"] = o.UserId
	}
	if true {
		toSerialize["token_type"] = o.TokenType
	}
	return json.Marshal(toSerialize)
}

type NullableAccessTokenInfoResponse struct {
	value *AccessTokenInfoResponse
	isSet bool
}

func (v NullableAccessTokenInfoResponse) Get() *AccessTokenInfoResponse {
	return v.value
}

func (v *NullableAccessTokenInfoResponse) Set(val *AccessTokenInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTokenInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTokenInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTokenInfoResponse(val *AccessTokenInfoResponse) *NullableAccessTokenInfoResponse {
	return &NullableAccessTokenInfoResponse{value: val, isSet: true}
}

func (v NullableAccessTokenInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTokenInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
